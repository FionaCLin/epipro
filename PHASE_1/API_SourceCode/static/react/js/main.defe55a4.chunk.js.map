{"version":3,"sources":["imgs/frequency.png","imgs/heatmap.png","imgs/event.png","imgs/media.png","imgs/trends.png","API.tsx","components/Header.tsx","components/Home.tsx","components/TimeSearch.tsx","components/ArticleCard.tsx","components/util.tsx","components/ArticleList.tsx","components/LocationSearch.tsx","components/KeytermSearch.tsx","components/PaginateSearch.tsx","components/Search.tsx","components/EventReport.tsx","components/EventReportList.tsx","components/Report.tsx","components/ReportList.tsx","components/Article.tsx","components/DiseaseSearch.tsx","components/Tooltip.tsx","components/FrequencyFormat.tsx","components/FrequencyGraph.tsx","components/Marker.tsx","components/Heatmap.tsx","components/HistogramGraph.tsx","components/PageMenu.tsx","components/Analytics.tsx","Google.tsx","components/GoogleCard.tsx","components/GoogleCardList.tsx","components/TweetList.tsx","components/MediaCoverage.tsx","components/Trends.tsx","App.tsx","index.tsx","imgs/loading1.gif","imgs/logo.png"],"names":["module","exports","__webpack_require__","p","BackendAPI","Object","classCallCheck","this","baseURL","createClass","key","value","type","cb","axios","get","concat","then","response","data","catch","error","keyword","filter","q","location","push","keyterms","startDate","endDate","url","query","join","console","log","analytic","disease","country","code","UNLOCodes","indexOf","CountryName","length","CountryCode","Twitter","twitterData","tweets","api","Header","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","api_doc_url","_this2","doc_url","getAPIdocURL","message","setState","react_default","a","createElement","Navbar","className","variant","expand","react_router_dom","to","Brand","src","logo","height","width","alt","Nav","Link","href","onClick","sessionStorage","removeItem","target","React","Component","Home","Header_Header","defaultProps","username","password","TimeSearch","maxDate","Date","minDate","isUndefined","isNull","changeMinMaxDate","event","dateType","timeState","updateTime","newDate","newMinMax","style","float","es","selected","selectsStart","dateFormat","onChange","e","handleChange","placeholderText","selectsEnd","ArticleCard","main_text","cutCount","charAt","substring","pathname","Card","Body","Title","headline","Subtitle","date_of_publication","Text","trimText","parseDates","date","stringifyDates","temp","setSeconds","getSeconds","setDate","getDate","getTime","getTimezoneOffset","toISOString","slice","cleanLocations","locations","i","multiLocation","createApiFilterState","isNullOrUndefined","undefined","cleanDate","shortenDate","split","reverse","capitalize","word","toUpperCase","ArticleList","articleList","map","articleData","ArticleCard_ArticleCard","loading","listLength","showResultsLength","showArticleList","checkLoading","checkResults","LocationSearch","values","filterOptions","getLocations","createFilterOptions","_this3","createLocationLabel","elem","index","self","label","locationLabel","city","option","updateLocation","_this4","react_select_esm","isMulti","options","sort","b","localeCompare","classNamePrefix","placeholder","theme","objectSpread","borderRadius","colors","primary25","primary","filterTypes","KeytermSearch","addFilterOptions","updateKeyterm","filterType","getKeyTerms","newKeyterms","keyterm","name","Creatable_default","isClearable","pageMargin","Math","floor","pageDisplayLimit","PaginateSearch","totalPages","articleCount","ceil","showCount","count","last","currentPage","pageNums","active","pageNum","Pagination","Item","changePage","newPage","updatePaginate","animateScrollTo","calculateTotalPages","disableFirst","disableLast","First","disabled","Prev","createPageItems","Next","Last","showPagination","Search","sessionSearch","getItem","title","sessionState","JSON","parse","bind","assertThisInitialized","onSearch","apiFilterState","getFilteredReports","setItem","stringify","end","start","id","KeytermSearch_KeytermSearch","LocationSearch_LocationSearch","TimeSearch_TimeSearch","Button","Form","ArticleList_ArticleList","paginateArticleList","PaginateSearch_PaginateSearch","EventReport","cleanLocation","locationArray","replace","colSpan","affected","checkColSpan","Table","striped","bordered","hover","marginBottom","checkType","checkDate","checkLocation","checkNumberAffected","EventReportList","reports","report","EventReport_EventReport","Report","check","listProp","Array","isArray","item","Badge","reported_events","EventReportList_EventReportList","listCheck","syndrome","commentCheck","comment","ReportList","getAllReports","ListGroup","Report_Report","Article","renderRedirect","react_router","ReportList_ReportList","DiseaseSearch","getDiseases","updateDisease","Tooltip","OverlayTrigger","trigger","placement","overlay","description","Popover","maxWidth","types","WHO","Google","FrequencyFormat","Tooltip_Tooltip","es6","chartData","position","offset","dataKey","angle","allowDecimals","strokeDasharray","layout","align","wrapperStyle","paddingTop","activeDot","stroke","frequencyFilters","FrequencyGraph","frequencyFilter","frequencyData","newProps","interval","start_date","end_date","newFrequency","counterDate","getFullYear","getMonth","setMonth","_loop","countStr","forEach","countInd","countInterval","found","num","freqType","setFullYear","formatXAxis","FrequencyFormat_FrequencyFormat","titleType","cleanChartData","convertFrequency","defaultChecked","marginLeft","Marker","collapse","checkHover","$hover","number_affected","article_count","mapsAPIkey","HeatMap","bounds","google","maps","LatLngBounds","center","lat","lng","zoom","marker","extend","LatLng","newBounds","ne","getNorthEast","sw","getSouthWest","_fitBounds","fitBounds","_this$calculateBounds","calculateBounds","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","heatmapLibrary","heatmap","positions","radius","opacity","Marker_Marker","assignWeight","numberAffected","weightValues","HistogramGraph","graphRange","histogramData","createGraphRange","events","fill","PageMenu","cardStyle","backgroundColor","color","margin","textAlign","CardDeck","Img","frequency","media","trends","epiAPI","sections","geoCoder","Geocoder","Analytics","sessionAnalyze","heatmapPositions","displaySection","onAnalyze","getAnalyticReport","createHeatMapData","heat_map","createFrequencyData","frequency_graph","createHistogramData","event_graph","apiEvent","histogramEvents","apiHeatmap","geocode","address","results","status","weight","GeocoderStatus","OK","geometry","apiFrequency","setHours","endStr","freqArray","sameDate","section","display","DiseaseSearch_DiseaseSearch","checkInputs","ButtonGroup","vertical","size","changeSection","FrequencyGraph_FrequencyGraph","Heatmap_HeatMap","HistogramGraph_HistogramGraph","PageMenu_PageMenu","GoogleAPI","apiKey","GoogleCard","minCut","urlToImage","textDecoration","fontSize","source","publishedAt","marginTop","GoogleCardList","reverseSortData","as","maxHeight","overflowY","marginRight","GoogleCard_GoogleCard","TweetList","tweet_embed_es","MediaCoverage","GoogleCardList_GoogleCardList","googleData","TweetList_TweetList","tweetData","newsAPI","gSections","div","widget","Trends","sessionTrends","googleArticles","googleCheck","twitterCheck","onTrends","getGoogleData","getGoogleTrends","geo","lastIndexOf","getUNLOCode","widgetCalls","document","getElementById","innerHTML","embed","renderExploreWidgetTo","comparisonItem","time","category","property","exploreQuery","guestPath","dateArray","countStart","countEnd","getFilteredMedia","articles","totalResults","diseaseTweets","getTwitterData","newTweets","filtered","text","filterByLocation","_loop2","matched","ids","createDateArray","currentDate","monthBack","MediaCoverage_MediaCoverage","App","exact","path","component","ReactDOM","render","App_App"],"mappings":"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","file":"js/main.defe55a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/frequency.87eaf39a.png\";","module.exports = __webpack_public_path__ + \"media/heatmap.66d31c20.png\";","module.exports = __webpack_public_path__ + \"media/event.065f5e3e.png\";","module.exports = __webpack_public_path__ + \"media/media.e90e1548.png\";","module.exports = __webpack_public_path__ + \"media/trends.c140a701.png\";","import axios, { AxiosResponse, AxiosError } from \"axios\";\nimport UNLOCodes from './dummydata/country-codes.json';\nimport Twitter from './dummydata/twitter.json';\n\n\nexport interface IFilterOptions {\n  keyterms?: string;\n  disease?: string;\n  location: string;\n  startDate: string;\n  endDate: string;\n}\n\nexport class BackendAPI {\n  baseURL: string = 'https://epiproapp.appspot.com/'\n  getKeyTerms(type: string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/key-terms/${type}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getLocations(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/locations/all`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getLocationsByKeyword(keyword: string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/locations/${keyword}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAllReports(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/filter`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAPIdocURL(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/doc-url`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n      });\n  }\n\n  getFilteredReports(filter: IFilterOptions, cb: (err: any, res: any) => any) {\n    let q: string[] = [];\n    if (filter.location) {\n      q.push(`Location=${filter.location}`)\n    }\n    if (filter.keyterms) {\n      q.push(`Key-terms=${filter.keyterms}`)\n    }\n    if (filter.startDate) {\n      q.push(`Start-date=${filter.startDate}`)\n    }\n    if (filter.endDate) {\n      q.push(`End-date=${filter.endDate}`)\n    }\n    q.push(`Limit=300`);\n    let url = '';\n\n    let query = q.join('&')\n    url = `${this.baseURL}api/v1/reports/filter?${query}`\n\n    console.log(url);\n\n    axios.get(url)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n        console.log(\"CALL ERROR\");\n      });\n  }\n\n  getAnalyticReport(analytic: IFilterOptions, cb: (err: any, res: any) => any) {\n    let q: string[] = [];\n    if (analytic.location) {\n      q.push(`Location=${analytic.location}`)\n    }\n    if (analytic.disease) {\n      q.push(`Disease=${analytic.disease}`)\n    }\n    if (analytic.startDate) {\n      q.push(`Start-date=${analytic.startDate}`)\n    }\n    if (analytic.endDate) {\n      q.push(`End-date=${analytic.endDate}`)\n    }\n\n    let url = '';\n\n    let query = q.join('&')\n    url = `${this.baseURL}api/v1/analytics?${query}`\n\n    console.log(url);\n\n    axios.get(url)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n        console.log(\"CALL ERROR\");\n      });\n  }\n\n  getDiseases(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/diseases/all`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getUNLOCode(country: string) {\n    let code = UNLOCodes.filter(value => country.indexOf(value.CountryName) != -1);\n    if (code.length == 0) {\n      return '';\n    } else {\n      return code[0].CountryCode;\n    }\n  }\n\n  getTwitterData(disease: string) {\n    console.log(Twitter);\n    let twitterData = Twitter.filter(value => value.disease == disease);\n    if (twitterData.length == 0) return [];\n    return twitterData[0].tweets;\n  }\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport logo from '../imgs/logo.png';\nimport { Link } from 'react-router-dom';\nimport { BackendAPI } from '../API';\n\nlet api = new BackendAPI();\n\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\n    constructor(props: IHeaderProps) {\n        super(props);\n        this.state = {\n            api_doc_url: ''\n        };\n    }\n\n    componentWillMount() {\n        let doc_url:string='';\n        api.getAPIdocURL((error: any, response: any) => {\n            if (error) {\n                if (error.response) {\n                let message = error.response.data.message\n                console.log(message, 'ppp');\n                } else {\n                console.log(error.message, 'ppp');\n                }\n                return\n            }\n            doc_url = response;\n            this.setState({api_doc_url: doc_url})\n        });\n    }\n\n    render() {\n        return (\n            <Navbar className=\"App-theme\" variant=\"dark\" expand=\"lg\">\n                <Link to=\"/\">\n                    <Navbar.Brand>\n                        <img src={logo} className=\"d-inline-block align-top\" height=\"30\" width=\"30\" alt=\"logo\" />\n                        {' EpiPro'}\n                    </Navbar.Brand>\n                </Link>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link><Link to=\"/search\" className=\"link\">Search</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/analyze\" className=\"link\">Analyze</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/trends\" className=\"link\">Trends</Link></Nav.Link>\n                    <Nav.Link href={this.state.api_doc_url} onClick={() => sessionStorage.removeItem('search')} target=\"_blank\">API Doc</Nav.Link>\n                </Nav>\n            </Navbar>\n        );\n    }\n}\n\ninterface IHeaderProps {\n}\n\ninterface IHeaderState {\n    api_doc_url: string;\n}","import React from 'react';\nimport logo from '../imgs/logo.png';\nimport '../css/Home.css';\nimport Header from './Header';\n\nexport default class Home extends React.Component<IHomeProps, IHomeState> {\n    constructor(props: IHomeProps) {\n        super(props);\n    }\n\n    static defaultProps = {\n        username: 'admin',\n        password: 'EpiProBreak219'\n    }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <Header />\n        <body>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Welcome to EpiPro</h1>\n            <h3>Predict. Prevent. Protect.</h3>\n          </header>\n        </body>\n      </div>\n    );\n  }\n}\n\ninterface IHomeProps {\n}\n\ninterface IHomeState {\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport DatePicker from 'react-datepicker';\nimport { isNull, isUndefined } from 'util';\n\nexport default class TimeSearch extends React.Component<ITimeSearchProps, ITimeSearchState> {\n    constructor(props: ITimeSearchProps) {\n        super(props);\n        this.state = {\n            startDate: this.props.startDate,\n            endDate: this.props.endDate,\n            maxDate: new Date(),\n            minDate: (!isUndefined(this.props.minDate)) ? this.props.minDate : null\n        }\n        if (!isNull(this.state.startDate)) this.changeMinMaxDate(this.state.startDate, 'startDate');\n        if (!isNull(this.state.endDate)) this.changeMinMaxDate(this.state.endDate, 'endDate');\n    }\n    \n    private handleChange(event: Date | null, dateType: string) {\n        let timeState: any = {};\n        timeState[dateType] = event;\n        this.setState(timeState);\n        this.changeMinMaxDate(event, dateType);\n        this.props.updateTime(timeState);\n    }\n\n    private changeMinMaxDate(newDate: Date | null, dateType: string) {\n        let newMinMax: any = {\n        minDate: null,\n        maxDate: new Date()\n        }\n\n        if (!isNull(newDate)) {\n            if (dateType == 'startDate') newMinMax['minDate'] = newDate;\n            else newMinMax['maxDate'] = newDate;\n        }\n\n        this.setState(newMinMax);\n    }\n\n    render() {\n        return (\n        <div style={{float: 'left'}}>\n            <div className=\"Date-picker\">\n                <DatePicker\n                selected={this.state.startDate}\n                selectsStart\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                dateFormat=\"dd/MM/yyyy\"\n                minDate={this.props.minDate}\n                maxDate={this.state.maxDate}\n                onChange={(e:any) => this.handleChange(e, 'startDate')}\n                placeholderText='Start Date'\n                />\n            </div>\n            <div className=\"Date-picker\">\n            <DatePicker\n                selected={this.state.endDate}\n                selectsEnd\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                dateFormat=\"dd/MM/yyyy\"\n                minDate={this.state.minDate}\n                maxDate={new Date()}\n                onChange={(e:any) => this.handleChange(e, 'endDate')}\n                placeholderText='End Date'\n            />\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface ITimeSearchProps {\n    updateTime: (event: object) => void;\n    startDate: Date | null;\n    endDate: Date | null;\n    minDate?: Date;\n}\n\ninterface ITimeSearchState {\n    startDate: Date | null;\n    endDate: Date | null;\n    minDate: Date | null,\n    maxDate: Date \n}","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Search.css';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Report from './Report';\n\nexport default class ArticleCard extends React.Component<IArticleCardProps, IArticleCardState> {\n    constructor(props: IArticleCardProps) {\n        super(props);\n    }\n\n    private trimText(main_text: string) {\n        let cutCount: number = main_text.length;\n        const minCut: number = 500;\n\n        if (cutCount > minCut) {\n        cutCount = minCut;\n            while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n                cutCount++;\n            }\n        }\n        return main_text.substring(0, cutCount);\n    }\n    \n    render() {\n        return (\n        <div>\n            <Link to={{\n                pathname:'/article',\n                state: this.props\n                }}\n                className=\"link\"\n\n            >\n            <Card>\n                <div className=\"Card-hover\">\n                    <Card.Body>\n                        <Card.Title className='Card-title'><h3>{ this.props.headline }</h3></Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">\n                            <i>{ this.props.url } • { this.props.date_of_publication }</i>\n                        </Card.Subtitle>\n                        <Card.Text>{ this.trimText(this.props.main_text) }...</Card.Text>\n                    </Card.Body>\n                </div>\n            </Card>\n            </Link>\n        </div>\n        );\n    }\n}\n\ninterface IArticleCardProps {\n    url: string;\n    date_of_publication: string;\n    headline: string;\n    main_text: string;\n    reports: Array<Report>;\n}\n\ninterface IArticleCardState {    \n}","import { isNull, isNullOrUndefined } from 'util';\n\nexport function parseDates(date: string | null) {\n    return (!isNull(date) ? new Date(date) : date);\n}\n\nexport function stringifyDates(date: Date | null, dateType: string) {\n    let temp = (!isNull(date)) ? new Date(date) : date;\n    if (!isNull(temp)) {\n        if (dateType == 'endDate') {\n            temp.setSeconds(temp.getSeconds() - 1);\n            temp.setDate(temp.getDate() + 1);\n        }\n        temp = new Date(temp.getTime() - (temp.getTimezoneOffset() * 60000));\n    }\n    return (!isNull(temp) ? temp.toISOString().slice(0, -5) : '');\n}\n\nfunction cleanLocations(locations: Array<string>) {\n    let cleanLocations = [];\n    for (let i = 0; i < locations.length; i++) {\n        let multiLocation = locations[i].indexOf(',');\n        let temp = locations[i];\n        if (multiLocation != -1) {\n            temp = temp.substring(0, multiLocation);\n        }\n        cleanLocations.push(temp);\n    }\n    return cleanLocations.join(', ');\n}\n\nexport function createApiFilterState(state: any) {\n    return ({\n        keyterms: !isNullOrUndefined(state.keyterms) ? state.keyterms.join(',') : undefined,\n        disease: state.disease,\n        location: cleanLocations(state.locations),\n        startDate: stringifyDates(state.startDate, 'startDate'),\n        endDate: stringifyDates(state.endDate, 'endDate')\n    })\n}\n\nexport function cleanDate(date: string) {\n    return shortenDate(date)\n                .split('-')\n                .reverse()\n                .join('/');\n}\n\nexport function shortenDate(date: string) {\n    return date.substring(0, date.indexOf('T'));\n}\n\nexport function capitalize(word: string) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n}","import React from 'react';\nimport '../css/Basic.css';\nimport ArticleCard from './ArticleCard';\nimport { isNullOrUndefined, isNull, isUndefined } from 'util';\nimport loading from '../imgs/loading1.gif';\nimport { cleanDate } from './util';\nimport { IArticleState } from './Article';\n\nexport default class ArticleList extends React.Component<IArticleListProps, IArticleListState> {\n    constructor(props: IArticleListProps) {\n        super(props);\n    }\n\n    private showArticleList() {\n        if (!isNullOrUndefined(this.props.articleList)) {\n            return this.props.articleList.map((articleData: IArticleState) => {\n                console.log(articleData);\n                articleData.date_of_publication = cleanDate(articleData.date_of_publication);\n                return <ArticleCard {...articleData}/>;\n            });\n        }\n    }\n\n    private checkLoading() {\n        if (isNull(this.props.articleList)) return <img src={loading} className=\"loading\" alt=\"loading\" />;\n    }\n\n    private checkResults() {\n        if (!isNullOrUndefined(this.props.articleList) && this.props.articleList.length == 0) {\n            return <p>No results found.</p>;\n        } else if (isUndefined(this.props.articleList)) {\n            return <p></p>;\n        }\n    }\n\n    private showResultsLength() {\n        if (!isNullOrUndefined(this.props.articleList) && this.props.articleList.length != 0) {\n            return <p>{this.props.listLength} matching articles found.</p>;\n        }\n    }\n\n    render() {\n        return (\n\n        <div>\n            {this.showResultsLength()}\n            {this.showArticleList()}\n            {this.checkLoading()}\n            {this.checkResults()}\n            <br />\n        </div>\n        );\n    }\n}\n\ninterface IArticleListProps {\n    articleList: Array<IArticleState> | null | undefined;\n    listLength: number;\n}\n\ninterface IArticleListState {\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport Select from 'react-select';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\nexport default class LocationSearch extends React.Component<ILocationSearchProps, ILocationSearchState> {\n    constructor(props: ILocationSearchProps) {\n        super(props);\n\n        this.state = {\n            values: this.props.locations,\n            filterOptions: []\n        }\n    }\n\n    componentWillMount() {\n        api.getLocations((error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                let filterOptions: Array<Object> = this.createFilterOptions(response);\n\n                this.setState({filterOptions});\n            }\n        });\n    }\n\n    private createFilterOptions(locations: Array<any>) {\n        let filteredLocations: Array<string> = [];\n\n        filteredLocations = locations.map((location: Location) => this.createLocationLabel(location));\n        filteredLocations = filteredLocations.filter(function(elem, index, self) {\n            return index === self.indexOf(elem);\n        });\n\n        return filteredLocations.map((location: string, index: number) => ({\n            label: location,\n            value: location\n        }));\n    }\n\n    private createLocationLabel(location: Location) {\n        let locationLabel: string = '';\n        \n        if (location.city.length != 0) locationLabel = locationLabel.concat(location.city, \", \");\n        if (location.state.length != 0) locationLabel = locationLabel.concat(location.state, \", \");\n        if (location.country.length != 0) locationLabel = locationLabel.concat(location.country);\n    \n        return locationLabel;\n    }\n\n    private handleChange(event: Array<any>) {\n        let values: Array<String> = event.map(option => (option.label));\n        this.setState({ values });\n        this.props.updateLocation({ locations: values });\n    }\n\n    render() {\n        return (\n        <div className=\"Search-element\">\n            <Select\n            isMulti\n            options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n            className=\"basic-multi-select\"\n            classNamePrefix=\"select\"\n            placeholder=\"Select location...\"\n            onChange={(e: any) => this.handleChange(e)}\n            value={this.state.values.map((value: String) => { return { label: value, value }})}\n            theme={(theme) => ({\n                ...theme,\n                borderRadius: 3,\n                colors: {\n                ...theme.colors,\n                primary25: 'rgb(162, 156, 194)',\n                primary: 'rgb(162, 156, 194)',\n                },\n            })}\n            />\n        </div>\n        );\n    }\n}\n\ninterface ILocationSearchProps {\n    updateLocation: (event: object) => void;\n    locations: Array<string>;\n}\n\ninterface ILocationSearchState {\n    values: Array<String>;\n    filterOptions: Array<Object>\n}\n\ninterface Location {\n    city: string;\n    state: string;\n    country: string;\n}\n","import React from 'react';\nimport '../css/Search.css';\nimport '../css/Basic.css';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\nconst filterTypes: Array<any> = ['general', 'specific'];\n\nexport default class KeytermSearch extends React.Component<IKeytermSearchProps, IKeytermSearchState> {\n    constructor(props: IKeytermSearchProps) {\n        super(props);\n\n        this.state = {\n            values: this.props.keyterms,\n            filterOptions: [],\n        }\n    }\n\n    componentWillMount() {\n        this.addFilterOptions(filterTypes[1]);\n        this.addFilterOptions(filterTypes[0]);\n    }\n\n    private handleChange(event: Array<any>) {\n        console.log(event);\n        let values: Array<String> = event.map(option => (option.label));\n        this.setState({ values });\n        this.props.updateKeyterm(({ keyterms: values }));\n    }\n\n    private addFilterOptions(filterType: string) {\n        api.getKeyTerms(filterType, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            }\n\n            let newKeyterms: Array<any> = response.map((keyterm: any) => ({\n                label: keyterm.name,\n                value: keyterm.name\n            }));\n\n            this.setState({\n                filterOptions: this.state.filterOptions.concat(newKeyterms)\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Search-element\">\n                <CreatableSelect\n                    isMulti\n                    isClearable\n                    options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n                    className=\"basic-multi-select select-menu\"\n                    classNamePrefix=\"select\"\n                    placeholder=\"Select keyterms...\"\n                    onChange={(e: any) => this.handleChange(e)}\n                    value={this.state.values.map((value: String) => { return { label: value, value }})}\n                    theme={(theme) => ({\n                        ...theme,\n                        borderRadius: 3,\n                        colors: {\n                        ...theme.colors,\n                          primary25: 'rgb(162, 156, 194)',\n                          primary: 'rgb(162, 156, 194)',\n                        },\n                      })}\n                />\n            </div>\n        );\n    }\n}\n\ninterface IKeytermSearchProps {\n    keyterms: Array<String>;\n    updateKeyterm: (event: object) => void;\n}\n\ninterface IKeytermSearchState {\n    values: Array<String>;\n    filterOptions: Array<Object>;\n}\n","import React from 'react';\nimport '../css/Search.css';\nimport { Pagination } from 'react-bootstrap';\nimport { isNull } from 'util';\nimport animateScrollTo from 'animated-scroll-to';\n\nconst pageDisplayLimit: number = 5;\nconst pageMargin: number = Math.floor(pageDisplayLimit/2);\n\nexport default class PaginateSearch extends React.Component<IPaginateSearchProps, IPaginateSearchState> {\n    constructor(props: IPaginateSearchProps) {\n        super(props);\n    }\n\n    private calculateTotalPages() {\n        let totalPages: number = 0;\n        if (!isNull(this.props.articleCount) && this.props.articleCount != 0) {\n            totalPages = Math.ceil(this.props.articleCount/this.props.showCount);\n        }\n        return totalPages;\n    }\n\n    private createPageItems(totalPages: number) {\n        let count, last;\n        if (this.props.currentPage <= pageMargin) {\n            count = 1;\n            last = pageDisplayLimit;\n        } else if (this.props.currentPage + pageMargin > totalPages) {\n            count = totalPages - pageDisplayLimit;\n            last = totalPages;\n        } else {\n            count = this.props.currentPage - pageMargin;\n            last = this.props.currentPage + pageMargin;\n        }\n\n        if (count < 0) count = 1;\n        if (last > totalPages) last = totalPages;\n\n        let pageNums: Array<number> = [];\n        for (let i = count; i <= last; i++) pageNums.push(i);\n\n        let active: boolean = false;\n        return pageNums.map((pageNum: number) => {\n            active = (pageNum == this.props.currentPage);\n            return <Pagination.Item onClick={() => this.changePage(pageNum)} active={active}>{pageNum}</Pagination.Item>;\n        });\n    }\n\n    private changePage(newPage: number) {\n        if (newPage != this.props.currentPage) {\n            this.props.updatePaginate({currentPage: newPage});\n            animateScrollTo(0);\n        }\n    }\n\n    private showPagination() {\n        if (!isNull(this.props.articleCount)) {\n            let totalPages: number = this.calculateTotalPages();\n            if (totalPages != 0) {\n                let disableFirst: boolean = (this.props.currentPage == 1);\n                let disableLast: boolean = (this.props.currentPage == totalPages);\n\n                return (\n                    <Pagination>\n                        <Pagination.First onClick={() => this.changePage(1)} disabled={disableFirst}/>\n                        <Pagination.Prev onClick={() => this.changePage(this.props.currentPage - 1)} disabled={disableFirst}/>\n                        { this.createPageItems(totalPages) }\n                        <Pagination.Next onClick={() => this.changePage(this.props.currentPage + 1)} disabled={disableLast}/>\n                        <Pagination.Last onClick={() => this.changePage(totalPages)} disabled={disableLast}/>\n                    </Pagination>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"pagination\">\n            {this.showPagination()}\n        </div>\n        );\n    }\n}\n\ninterface IPaginateSearchProps {\n    currentPage: number;\n    articleCount: number | null;\n    showCount: number;\n    updatePaginate: (e: object) => void;\n}\n\ninterface IPaginateSearchState {\n\n}","import React from 'react';\nimport '../css/Basic.css';\nimport { Button, Form } from 'react-bootstrap';\nimport TimeSearch from './TimeSearch';\nimport ArticleList from './ArticleList';\nimport LocationSearch from './LocationSearch';\nimport KeytermSearch from './KeytermSearch';\nimport { BackendAPI, IFilterOptions } from '../API';\nimport { isNull, isNullOrUndefined, isUndefined } from 'util';\nimport PaginateSearch from './PaginateSearch';\nimport Header from './Header';\nimport { createApiFilterState, parseDates } from './util';\nimport { IArticleState } from './Article';\n\nlet api = new BackendAPI();\n\nexport default class Search extends React.Component<ISearchProps, ISearchState> {\n    constructor(props: ISearchProps) {\n        super(props);\n\n        let sessionSearch = sessionStorage.getItem('search');\n        if (isNull(sessionSearch)) {\n            this.state = {\n                title: '',\n                keyterms: [],\n                locations: [],\n                startDate: null,\n                endDate: null,\n                articleList: undefined,\n                currentPage: 1,\n                showCount: 10,\n                articleCount: 0,\n                listLength: 0\n            }\n        } else {\n            let sessionState = JSON.parse(sessionSearch);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n    }\n\n    componentWillMount() {\n        let sessionSearch = sessionStorage.getItem('search');\n        if (isNull(sessionSearch)) this.onSearch();\n    }\n\n    private onSearch() {\n        let apiFilterState: IFilterOptions = createApiFilterState(this.state);\n        \n        this.setState({\n            articleList: null,\n            articleCount: null,\n            listLength: 0\n        })\n\n        api.getFilteredReports(apiFilterState, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.setState({\n                    articleList: response,\n                    articleCount: (!isNullOrUndefined(response)) ? response.length : 0,\n                    currentPage: 1,\n                    listLength: response.length\n                });\n                console.log(response.length);\n                sessionStorage.setItem('search', JSON.stringify(this.state));\n            }\n        });\n    }\n\n    private handleChange(event: any) {\n        this.setState(event);\n        console.log(event);\n    }\n\n    private paginateArticleList() {\n        if (!isNullOrUndefined(this.state.articleList)) {\n            let end: number = this.state.currentPage * this.state.showCount;\n            let start: number = end - this.state.showCount;\n            let sessionSearch = sessionStorage.getItem('search');\n            if (!isNull(sessionSearch)) {\n                let sessionState = JSON.parse(sessionSearch);\n                sessionState.currentPage = this.state.currentPage;\n                sessionState.showCount = this.state.showCount;\n                sessionStorage.setItem('search', JSON.stringify(sessionState));\n            }\n            return this.state.articleList.slice(start, end);\n        } else {\n            return this.state.articleList;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                            <h1>SEARCH</h1>\n                            <div id=\"collapse-filters\" className=\"Filter-panel\">\n                                <KeytermSearch keyterms={this.state.keyterms} updateKeyterm={this.handleChange}/>\n                                <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                                <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                                <Button onClick={this.onSearch}>Search Articles</Button>\n                            </div>\n                            <Form.Text className=\"text-muted\">\n                                * All filters are optional.\n                            </Form.Text>\n                            <hr />\n                            <ArticleList articleList={this.paginateArticleList()} listLength={this.state.listLength}/>\n                            <PaginateSearch\n                                articleCount={this.state.articleCount}\n                                currentPage={this.state.currentPage}\n                                showCount={this.state.showCount}\n                                updatePaginate={this.handleChange}\n                            />\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface ISearchProps {\n}\n\ninterface ISearchState {\n    title: string;\n    keyterms: Array<string>;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    articleList: Array<IArticleState> | null | undefined;\n    currentPage: number;\n    showCount: number;\n    articleCount: number | null;\n    listLength: number;\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport { isNullOrUndefined } from 'util';\nimport { Table } from 'react-bootstrap';\nimport { cleanDate, capitalize } from './util';\n\nexport default class EventReport extends React.Component<IEventReportProps, IEventReportState> {\n    constructor(props: IEventReportProps) {\n        super(props);\n    }\n  \n    private checkLocation(location: LocationBasic | LocationAdvanced) {\n        if (!isNullOrUndefined(location['geonames-id'])) {\n            return <tr><th>Location</th><td>{location['geonames-id']}</td></tr>;\n        } else {\n            return this.cleanLocation(location);\n        }\n    }\n\n    private cleanLocation(location: LocationBasic) {\n        let locationArray: Array<string> = [];\n        if (!isNullOrUndefined(location.location) && location.location != '') {\n            locationArray = [location.location];\n            if (location.location.indexOf(';') != -1) {\n                locationArray = location.location.split(';');\n            }\n            for (let i = 0; i < locationArray.length; i++) {\n                if (!isNullOrUndefined(location.country) && location.country != '') {\n                    locationArray[i] += ',' + location.country;\n                }\n                locationArray[i] = locationArray[i].replace(/,/g, ', ');\n            }\n        } else if (!isNullOrUndefined(location.country) && location.country != '') {\n            locationArray = [location.country];\n        }\n        if (locationArray.length != 0) {\n            return <tr><th>Location</th>{locationArray.map(value => <td>{value}</td>)}</tr>;\n        }\n    }\n\n    private checkType(type: string, colSpan: number) {\n        if (!isNullOrUndefined(type) && type != '') {\n            return <tr><th>Event type</th><td colSpan={colSpan}>{capitalize(type)}</td></tr>;\n        } else {\n            return <tr><th>Event type</th><td colSpan={colSpan}>Unknown</td></tr>;\n        }\n    }\n\n    private checkDate(date: string, colSpan: number) {\n        if (!isNullOrUndefined(date) && date != '') {\n            let temp = (date.indexOf(' to ') != 1) ? date.split(' to ') : [date];\n            for (let i = 0; i < temp.length; i++) {\n                temp[i] = cleanDate(temp[i]);\n            }\n            return <tr><th>Date</th><td colSpan={colSpan}>{temp.join(' to ')}</td></tr>;\n        }\n    }\n\n    private checkNumberAffected(affected: number, colSpan: number) {\n        if (!isNullOrUndefined(affected)) {\n            return <tr><th>Number affected</th><td colSpan={colSpan}>{affected}</td></tr>\n        }\n    }\n\n    private checkColSpan(location: LocationAdvanced | LocationBasic) {\n        let colSpan = 1;\n        if (!isNullOrUndefined(location.location) && location.location.indexOf(';') != -1) {\n            colSpan = location.location.split(';').length;\n        }\n        return colSpan;\n    }\n\n    render() {\n        let colSpan = this.checkColSpan(this.props.location);\n        return (\n            <div>\n                <Table striped bordered hover style={{marginBottom: '0px'}}>\n                    <tbody>\n                        {this.checkType(this.props.type, colSpan)}\n                        {this.checkDate(this.props.date, colSpan)}\n                        {this.checkLocation(this.props.location)}\n                        {this.checkNumberAffected(this.props[\"number-affected\"], colSpan)}\n                    </tbody>\n                </Table>\n            </div>\n            \n        );\n    }\n}\n\ninterface LocationAdvanced {\n    'geonames-id': string;\n    location: string;\n    country: string;\n    [key: string]: string;\n}\n\ninterface LocationBasic {\n    country: string;\n    location: string;\n    [key: string]: string;\n}\n\ninterface IEventReportProps {\n  type: string;\n  date: string;\n  location: LocationAdvanced | LocationBasic;\n  'number-affected': number;\n}\n\ninterface IEventReportState {    \n}","import React from 'react';\nimport '../css/Search.css';\nimport EventReport from './EventReport';\nimport { Card } from 'react-bootstrap';\n\nexport default class EventReportList extends React.Component<IEventReportListProps, IEventReportListState>{\n    constructor(props: IEventReportListProps) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <p><b>Event Reports:</b></p>\n                {this.props.reports.map((report: any) => {\n                    return <div className=\"EventReport-division\">\n                        <Card>\n                            <Card.Body className=\"EventReport-card\">\n                                <EventReport {...report} />\n                            </Card.Body>\n                        </Card>\n                    </div>\n                })}\n            </div>\n        );\n    }\n}\n\ninterface IEventReportListProps {\n    reports: Array<EventReport>;\n}\n\ninterface IEventReportListState {    \n}","import React from 'react';\nimport '../css/Search.css';\nimport EventReport from './EventReport';\nimport { isNull } from 'util';\nimport { Badge } from 'react-bootstrap';\nimport EventReportList from './EventReportList';\n\nexport default class Report extends React.Component<IReportProps, IReportState> {\n  constructor(props: IReportProps) {\n    super(props);\n  }\n  \n    private listCheck(check: Array<string>, type:string) {\n      console.log(check);\n        let listProp = null;\n        if (!isNull(check) && check.length != 0) {\n            if (!Array.isArray(check)) check = [check];\n            listProp = check.map((item: string) => {\n                return <Badge className=\"Badge-division\" variant=\"secondary\">{item}</Badge>\n            });\n            listProp = (<p><b>{type}:</b> {listProp}</p>);\n        }\n        return listProp;\n    }\n\n  private commentCheck(check: string) {\n        return (\n            (!isNull(check)) ? <p><b>Comments:</b> {check}</p> : null\n        )\n  }\n\n  render() {\n    let reported_events = (this.props.reported_events.length != 0) ?\n        <EventReportList reports={this.props.reported_events}/> : null;\n\n    return (\n        <div>\n            {this.listCheck(this.props.disease, 'Disease')}\n            {this.listCheck(this.props.syndrome, 'Syndrome')}\n            {reported_events}\n            {this.commentCheck(this.props.comment)}\n        </div>\n    );\n  }\n}\n\ninterface IReportProps {\n  disease: Array<string>;\n  syndrome: Array<string>;\n  reported_events: Array<EventReport>\n  comment: string;\n}\n\ninterface IReportState {    \n}","import React from 'react';\nimport '../css/Home.css';\nimport Report from './Report';\nimport { ListGroup } from 'react-bootstrap';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\nexport default class ReportList extends React.Component<IReportListProps, IReportListState>{\n  constructor(props: IReportListProps) {\n    super(props);\n    console.log(this.props.reports);\n  }\n  \n  render() {\n    let reports;\n    api.getAllReports((error: any, response: any) => {\n        if (error) {\n            if (error.response) {\n                let message = error.response.data.message\n                console.log(message, 'ppp');\n            } else {\n                console.log(error.message, 'ppp');\n            }\n        }\n        reports = response;\n        console.log(reports, 'reports in app tsx')\n    });\n\n    return (\n        <div>\n            <h3>Disease Reports</h3>\n            <ListGroup>\n                {this.props.reports.map((report: any) => {\n                    return <ListGroup.Item>\n                        <Report {...report} />\n                    </ListGroup.Item>\n                })}\n            </ListGroup>\n        </div>\n    );\n  }\n}\n\ninterface IReportListProps {\n  reports: Array<Report>;\n}\n\ninterface IReportListState {    \n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport Report from './Report';\nimport ReportList from './ReportList';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from './Header';\nimport { isNullOrUndefined } from 'util';\n\nexport default class Article extends React.Component<IArticleProps, IArticleState>{\n    constructor(props: IArticleProps) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState(this.props.location.state);\n    }\n\n    private renderRedirect() {\n        if (isNullOrUndefined(this.state)) return true;\n        return false;\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.renderRedirect() ? <Redirect to='/' /> :\n                <div className=\"bg\">\n                    <Header />\n                    <body id=\"top\">\n                        <div className=\"Main\">\n                            <Link to='/search'><Button variant=\"secondary\">Back to Search</Button></Link>\n                            <br /><br />\n                            <h1>{this.state.headline}</h1>\n                            <p><i>URL: <a href={this.state.url} target=\"_blank\">{this.state.url}</a></i></p>\n                            <p><i>DOP: {this.state.date_of_publication}</i></p>\n                            <p>{this.state.main_text}</p>\n                            <ReportList reports={this.state.reports} />\n                        </div>\n                    </body>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\ninterface IArticleProps {\n    location: {state: IArticleState};\n}\n\nexport interface IArticleState {\n    url: string;\n    date_of_publication: string;\n    headline: string;\n    main_text: string;\n    reports: Array<Report>;   \n}","import React from 'react';\nimport '../css/Basic.css';\nimport Select from 'react-select';\nimport { BackendAPI } from '../API';\n\nlet api = new BackendAPI();\n\nexport default class DiseaseSearch extends React.Component<IDiseaseSearchProps, IDiseaseSearchState> {\n    constructor(props: IDiseaseSearchProps) {\n        super(props);\n\n        this.state = {\n            filterType: 0,\n            value: this.props.disease,\n            filterOptions: []\n        }\n    }\n\n    componentWillMount() {\n        api.getDiseases((error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.setState({filterOptions: this.addFilterOptions(response)});\n            }\n        });\n    }\n\n    private handleChange(event: any) {\n        console.log(event);\n        this.setState({ value: event.label });\n        this.props.updateDisease({ disease: event.label });\n    }\n\n    private addFilterOptions(response: Array<{name: string}>) {\n        let diseases: Array<Object> = response.map((disease: {name: string}) => {\n            return { label: disease.name, value: disease.name, type: 'disease' }\n        });\n        return diseases;\n    }\n\n    render() {\n        return (\n            <div className=\"Search-element\">\n                <Select\n                    options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n                    classNamePrefix=\"select\"\n                    placeholder=\"Select disease...\"\n                    onChange={(e: any) => this.handleChange(e)}\n                    value={(this.state.value != '') ? { label: this.state.value, value: this.state.value } : null}\n                    theme={(theme) => ({\n                        ...theme,\n                        borderRadius: 3,\n                        colors: {\n                        ...theme.colors,\n                            primary25: 'rgb(162, 156, 194)',\n                            primary: 'rgb(162, 156, 194)',\n                        },\n                    })}\n                />\n            </div>\n        );\n    }\n}\n\ninterface IDiseaseSearchProps {\n    updateDisease: (event: object) => void;\n    disease: string;\n}\n\ninterface IDiseaseSearchState {\n    filterType: number;\n    value: string;\n    filterOptions: Array<Object>;\n}","import React from 'react';\nimport { Popover, OverlayTrigger, Button } from 'react-bootstrap';\n\nconst popover = (description: string) => (\n    <Popover id=\"popover-basic\" style={{maxWidth: '400px'}}>\n      {description}\n    </Popover>\n  );\n  \nexport const Tooltip = (props: {description: string}) => (\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover(props.description)}>\n        <Button variant=\"outline-secondary\">?</Button>\n    </OverlayTrigger>\n);","import React from 'react';\nimport '../css/Basic.css';\nimport { LineChart, ResponsiveContainer, XAxis, YAxis, Line, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Tooltip as ChartTooltip } from './Tooltip';\nimport { Frequency } from './FrequencyGraph';\n\nconst types: {[key: string]: string} = {\n    WHO: \"#19a022\",\n    Twitter: \"#22d8d8\",\n    Google: \"#a02f19\"\n}\nexport default class FrequencyFormat extends React.Component<IFrequencyFormatProps, IFrequencyFormatState> {\n    constructor(props: IFrequencyFormatProps) {\n        super(props);\n    }\n\n  render() {\n    return (\n        <div className='Frequency-chart'>\n            <p>\n                <b>{this.props.title}</b>\n                <ChartTooltip description={'Frequency of mentions of disease within time range.'} />\n            </p>\n            <ResponsiveContainer height=\"95%\">\n                <LineChart data={this.props.chartData}>\n                    <XAxis label={{value: 'Dates', position: 'insideBottom', offset: -15}} dataKey=\"date\"/>\n                    <YAxis label={{value: 'Mentions count', position: 'insideLeft', angle: -90, offset: 0}} allowDecimals={false}/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Tooltip/>\n                    <Legend\n                    layout=\"horizontal\"\n                    align=\"center\"\n                    wrapperStyle={{\n                        paddingTop: \"20px\"\n                    }}/>\n                    {this.props.types.map((type: string, index: number) => {\n                        return <Line key={index} type=\"monotone\" dataKey={type} activeDot stroke={types[type]} />\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n  }\n}\n\ninterface IFrequencyFormatProps {\n    title: string;\n    chartData?: Array<Frequency>;\n    types: Array<string>;\n}\n\ninterface IFrequencyFormatState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport FrequencyFormat from './FrequencyFormat';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { shortenDate, capitalize } from './util';\n\nconst frequencyFilters: Array<string> = ['day', 'month', 'year'];\n\nexport default class FrequencyGraph extends React.Component<IFrequencyGraphProps, IFrequencyGraphState> {\n    constructor(props: IFrequencyGraphProps) {\n        super(props);\n        this.state = {\n            frequencyFilter: frequencyFilters[0],\n            frequencyData: (!isNullOrUndefined(this.props.frequencyData)) ? this.props.frequencyData : []\n        };\n    }\n\n    componentWillReceiveProps(newProps: any) {\n        if (!isNullOrUndefined(newProps.frequencyData) && newProps.frequencyData !== this.state.frequencyData) {\n            this.setState({frequencyData: newProps.frequencyData});\n        }\n    }\n\n    private convertFrequency(interval: string) {\n        let data = this.props.frequencyData;\n        if (!isNullOrUndefined(data) && this.state.frequencyFilter != interval) {\n            console.log(\"HERE\");\n            if (interval == 'day') {\n                this.setState({frequencyData: data, frequencyFilter: interval});\n            } else {\n                let start_date = new Date(data[0].date.replace(/x/g, '0'));\n                let end_date= new Date(data[data.length - 1].date.replace(/x/g, '0'));\n\n                let newFrequency: Array<Frequency> = [];\n                let counterDate = new Date(start_date.getFullYear(), start_date.getMonth(), 1);\n                if (interval == 'year') counterDate.setMonth(0);\n                while(counterDate <= end_date) {\n                    let countStr = new Date(counterDate.getTime() - counterDate.getTimezoneOffset() * 60000).toISOString();\n                    data.forEach((date: Frequency, i: number) => {\n                        let countInd = (interval == 'month') ? countStr.indexOf('-', countStr.indexOf('-') + 1) : countStr.indexOf('-');\n                        let countInterval = countStr.substring(0, countInd);\n                        if (date.date.indexOf(countInterval) !== -1) {\n                            let found = newFrequency.filter(e => e.date == countInterval);\n                            if (found.length == 0) {\n                                newFrequency.push({\n                                    date: countInterval,\n                                    WHO: date.WHO,\n                                    Twitter: date.Twitter,\n                                    Google: date.Google\n                                });\n                            } else {\n                                let num = newFrequency.indexOf(found[0]);\n                                newFrequency[num].date = newFrequency[num].date;\n                                for (let i = 0; i < this.props.types.length; i++) {\n                                    let freqType = newFrequency[num][this.props.types[i]] as number;\n                                    let dateType = date[this.props.types[i]] as number;\n                                    if (!isUndefined(freqType) && !isUndefined(dateType)) {\n                                        newFrequency[num][this.props.types[i]] = freqType + dateType;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                    if (interval == 'month') counterDate.setMonth(counterDate.getMonth() + 1);\n                    else counterDate.setFullYear(counterDate.getFullYear() + 1);\n                }\n\n                this.setState({frequencyData: newFrequency, frequencyFilter: interval});\n                console.log(newFrequency);\n            }\n        }\n    }\n\n    private formatXAxis(date: string) {\n        let newDate: string = date;\n        if (date.indexOf('T') != -1) newDate = shortenDate(newDate);\n        newDate = newDate.split('-').reverse().join('/');\n        return newDate;\n    }\n\n    private cleanChartData(data?: Array<Frequency>) {\n        if (!isNullOrUndefined(data)) {\n            return data.map((value: Frequency) => {\n                return {\n                    WHO: value.WHO,\n                    Twitter: value.Twitter,\n                    Google: value.Google,\n                    date: this.formatXAxis(value.date)\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"frequency\">\n                <FrequencyFormat\n                    title={'Frequency of ' + capitalize(this.props.title) + ' mentions on ' + this.props.titleType}\n                    types={this.props.types}\n                    chartData={this.cleanChartData(this.state.frequencyData)}/>\n                <br></br>\n                <br></br>\n                <div>\n                    <div className=\"Date-frequency\">Date frequency:</div>\n                    <input type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[0])} name=\"frequencyFilter\" defaultChecked/>Day\n                    <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[1])} name=\"frequencyFilter\" />Month\n                    <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[2])} name=\"frequencyFilter\" />Year\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IFrequencyGraphProps {\n    frequencyData: Array<Frequency> | null | undefined;\n    title: string;\n    titleType: string;\n    types: Array<string>;\n}\n\ninterface IFrequencyGraphState {\n    frequencyFilter: string;\n    frequencyData: Array<Frequency>;\n}\n\nexport interface Frequency {\n    date: string;\n    WHO?: number;\n    Google?: number;\n    Twitter?: number;\n    [key: string]: number | string | undefined;\n}","import React from 'react';\nimport '../css/Trends.css';\n\nexport default class Marker extends React.Component<IMarkerProps, IMarkerState> {\n    constructor(props: IMarkerProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        };\n    }\n\n  render() {\n      const checkHover = this.props.$hover;\n        return (\n            <div>\n                { checkHover ? (\n                <div className=\"Marker\">\n                    <div>\n                        <b>Location:</b> {this.props.location}<br/>\n                        <b>Number affected:</b> {this.props.number_affected}<br/>\n                        <b>Article mentions:</b> {this.props.article_count}<br/>\n                    </div>\n                </div>\n                ) : (<div></div>)}\n            </div>\n        );\n    }\n}\n\ninterface IMarkerProps {\n    $hover?: boolean;\n    lat: number;\n    lng: number;\n    location: string;\n    number_affected: number;\n    article_count: number;\n}\n\ninterface IMarkerState {\n    collapse: boolean;\n}","import React from 'react';\nimport '../css/Home.css';\nimport GoogleMapReact from 'google-map-react';\nimport { fitBounds } from 'google-map-react/utils';\nimport { Table } from 'react-bootstrap';\nimport Marker from './Marker';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { Tooltip } from './Tooltip';\n\ndeclare var google: any;\nlet mapsAPIkey = { key: 'AIzaSyAWAexUwY_tKggKe5GoqUmdCLV3h8si3Co' };\n\nexport default class HeatMap extends React.Component<IHeatMapProps, IHeatMapState> {\n    constructor(props: IHeatMapProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        };\n    }\n\n    private calculateBounds() {\n        const bounds = new google.maps.LatLngBounds();\n        let center = {lat: 0, lng: 0};\n        let zoom = 1;\n        if (isNullOrUndefined(this.props.locations)) return {center, zoom};\n        if (this.props.locations.length != 0) {\n            this.props.locations.forEach((marker: GeoPosition) => {\n                bounds.extend(new google.maps.LatLng(marker.lat, marker.lng));\n            });\n\n            let newBounds = {\n                ne: {\n                    lat: bounds.getNorthEast().lat(),\n                    lng: bounds.getNorthEast().lng()\n                },\n                sw: {\n                    lat: bounds.getSouthWest().lat(),\n                    lng: bounds.getSouthWest().lng()\n                }\n            }\n            let size = { width: 1000, height: 450 };\n            let {center, zoom} = fitBounds(newBounds, size);\n            return {center, zoom};\n        }\n\n        return {center, zoom};\n    }\n\n    render() {\n        let {center, zoom} = this.calculateBounds();\n        return (\n            <div id=\"heatmap\" className=\"Section-title\">\n                <p>\n                    <b>Heatmap of the occurences of {this.props.title}</b>\n                    <Tooltip description={`Shows the occurences of ${this.props.title} worldwide or within the geographical range of location inputs.`} />\n                </p>\n                <div style={{height: '700px'}}>\n                    <GoogleMapReact\n                        bootstrapURLKeys={mapsAPIkey}\n                        defaultCenter={{lat: 0, lng: 0}}\n                        defaultZoom={1}\n                        heatmapLibrary={true}\n                        heatmap={{\n                            positions: this.props.locations,\n                            options: {\n                                radius: 30,\n                                opacity: 0.6\n                            }\n                        }}\n                        center={center}\n                        zoom={zoom}\n                    >\n                        {this.props.locations.map(value =>\n                        <Marker\n                            lat={value.lat}\n                            lng={value.lng}\n                            location={!isUndefined(value.data) ? value.data.location : ''}\n                            number_affected={!isUndefined(value.data) ? value.data.number_affected : 0}\n                            article_count={!isUndefined(value.data) ? value.data.article_count: 0}\n\n                        />)}\n\n                    </GoogleMapReact>\n                </div>\n                <br></br>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Location</th>\n                            <th>Number affected</th>\n                            <th>Article mentions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.locations.length == 0 ? <tr>\n                            <td colSpan={3}>No results found</td>\n                        </tr> : <div></div>}\n                        {this.props.locations.map((value: GeoPosition) => \n                        (!isNullOrUndefined(value.data)) ?\n                        <tr>\n                            <td>{value.data.location}</td>\n                            <td>{value.data.number_affected}</td>\n                            <td>{value.data.article_count}</td>\n                        </tr> : <div></div>)}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport function assignWeight(numberAffected: number) {\n    const weightValues = [0, 10, 100, 250, 500, 750, 1000, 2000, 5000]\n    for (let i = weightValues.length; i != 0; i--) {\n        if (numberAffected > weightValues[i - 1]) return i;\n    }\n    return 0;\n}\n\ninterface IHeatMapProps {\n    title: string;\n    locations: Array<GeoPosition>;\n}\n\ninterface IHeatMapState {\n    collapse: boolean;\n}\n\nexport interface APIHeatmap {\n    location: string;\n    article_count: number;\n    number_affected: number;\n}\n\nexport interface GeoPosition {\n    lat: number;\n    lng: number;\n    weight?: number;\n    data?: APIHeatmap;\n}","import React from 'react';\nimport '../css/Analytics.css';\nimport { Tooltip as ChartTooltip } from './Tooltip';\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Legend, Bar, Tooltip } from 'recharts';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { capitalize } from './util';\n\nexport default class HistogramGraph extends React.Component<IHistogramGraphProps, IHistogramGraphState> {\n    constructor(props: IHistogramGraphProps) {\n        super(props);\n    }\n\n    private createGraphRange() {\n        let graphRange = '';\n        if (!isNullOrUndefined(this.props.histogramData) &&\n            !isNullOrUndefined(this.props.histogramData.startDate) &&\n            !isNullOrUndefined(this.props.histogramData.endDate)) {\n            let startDate = this.props.histogramData.startDate.split('-').reverse().join('/');\n            let endDate = this.props.histogramData.endDate.split('-').reverse().join('/');\n            graphRange = 'from ' + startDate + ' to ' + endDate;\n        }\n        return graphRange;\n    }\n\n    render() {\n        let graphRange = this.createGraphRange();\n        return (\n            <div id=\"histogram\">\n                <div className=\"Histogram-chart\">\n                    <p>\n                        <b>Event histogram of {capitalize(this.props.title)} {graphRange}</b>\n                        <ChartTooltip description={`Overview of events across articles with a publication date within the inputted time range.\n                                                    The title range is the date range across the selected articles.`} />\n                    </p>\n                    <ResponsiveContainer width = '100%' height = '100%' >\n                        <BarChart data={!isNullOrUndefined(this.props.histogramData) && !isUndefined(this.props.histogramData.events) ?\n                                        this.props.histogramData.events : []}>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis label={{value: 'Event types', position: 'insideBottom', offset: -15}} dataKey=\"event\"/>\n                        <YAxis label={{value: 'Event type count', position: 'insideLeft', angle: -90, offset: 0}}/>\n                        <Tooltip/>\n                        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                        <Legend\n                        layout=\"horizontal\"\n                        align=\"center\"\n                        wrapperStyle={{\n                            paddingTop: \"20px\"\n                        }}/>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IHistogramGraphProps {\n  histogramData: HistogramData | null | undefined;\n  title: string;\n}\n\ninterface IHistogramGraphState {\n}\n\nexport interface HistBar {\n  event: string;\n  count: number;\n}\n\nexport interface APIEvent {\n    start_date: string;\n    end_date: string;\n    death: number;\n    hospitalised: number;\n    infected: number;\n    presence: number;\n    recovered: number;\n    [key: string]: string | number;\n}\n\nexport interface HistogramData {\n    startDate: string;\n    endDate: string;\n    events: Array<HistBar>;\n}","import React from 'react';\nimport '../css/Basic.css';\nimport frequency from '../imgs/frequency.png';\nimport heatmap from '../imgs/heatmap.png';\nimport event from '../imgs/event.png';\nimport media from '../imgs/media.png';\nimport trends from '../imgs/trends.png';\nimport { CardDeck, Card } from 'react-bootstrap';\n\nexport default class PageMenu extends React.Component<IPageMenuProps, IPageMenuState> {\n    constructor(props: IPageMenuProps) {\n        super(props);\n    }\n\n    render() {\n        let cardStyle = { width: '300px', maxWidth: '300px', backgroundColor: 'darkslateblue', float: \"left\" as \"left\", color: 'white', margin: '5px', height: '370px'};\n        return (\n        <div style={{textAlign: 'center'}}>\n            <h4>Report Features</h4>\n            <div className=\"Page-menu\">\n                <CardDeck>\n                    <Card style={cardStyle}>\n                        <Card.Img variant=\"top\" src={frequency} />\n                        <Card.Body>\n                            <Card.Title>Frequency Mentions</Card.Title>\n                            <Card.Text>\n                                Frequency graph of the number of mentions of the selected disease across the inputted time range.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    {this.props.type == 'trends' ? (\n                    <div>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={media} />                    \n                            <Card.Body>\n                                <Card.Title>Media Coverage</Card.Title>\n                                <Card.Text>\n                                    Headlines and tweets mentioning the selected disease.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={trends} />                    \n                            <Card.Body>\n                                <Card.Title>Google Trends</Card.Title>\n                                <Card.Text>\n                                    Google search trends involving the selected disease.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div> ) : (\n                    <div>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={heatmap} />                    \n                            <Card.Body>\n                                <Card.Title>Heatmap</Card.Title>\n                                <Card.Text>\n                                    Shows the occurences of the selected disease within the geographical range.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={event} />\n                            <Card.Body>\n                                <Card.Title>Event histogram</Card.Title>\n                                <Card.Text>\n                                    Histogram graph of the event types of the disease for WHO articles within inputted time range.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div> )}\n                </CardDeck>\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface IPageMenuProps {\n    type: string;\n}\n\ninterface IPageMenuState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport TimeSearch from './TimeSearch';\nimport LocationSearch from './LocationSearch';\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport DiseaseSearch from './DiseaseSearch';\nimport { isNull, isNullOrUndefined, isUndefined } from 'util';\nimport Header from './Header';\nimport { BackendAPI } from '../API';\n\nimport FrequencyGraph, { Frequency } from './FrequencyGraph';\nimport HeatMap, { APIHeatmap, GeoPosition, assignWeight } from './Heatmap';\nimport HistogramGraph, { HistBar, APIEvent, HistogramData } from './HistogramGraph';\nimport loading from '../imgs/loading1.gif';\nimport { parseDates, stringifyDates, createApiFilterState, shortenDate, capitalize } from './util';\nimport PageMenu from './PageMenu';\n\ndeclare var google: any;\nlet epiAPI = new BackendAPI();\nconst sections = ['frequency', 'heatmap', 'event'];\nlet geoCoder = new google.maps.Geocoder();\n\n\nexport default class Analytics extends React.Component<IAnalyticsProps, IAnalyticsState> {\n    constructor(props: IAnalyticsProps) {\n        super(props);\n        let sessionAnalyze = sessionStorage.getItem('analyze');\n        if (isNull(sessionAnalyze)) {\n            this.state = {\n                disease: '',\n                locations: [],\n                startDate: null,\n                endDate: null,\n                frequencyData: undefined,\n                heatmapPositions: undefined,\n                histogramData: undefined,\n                title: '',\n                displaySection: sections[0]\n            };\n        } else {\n            let sessionState = JSON.parse(sessionAnalyze);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n            console.log(sessionState);\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onAnalyze = this.onAnalyze.bind(this);\n    }\n\n    private onAnalyze() {\n        console.log(\"ANALYZE\");\n        this.setState({\n            heatmapPositions: null,\n            frequencyData: null,\n            histogramData: null,\n            displaySection: sections[0]\n        });\n        let apiFilterState = createApiFilterState(this.state);\n        epiAPI.getAnalyticReport(apiFilterState, (error: any, response: any) => {\n            console.log(response);\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.createHeatMapData(response.heat_map.locations);\n                this.setState({\n                    frequencyData: this.createFrequencyData(response.frequency_graph.frequency),\n                    histogramData: this.createHistogramData(response.event_graph),\n                    title: this.state.disease\n                });\n                console.log(\"LINE 45\", response);\n            }\n        });\n    }\n\n    private createHistogramData(apiEvent: APIEvent) {\n        const histogramEvents: Array<HistBar> = [];\n        const events = ['death', 'hospitalised', 'infected', 'presence', 'recovered'];\n        for (let i = 0; i < events.length; i++) {\n            histogramEvents.push({\n                event: events[i],\n                count: apiEvent[events[i]] as number\n            });\n        }\n        return {\n            startDate: apiEvent.start_date,\n            endDate: apiEvent.end_date,\n            events: histogramEvents\n        }\n    }\n\n    private createHeatMapData(apiHeatmap: Array<APIHeatmap>) {\n        let heatmapData: Array<GeoPosition> = [];\n        this.setState({heatmapPositions: []})\n        for (let i = 0; i < apiHeatmap.length; i++) {\n            geoCoder.geocode({address: apiHeatmap[i].location}, (results: any, status: any) => {\n                let temp = {lat: 0, lng: 0, weight: 0, data: apiHeatmap[i]};\n                if (status === google.maps.GeocoderStatus.OK) {\n                    temp = {\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng(),\n                        weight: assignWeight(apiHeatmap[i].number_affected),\n                        data: apiHeatmap[i]\n\n                    };\n                }\n                if (!isNullOrUndefined(this.state.heatmapPositions)) {\n                    this.setState({heatmapPositions: this.state.heatmapPositions.concat([temp])});\n                }\n            });\n        }\n        return heatmapData;\n    }\n\n    private createFrequencyData(apiFrequency: Array<APIFrequency>) {\n        let count = (!isNull(this.state.startDate)) ? new Date(this.state.startDate) : new Date(2017, 0, 1);\n        let endDate = (!isNull(this.state.endDate)) ? new Date(this.state.endDate) : new Date();\n        endDate.setHours(0, 0, 0, 0);\n\n        let countStr: string = stringifyDates(count, 'startDate');\n        let endStr: string = stringifyDates(endDate, 'endDate');\n        countStr =  shortenDate(countStr);\n        endStr = shortenDate(endStr);\n\n        let freqArray: Array<Frequency> = [];\n        let temp: Frequency = { date: countStr, WHO: 0, Google: 0, Twitter: 0 };\n\n        while (count <= endDate) {\n            temp = { date: countStr, WHO: 0, Google: 0, Twitter: 0 };\n            freqArray.push(temp);\n            let sameDate = apiFrequency.filter(value => value.date == countStr);\n            if (sameDate.length != 0) temp.WHO = sameDate[0].count;\n            count.setDate(count.getDate() + 1);\n            count.setHours(0, 0, 0, 0);\n            countStr =  stringifyDates(count, 'startDate').substring(0, countStr.length);\n        }\n        return freqArray;\n    }\n\n    private handleChange(event: any) {\n        this.setState(event);\n    }\n\n    private checkInputs() {\n        return (this.state.disease.length == 0);\n    }\n\n    private changeSection(section: number) {\n        if (this.state.displaySection != sections[section]) {\n            this.setState({displaySection: sections[section]});\n        }\n    }\n\n    private checkLoading() {\n        if (isNull(this.state.frequencyData) || isNull(this.state.frequencyData) ||\n            isNull(this.state.heatmapPositions)) {\n          return <img src={loading} className=\"loading\" alt=\"loading\" />;\n        } else if (isUndefined(this.state.frequencyData) && isUndefined(this.state.histogramData) &&\n            isUndefined(this.state.heatmapPositions)) {\n                return true;\n        }\n        sessionStorage.setItem('analyze', JSON.stringify(this.state));\n        return false;\n    }\n\n    render() {\n        let display = (this.checkLoading() == false) ? 'block' : 'none';\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                        <h1>ANALYZE</h1>\n                        <div id=\"collapse-filters\" className=\"Filter-panel\">\n                            <DiseaseSearch disease={this.state.disease} updateDisease={this.handleChange}/>\n                            <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                            <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                            <Button disabled={this.checkInputs()} onClick={this.onAnalyze}>Create Analytics</Button>\n                        </div>\n                        <Form.Text className=\"text-muted\">\n                                * Disease filter is required. Other filters are optional.\n                        </Form.Text>\n                        <hr />\n                        {this.checkLoading()}\n                        <div style={{display: display}}>\n                            <ButtonGroup vertical className=\"Report-menu\">\n                                <Button size=\"lg\" className=\"Report-title\">{capitalize(this.state.title)} Analytics</Button>\n                                <Button variant={this.state.displaySection == 'frequency' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(0)}>Frequency Mentions</Button>\n                                <Button variant={this.state.displaySection == 'heatmap' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(1)}>Heatmap</Button>\n                                <Button variant={this.state.displaySection == 'event' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(2)}>Event Histogram</Button>\n                            </ButtonGroup>\n                            <div className=\"Report-display\">\n                                <div style={{display: this.state.displaySection == 'frequency' ? 'block' : 'none'}}>\n                                    <FrequencyGraph\n                                        title={this.state.title}\n                                        titleType='articles at WHO'\n                                        types={['WHO']}\n                                        frequencyData={this.state.frequencyData}\n                                    />\n                                </div>\n                                <div style={{display: this.state.displaySection == 'heatmap' ? 'block' : 'none'}}>\n                                    <HeatMap\n                                        title={this.state.title}\n                                        locations={isNullOrUndefined(this.state.heatmapPositions) ? [] : this.state.heatmapPositions}\n                                    />\n                                </div>\n                                <div style={{display: this.state.displaySection == 'event' ? 'block' : 'none'}}>\n                                    <HistogramGraph\n                                        title={this.state.title}\n                                        histogramData={this.state.histogramData}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div style={(display == 'none') && (this.checkLoading() == true) ? {display: 'block'} : {display: 'none'}}>\n                                <PageMenu type=\"analyze\" />\n                        </div>\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface IAnalyticsProps {\n}\n\ninterface IAnalyticsState {\n    disease: string;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    frequencyData: Array<Frequency> | null | undefined;\n    heatmapPositions: Array<GeoPosition> | null | undefined;\n    histogramData: HistogramData | null | undefined;\n    title: string;\n    displaySection: string;\n}\n\ninterface APIFrequency {\n    date: string;\n    count: number;\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios'\n\n\nexport interface IFilterOptions {\n    disease: string;\n    location: string;\n    startDate: string;\n    endDate: string;\n}\n\nexport default class GoogleAPI {\n    baseURL: string = 'https://newsapi.org/';\n    // apiKey: string = '112874d7eb274abf8417934c83a1ba07';\n    // apiKey: string = '93ab589956f84076963dac0eb76d6a41';\n    apiKey: string = 'eda37975a50a479cb28a43249df18ae2';\n\n    getFilteredMedia(filter: IFilterOptions, cb:(err: any, res: any) => any) {\n        let q :string[] = [];\n        if (filter.disease) {\n            let temp: string = `q=\"${filter.disease}\"`;\n            if (filter.location) {\n                temp += `+\"${filter.location}\"`;\n            }\n            q.push(temp);\n        }\n        if (filter.startDate) {\n            q.push(`from=${filter.startDate}`);\n        }\n        if (filter.endDate){\n            q.push(`to=${filter.endDate}`);\n        }\n        q.push('pageSize=100');\n\n        if (q.length != 0) {\n            q.push(`apiKey=${this.apiKey}`);\n            let query = q.join('&');\n            let url = `${this.baseURL}v2/everything?${query}`\n            //console.log(url);\n    \n            axios.get(url)\n                .then((response: AxiosResponse) => {\n                    cb(null, response.data)\n                })\n                .catch((error: AxiosError) => {\n                    cb(error, null)\n            });\n        }\n    }\n}","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Trends.css';\nimport { Card } from 'react-bootstrap';\nimport { isNull } from 'util';\n\nexport default class GoogleCard extends React.Component<IGoogleCardProps, IGoogleCardState> {\n    constructor(props: IGoogleCardProps) {\n        super(props);\n    }\n\n    private trimText(main_text: string, minCut: number) {\n        if (isNull(main_text)) return 'No description found.';\n        let cutCount: number = main_text.length;\n    \n        if (cutCount > minCut) {\n          cutCount = minCut;\n          while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n            cutCount++;\n          }\n        }\n    \n        return main_text.substring(0, cutCount);\n    }\n\n    render() {\n        return (\n            <a href={this.props.url} className=\"link\" target=\"_blank\">\n            <Card className=\"Card-hover\">\n            <div className=\"Google-card\">\n                {!isNull(this.props.urlToImage) ? (\n                    <div style={{width: '200px'}}>\n                    <img className=\"Google-card-image\" src={this.props.urlToImage}/>\n                    </div>\n                ) : ( <div></div> )}\n                <div className=\"Google-card-text\">\n                    <h5 style={{textDecoration: 'underline'}}>{ this.trimText(this.props.title, 50) }</h5>\n                    <div style={{fontSize: 'small'}}>\n                        <i>{ this.props.source.name } • { this.props.publishedAt }</i>\n                        <p style={{marginTop: '5px'}}>{ this.trimText(this.props.description, 250) }...</p>\n                    </div>\n                </div>\n            </div>\n            </Card>\n            </a>\n        );\n    }\n}\n\ninterface IGoogleCardProps {\n    title: string;\n    description: string;\n    publishedAt: string;\n    source : { name: string };\n    url: string;\n    urlToImage: string;\n}\n\ninterface IGoogleCardState {\n}","import React from 'react';\nimport '../css/Trends.css';\nimport GoogleCard from './GoogleCard';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nexport default class GoogleCardList extends React.Component<IGoogleCardListProps, IGoogleCardListState> {\n    constructor(props: IGoogleCardListProps) {\n        super(props);\n    }\n\n    render() {\n        let reverseSortData: Array<GoogleCard> = [];\n        for (let i = this.props.data.length; i > 0; i--) reverseSortData.push(this.props.data[i - 1]);\n        console.log(reverseSortData);\n        return (\n            <div className=\"Media-list\">\n                <Card style={{height:\"100%\"}}>\n                    <Card.Header as=\"h5\">Google Articles and Headlines</Card.Header>\n                    <Card.Body style={{maxHeight: '725px', overflowY: 'auto'}}>\n                        <ListGroup variant=\"flush\">\n                            {reverseSortData.length == 0 ? 'No results found.' : <div></div>}\n                            {reverseSortData.map((value: any, index: number) => {\n                                return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                    <GoogleCard {...value}/>\n                                </ListGroup.Item>\n                            })}\n                        </ListGroup>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\ninterface IGoogleCardListProps {\n    data: Array<GoogleCard>;\n}\n\ninterface IGoogleCardListState {\n}","import React from 'react';\nimport '../css/Trends.css';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport TweetEmbed from 'react-tweet-embed';\n\nexport default class TweetList extends React.Component<ITweetListProps, ITweetListState> {\n    constructor(props: ITweetListProps) {\n        super(props);\n    }\n\n    render() {\n        console.log(this.props.data);\n        return (\n            <div className=\"Media-list\">\n                <Card style={{height:\"100%\"}}>\n                    <Card.Header as=\"h5\">Tweets</Card.Header>\n                    <Card.Body style={{maxHeight: '725px', overflowY: 'auto'}}>\n                        <ListGroup variant=\"flush\" style={{marginTop: '-10px', marginBottom: '-10px'}}>\n                            {this.props.data.length == 0 ? 'No results found.' : <div></div>}\n                            {this.props.data.map((value: string, index: number) => {\n                                return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                    <TweetEmbed id={value} placeholder={'loading'}/>\n                                </ListGroup.Item>\n                            })}\n                        </ListGroup>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport function filterByLocation(tweets: Array<any>, locations: Array<string>) {\n    let filtered = tweets.map(value => value);\n    if (locations.length != 0) {\n        for (let i = 0; i < locations.length; i++) {\n            let multiLocation = locations[i].indexOf(',');\n            let location = locations[i];\n            if (multiLocation != -1) location = location.substring(0, multiLocation);\n            filtered = filtered.filter(value => (value.text.indexOf(location) != -1));\n        }\n    }\n    return filtered;\n}\n\ninterface ITweetListProps {\n    data: Array<string>;\n}\n\ninterface ITweetListState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport GoogleCardList from './GoogleCardList';\nimport TweetList from './TweetList';\nimport GoogleCard from './GoogleCard';\nimport { Tooltip } from './Tooltip';\n\nexport default class MediaCoverage extends React.Component<IMediaCoverageProps, IMediaCoverageState> {\n    constructor(props: IMediaCoverageProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        }\n    }\n\n    render() {\n      return (\n            <div>\n                <p className=\"Section-title\">\n                    <b>Media coverage of {this.props.title}</b>\n                    <Tooltip description={`Media coverage of the disease from Twitter and Google News within the time range.`} />\n                </p>\n                <GoogleCardList data={this.props.googleData}/>\n                <TweetList data={this.props.tweetData}/>\n            </div>\n      );\n    }\n}\n\ninterface IMediaCoverageProps {\n    googleData: Array<GoogleCard>;\n    tweetData: Array<string>;\n    title: string;\n}\n\ninterface IMediaCoverageState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Trends.css';\nimport TimeSearch from './TimeSearch';\nimport LocationSearch from './LocationSearch';\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport DiseaseSearch from './DiseaseSearch';\nimport GoogleAPI from '../Google';\nimport { isNull, isUndefined } from 'util';\nimport FrequencyGraph, { Frequency } from './FrequencyGraph';\nimport MediaCoverage from './MediaCoverage';\nimport Header from './Header';\nimport { BackendAPI } from '../API';\nimport loading from '../imgs/loading1.gif';\nimport { Tooltip } from './Tooltip';\nimport { stringifyDates, createApiFilterState, parseDates, shortenDate, capitalize } from './util';\nimport { filterByLocation } from './TweetList';\nimport PageMenu from './PageMenu';\n\nlet newsAPI = new GoogleAPI();\nlet epiAPI = new BackendAPI();\ndeclare var trends: any;\nconst sections = ['frequency', 'media', 'gTrends'];\nconst gSections = [\n    {div: 'gTrends', widget: 'TIMESERIES'},\n    {div: 'gTopics', widget: 'RELATED_TOPICS'},\n    {div: 'gQueries', widget: 'RELATED_QUERIES'}\n];\n\nexport default class Trends extends React.Component<ITrendsProps, ITrendsState> {\n    constructor(props: ITrendsProps) {\n        super(props);\n        let sessionTrends = sessionStorage.getItem('trends');\n        if (isNull(sessionTrends)) {\n            this.state = {\n                title: '',\n                disease: '',\n                locations: [],\n                startDate: null,\n                endDate: null,\n                googleArticles: [],\n                frequencyData: undefined,\n                tweets: [],\n                googleCheck: 0,\n                twitterCheck: 0,\n                displaySection: 'frequency'\n            };\n        } else {\n            let sessionState = JSON.parse(sessionTrends);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n            console.log(sessionState);\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onTrends = this.onTrends.bind(this);\n        this.getGoogleData = this.getGoogleData.bind(this);\n    }\n\n    componentDidMount() {\n        if (!isNull(sessionStorage.getItem('trends'))) this.getGoogleTrends();\n    }\n\n    private getGoogleTrends(){\n        let startDate = stringifyDates(this.state.startDate, 'startDate');\n        let endDate = stringifyDates(this.state.endDate, 'endDate');\n        startDate = shortenDate(startDate);\n        endDate = shortenDate(endDate);\n        let geo = \"\";\n        if (this.state.locations.length == 1) {\n            let location = this.state.locations[0];\n            let country = location.substring(location.lastIndexOf(\",\") + 1);\n            geo = epiAPI.getUNLOCode(country);\n        }\n\n        let widgetCalls = [];\n        for (let i = 0; i < gSections.length; i++) {\n            let div = document.getElementById(gSections[i].div);\n            if (!isNull(div)) div.innerHTML = '';\n            widgetCalls.push({div: div, type: gSections[i].widget});\n        }\n\n        for (let i = 0; i < widgetCalls.length; i++) {\n            trends.embed.renderExploreWidgetTo(widgetCalls[i].div, widgetCalls[i].type, {\n                \"comparisonItem\":[{\n                    \"keyword\":this.state.disease, \"geo\":geo, \"time\":`${startDate} ${endDate}`\n                }],\n                \"category\":0,\n                \"property\":\"\"\n            }, {\n                \"exploreQuery\":`q=${this.state.disease}&geo=${geo}&time=${startDate} ${endDate}`,\n                \"guestPath\":\"https://trends.google.com:443/trends/embed/\"\n            });\n        }\n    }\n\n    private getGoogleData(dateArray: Array<Frequency>) {\n        let apiFilterState = createApiFilterState(this.state);\n        apiFilterState.location = this.state.locations.join(' ').replace(',', ' ');\n        this.setState({\n            googleArticles: [],\n            title: capitalize(this.state.disease),\n            googleCheck: 0\n        });\n        let count: Date = new Date(apiFilterState.startDate);\n\n        for (let i = 0; i < dateArray.length; i++) {\n            let countStart = stringifyDates(count, 'startDate');\n            let countEnd = stringifyDates(count, 'endDate');\n            apiFilterState['startDate'] = countStart;\n            apiFilterState['endDate'] = countEnd;\n\n            newsAPI.getFilteredMedia(apiFilterState, (error: any, response: any) => {\n                if (error && error.response) {\n                    let message = error.response.data.message\n                    console.log('error message', message);\n                } else if (error) {\n                    console.log('error message', error.message);\n                } else {\n                    this.setState({googleArticles: this.state.googleArticles.concat(response.articles)});\n                    dateArray[i].Google = response.totalResults;\n                    this.setState({frequencyData: dateArray, googleCheck: this.state.googleCheck + 1});\n                }\n            });\n\n            count.setDate(count.getDate() + 1);\n            count.setHours(0,0,0,0);\n        }\n    }\n\n    private getTwitterData(dateArray: Array<Frequency>) {\n        this.setState({tweets: [], twitterCheck: 0});\n\n        let diseaseTweets = epiAPI.getTwitterData(this.state.disease);\n        let newTweets: Array<string> = [];\n        let filtered = filterByLocation(diseaseTweets, this.state.locations);\n        for (let i = 0; i < dateArray.length; i++) {\n            let matched = filtered.filter(value => value.date == dateArray[i].date);\n            dateArray[i].Twitter = matched.length;\n            let ids = matched.map(value => (value.id));\n            newTweets = newTweets.concat(ids);\n        }\n        this.setState({tweets: newTweets, frequencyData: dateArray, twitterCheck: dateArray.length});\n    }\n\n    private onTrends() {\n        let dateArray = this.createDateArray();\n        this.setState({frequencyData: dateArray, displaySection: 'frequency'});\n        this.getGoogleTrends();\n        this.getGoogleData(dateArray);\n        this.getTwitterData(dateArray);\n        this.setState({frequencyData: dateArray});\n    }\n\n    private createDateArray() {\n        let startDate = stringifyDates(this.state.startDate, 'startDate');\n        let endDate = stringifyDates(this.state.endDate, 'endDate');\n        let count: Date = new Date(startDate);\n        let dateArray: Array<Frequency> = [];\n        let countStr =  stringifyDates(count, 'startDate').substring(0, startDate.indexOf('T'));\n        let endStr: string = shortenDate(endDate);\n        let temp: Frequency = {date: countStr};\n    \n        while (countStr != endStr) {\n            temp = { date: countStr, Twitter: 0, Google: 0 };\n            dateArray.push(temp);\n            count.setDate(count.getDate() + 1);\n            countStr =  stringifyDates(count, 'startDate').substring(0, startDate.indexOf('T'));\n        }\n        temp = { date: endStr, Twitter: 0, Google: 0 };\n        dateArray.push(temp);\n        return dateArray;\n    }\n    \n    private handleChange(event: any) {\n        this.setState(event);\n    }\n\n    private checkInputs() {\n        return (this.state.disease.length == 0 || isNull(this.state.startDate) || isNull(this.state.endDate));\n    }\n\n    private checkLoading() {\n        if (isUndefined(this.state.frequencyData)) {\n            return true;\n        } else if (this.state.googleCheck != this.state.frequencyData.length ||\n                    this.state.twitterCheck != this.state.frequencyData.length) {\n            return <img src={loading} className=\"loading\" alt=\"loading\" />;\n        }\n        sessionStorage.setItem('trends', JSON.stringify(this.state));\n        return false;\n    }\n\n    private changeSection(section: number) {\n        if (this.state.displaySection != sections[section]) {\n            this.setState({displaySection: sections[section]});\n        }\n    }\n\n    render() {\n        let currentDate = new Date();\n        let monthBack = new Date(new Date().setDate(currentDate.getDate() - 30));\n        let display = (this.checkLoading() == false) ? 'block' : 'none';\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                        <h1>TRENDS</h1>\n                        <div id=\"collapse-filters\" className=\"Filter-panel\">\n                            <DiseaseSearch disease={this.state.disease} updateDisease={this.handleChange}/>\n                            <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                            <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} minDate={monthBack} updateTime={this.handleChange}/>\n                            <Button disabled={this.checkInputs()} onClick={() => this.onTrends()}>Create Trends</Button>\n                        </div>\n                        <Form.Text className=\"text-muted\">\n                                * All filters except location are required.\n                        </Form.Text>\n                        <hr />\n                        {this.checkLoading()}\n                        <div style={{display: display}}>\n                            <ButtonGroup vertical className=\"Report-menu\">\n                                <Button size=\"lg\" className=\"Report-title\">{capitalize(this.state.title)} Trends</Button>\n                                <Button variant={this.state.displaySection == 'frequency' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(0)}>Frequency Mentions</Button>\n                                <Button variant={this.state.displaySection == 'media' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(1)}>Media Coverage</Button>\n                                <Button variant={this.state.displaySection == 'gTrends' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(2)}>Google Trends</Button>\n                            </ButtonGroup>\n                            <div className=\"Report-display\">\n                                <div style={{display: this.state.displaySection == 'frequency' ? 'block' : 'none'}}>\n                                    <FrequencyGraph\n                                        title={this.state.title}\n                                        titleType={'Google News and Twitter'}\n                                        types={['Google', 'Twitter']}\n                                        frequencyData={this.state.frequencyData}/>\n                                </div>\n                                <div style={{display: this.state.displaySection == 'media' ? 'block' : 'none'}}>\n                                    <MediaCoverage title={this.state.title} googleData={this.state.googleArticles} tweetData={this.state.tweets}/>\n                                </div>\n                                <div style={{display: this.state.displaySection == 'gTrends' ? 'block' : 'none'}}>\n                                    <p className=\"Section-title\">\n                                        <b>Google Trends on {this.state.title}</b>\n                                        <Tooltip description={'Google trends reflects the trends of Google search terms within time range.'} />\n                                    </p>\n                                    <div id=\"gTrends\"/>\n                                    <br></br>\n                                    <div id=\"gTopics\" className=\"GTrends\"/>\n                                    <div id=\"gQueries\" className=\"GTrends\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={(display == 'none') && (this.checkLoading() == true) ? {display: 'block'} : {display: 'none'}}>\n                            <PageMenu type=\"trends\" />\n                        </div>\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface ITrendsProps {\n}\n\ninterface ITrendsState {\n    title: string;\n    disease: string;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    googleArticles: Array<any>;\n    tweets: Array<string>;\n    frequencyData: Array<Frequency> | undefined;\n    googleCheck: number;\n    twitterCheck: number;\n    displaySection: string;\n}","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport Article from './components/Article';\nimport Analytics from './components/Analytics';\nimport Trends from './components/Trends';\n\nexport default class App extends Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <main>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/article\" component={Article} />\n            <Route path=\"/analyze\" component={Analytics} />\n            <Route path=\"/trends\" component={Trends} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </HashRouter>\n      </main>\n    );\n  }\n}\n\ninterface IAppProps {\n\n}\n\ninterface IAppState {\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"media/loading1.df540fd9.gif\";","module.exports = __webpack_public_path__ + \"media/logo.bf63f469.png\";"],"sourceRoot":""}