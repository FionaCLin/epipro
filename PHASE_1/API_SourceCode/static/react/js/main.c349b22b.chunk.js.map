{"version":3,"sources":["imgs/loading1.gif","API.tsx","components/Header.tsx","components/Home.tsx","components/TitleSearch.tsx","components/TimeSearch.tsx","components/ArticleCard.tsx","components/ArticleList.tsx","components/LocationSearch.tsx","components/KeytermSearch.tsx","components/PaginateSearch.tsx","components/Search.tsx","components/EventReport.tsx","components/EventReportList.tsx","components/Report.tsx","components/ReportList.tsx","components/Article.tsx","components/DiseaseSearch.tsx","Google.tsx","components/Heatmap.tsx","components/FrequencyFormat.tsx","components/FrequencyGraph.tsx","components/HistogramGraph.tsx","components/GoogleCard.tsx","components/GoogleCardList.tsx","components/TweetList.tsx","components/MediaCoverage.tsx","components/Analytics.tsx","App.tsx","index.tsx","imgs/logo.png"],"names":["module","exports","__webpack_require__","p","BackendAPI","Object","classCallCheck","this","baseURL","createClass","key","value","type","cb","axios","get","concat","then","response","data","catch","error","keyword","filter","q","locations","push","keyterms","startDate","endDate","url","query","join","console","log","api","Header","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","api_doc_url","_this2","doc_url","getAPIdocURL","message","setState","react_default","a","createElement","Navbar","className","variant","expand","react_router_dom","to","Brand","src","logo","height","width","alt","Nav","Link","onClick","sessionStorage","removeItem","href","React","Component","Home","Header_Header","defaultProps","username","password","TitleSearch","title","event","preventDefault","target","updateTitle","InputGroup","FormControl","placeholder","onChange","e","handleChange","Append","Button","onSearch","TimeSearch","maxDate","Date","minDate","isNull","changeMinMaxDate","dateType","timeState","updateTime","newDate","newMinMax","es","selected","selectsStart","dateFormat","placeholderText","selectsEnd","ArticleCard","main_text","cutCount","length","charAt","substring","pathname","Card","Body","Title","headline","Subtitle","date_of_publication","Text","trimText","ArticleList","isNullOrUndefined","articleList","map","articleData","ArticleCard_ArticleCard","loading","isUndefined","ListGroup","Item","showArticleList","checkLoading","checkResults","LocationSearch","values","filterOptions","getLocations","createFilterOptions","_this3","location","createLocationLabel","elem","index","self","indexOf","label","locationLabel","city","country","option","updateLocation","_this4","react_select_esm","isMulti","options","classNamePrefix","filterTypes","KeytermSearch","filterType","addFilterOptions","changeType","updateKeyterm","getKeyTerms","newKeyterms","keyterm","name","pageMargin","Math","floor","pageDisplayLimit","PaginateSearch","totalPages","articleCount","ceil","showCount","count","last","currentPage","pageNums","i","active","pageNum","Pagination","changePage","newPage","updatePaginate","animateScrollTo","calculateTotalPages","disableFirst","disableLast","First","disabled","Prev","createPageItems","Next","Last","showPagination","Search","sessionSearch","getItem","advancedFilter","undefined","sessionState","JSON","parse","parseDates","bind","assertThisInitialized","date","apiFilterState","createApiFilterState","getFilteredReports","setItem","stringify","stringifyKeyterms","stringifyDates","toISOString","slice","keytermString","end","start","id","TitleSearch_TitleSearch","aria-controls","aria-expanded","size","block","Collapse","in","KeytermSearch_KeytermSearch","LocationSearch_LocationSearch","TimeSearch_TimeSearch","ArticleList_ArticleList","paginateArticleList","PaginateSearch_PaginateSearch","EventReport","Badge","checkLocation","EventReportList","reports","report","EventReport_EventReport","Report","check","listProp","item","reported_events","EventReportList_EventReportList","ListCheck","disease","syndrome","CommentCheck","comment","ReportList","getAllReports","Report_Report","Article","ReportList_ReportList","DiseaseSearch","updateDisease","diseases","DiseaseList","syndromes","SyndromeList","GoogleAPI","apiKey","temp","mapsAPIkey","HeatMap","collapse","toggleCollapse","style","float","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","heatmapLibrary","heatmap","heatMapData","marginLeft","as","positions","lat","lng","radius","opacity","FrequencyFormat","es6","chartData","position","offset","dataKey","angle","strokeDasharray","types","activeDot","stroke","frequencyFilters","FrequencyGraph","frequencyFilter","frequencyData","interval","start_date","replace","end_date","newFrequency","k","getFullYear","getMonth","_loop","j","getTime","getTimezoneOffset","forEach","found","WHO","Twitter","Google","num","setMonth","setFullYear","split","reverse","formatXAxis","FrequencyFormat_FrequencyFormat","cleanChartData","marginRight","convertFrequency","defaultChecked","HistogramGraph","histogramData","fill","GoogleCard","minCut","display","borderColor","border","objectFit","urlToImage","padding","textDecoration","fontSize","source","publishedAt","marginTop","description","GoogleCardList","maxHeight","overflowY","GoogleCard_GoogleCard","TweetList","tweet_embed_es","toString","MediaCoverage","GoogleCardList_GoogleCardList","googleData","TweetList_TweetList","tweetData","GoogleData","articles","newsAPI","Analytics","onAnalyze","getFilteredMedia","DiseaseSearch_DiseaseSearch","FrequencyGraph_FrequencyGraph","Heatmap_HeatMap","HistogramGraph_HistogramGraph","MediaCoverage_MediaCoverage","App","react_router","exact","path","component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"js/main.c349b22b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/loading1.df540fd9.gif\";","import axios, { AxiosResponse, AxiosError } from \"axios\";\n\n\nexport interface IFilterOptions {\n    keyterms: string;\n    locations: string;\n    startDate: string;\n    endDate: string;\n}\n\nexport class BackendAPI {\n  baseURL: string = 'https://epiproapp.appspot.com/'\n  getKeyTerms(type: string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/key-terms/${type}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getLocations(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/locations/all`)\n    .then((response: AxiosResponse) => {\n      cb(null, response.data)\n    })\n    .catch((error: AxiosError) => {\n      cb(error, null)\n    });\n  }\n\n  getLocationsByKeyword(keyword:string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/locations/${keyword}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAllReports(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/filter`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAPIdocURL(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/doc-url`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n      });\n  }\n\n  getFilteredReports(filter: IFilterOptions, cb:(err: any, res: any) => any) {\n    let q :string[] = [];\n    if (filter.locations) {\n      q.push(`Location=${filter.locations}`)\n    }\n    if (filter.keyterms) {\n      q.push(`Key-terms=${filter.keyterms}`)\n    }\n    if (filter.startDate) {\n      q.push(`Start-date=${filter.startDate}`)\n    }\n    if(filter.endDate){\n      q.push(`End-date=${filter.endDate}`)\n    }\n    q.push(`Limit=300`);\n    let url = '';\n\n    let query = q.join('&')\n    url = `${this.baseURL}api/v1/reports/filter?${query}`\n\n    console.log(url);\n \n    axios.get(url)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n}  \n","import React from 'react';\nimport '../css/Home.css';\nimport { Navbar, Nav, Form, Button } from 'react-bootstrap';\nimport logo from '../imgs/logo.png';\nimport { Link } from 'react-router-dom';\nimport { BackendAPI } from '../API';\nimport { isNull } from 'util';\n\nlet api = new BackendAPI();\n\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\n    constructor(props: IHeaderProps) {\n        super(props);\n        this.state = {\n            api_doc_url: ''\n        };\n    }\n\n\n    componentWillMount() {\n        let doc_url:string='';\n        api.getAPIdocURL((error: any, response: any) => {\n            if (error) {\n                if (error.response) {\n                let message = error.response.data.message\n                console.log(message, 'ppp');\n                } else {\n                console.log(error.message, 'ppp');\n                }\n                return\n            }\n          doc_url = response;\n          console.log(doc_url, 'doc url in app tsx to set state')\n          this.setState({api_doc_url: doc_url})\n        });\n    }\n\n    render() {\n        return (\n            <Navbar className=\"App-theme\" variant=\"dark\" expand=\"lg\">\n                <Link to=\"/\">\n                    <Navbar.Brand>\n                        <img src={logo} className=\"d-inline-block align-top\" height=\"30\" width=\"30\" alt=\"logo\" />\n                        {' EpiPro'}\n                    </Navbar.Brand>\n                </Link>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link><Link to=\"/search\" className=\"link\">Search</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/analyze\" className=\"link\" onClick={() => sessionStorage.removeItem('search')}>Analyze</Link></Nav.Link>\n                    <Nav.Link href={this.state.api_doc_url} onClick={() => sessionStorage.removeItem('search')}>API Doc</Nav.Link>\n                </Nav>\n            </Navbar>\n        );\n    }\n}\n\ninterface IHeaderProps {\n}\n\ninterface IHeaderState {\n    api_doc_url: string;\n}","import React from 'react';\nimport logo from '../imgs/logo.png';\nimport '../css/Home.css';\nimport Header from './Header';\n\nexport default class Home extends React.Component<IHomeProps, IHomeState> {\n    constructor(props: IHomeProps) {\n        super(props);\n        console.log(this.state,'constructor');\n    }\n\n    static defaultProps = {\n        username: 'admin',\n        password: 'EpiProBreak219'\n    }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <Header />\n        <body>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Welcome to EpiPro</h1>\n            <h3>Predict. Prevent. Protect.</h3>\n          </header>\n        </body>\n      </div>\n    );\n  }\n}\n\ninterface IHomeProps {\n}\n\ninterface IHomeState {\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nexport default class TitleSearch extends React.Component<ITitleSearchProps, ITitleSearchState> {\n  constructor(props: ITitleSearchProps) {\n    super(props);\n    this.state = {\n        title: this.props.title\n    }\n  }\n  \n  private handleChange(event: React.ChangeEvent<HTMLSelectElement>) {\n      event.preventDefault();\n      this.setState({title: event.target.value});\n      this.props.updateTitle({title: event.target.value});\n  }\n\n  render() {\n    return (\n        <InputGroup className=\"mb-3\">\n            <FormControl\n                placeholder=\"Title search\"\n                type=\"text\"\n                onChange={(e: any) => this.handleChange(e)}\n                value={this.state.title}\n            />\n            <InputGroup.Append>\n                <Button onClick={this.props.onSearch}>Search</Button>\n            </InputGroup.Append>\n        </InputGroup>\n    );\n  }\n}\n\ninterface ITitleSearchProps {\n    title: string;\n    updateTitle: (e: object) => void;\n    onSearch: () => void;\n}\n\ninterface ITitleSearchState {\n    title: string;\n}","import React from 'react';\nimport '../css/Home.css';\nimport DatePicker from 'react-datepicker';\nimport { isNull } from 'util';\n\nexport default class TimeSearch extends React.Component<ITimeSearchProps, ITimeSearchState> {\n  constructor(props: ITimeSearchProps) {\n    super(props);\n    this.state = {\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      maxDate: new Date(),\n      minDate: null\n    }\n    if (!isNull(this.state.startDate)) this.changeMinMaxDate(this.state.startDate, 'startDate');\n    if (!isNull(this.state.startDate)) this.changeMinMaxDate(this.state.endDate, 'endDate');\n  }\n  \n  private handleChange(event: Date | null, dateType: string) {\n    let timeState: any = {};\n  \n    timeState[dateType] = event;\n    this.setState(timeState);\n    this.changeMinMaxDate(event, dateType);\n\n    this.props.updateTime(timeState);\n  }\n\n  private changeMinMaxDate(newDate: Date | null, dateType: string) {\n    let newMinMax: any = {\n      minDate: null,\n      maxDate: new Date()\n    }\n\n    if (!isNull(newDate)) {\n      \n      if (dateType == 'startDate') {\n        newMinMax['minDate'] = newDate;\n      } else {\n        newMinMax['maxDate'] = newDate;\n      }\n    }\n\n    this.setState(newMinMax);\n  }\n\n  render() {\n    return (\n      <div className=\"Filter-element\">\n        <div><b>Date Range</b></div>\n          <div className=\"Filter-inline-1\">\n            <DatePicker\n              selected={this.state.startDate}\n              selectsStart\n              startDate={this.state.startDate}\n              endDate={this.state.endDate}\n              dateFormat=\"dd/MM/yyyy\"\n              maxDate={this.state.maxDate}\n              onChange={(e:any) => this.handleChange(e, 'startDate')}\n              placeholderText='Start Date'\n            />\n          </div>\n          <div className='Time-between'>to</div>\n          <div className=\"Filter-inline-2\">\n          <DatePicker\n            selected={this.state.endDate}\n            selectsEnd\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n            dateFormat=\"dd/MM/yyyy\"\n            minDate={this.state.minDate}\n            maxDate={new Date()}\n            onChange={(e:any) => this.handleChange(e, 'endDate')}\n            placeholderText='End Date'\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface ITimeSearchProps {\n  updateTime: (event: object) => void;\n  startDate: Date | null;\n  endDate: Date | null;\n}\n\ninterface ITimeSearchState {\n  startDate: Date | null;\n  endDate: Date | null;\n  minDate: Date | null,\n  maxDate: Date \n}","import React from 'react';\nimport '../css/Home.css';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Report from './Report';\n\nexport default class ArticleCard extends React.Component<IArticleCardProps, IArticleCardState> {\n  constructor(props: IArticleCardProps) {\n    super(props);\n  }\n\n  trimText(main_text: string) {\n    let cutCount: number = main_text.length;\n    const minCut: number = 500;\n\n    if (cutCount > minCut) {\n      cutCount = minCut;\n      while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n        cutCount++;\n      }\n    }\n\n    return main_text.substring(0, cutCount);\n  }\n  \n  render() {\n    return (\n      <div>\n        <Link to={{\n          pathname:'/article',\n          state: this.props\n        }} className=\"link\">\n          <Card>\n            <div className=\"Card-hover\">\n            <Card.Body>\n              <Card.Title className='Card-title'><h3>{ this.props.headline }</h3></Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                <i>\n                  { this.props.url } • { this.props.date_of_publication }\n                </i>\n              </Card.Subtitle>\n              <Card.Text>{ this.trimText(this.props.main_text) }...</Card.Text>\n              </Card.Body>\n              </div>\n          </Card>\n        </Link>\n      </div>\n    );\n  }\n}\n\ninterface IArticleCardProps {\n  url: string;\n  date_of_publication: string;\n  headline: string;\n  main_text: string;\n  reports: Array<Report>;\n}\n\ninterface IArticleCardState {    \n}","import React from 'react';\nimport '../css/Home.css';\nimport { ListGroup } from 'react-bootstrap';\nimport ArticleCard from './ArticleCard';\nimport { isNullOrUndefined, isNull, isUndefined } from 'util';\nimport loading from '../imgs/loading1.gif';\n\nexport default class ArticleList extends React.Component<IArticleListProps, IArticleListState> {\n  constructor(props: IArticleListProps) {\n    super(props);\n  }\n\n  showArticleList() {\n    if (!isNullOrUndefined(this.props.articleList))\n    return this.props.articleList.map((articleData: any) => {\n      return <ArticleCard {...articleData}/>;\n    });\n  }\n\n  checkLoading() {\n    if (isNull(this.props.articleList)) {\n      return <img src={loading} className=\"loading\" alt=\"loading\" />;\n    }\n  }\n\n  checkResults() {\n    if (!isNullOrUndefined(this.props.articleList) && this.props.articleList.length == 0) {\n      return <p><br />No results found.</p>;\n    } else if (isUndefined(this.props.articleList)) {\n      return <p></p>;\n    }\n  }\n\n  render() {\n    return (\n\n    <div>\n    <ListGroup variant=\"flush\">\n        <ListGroup.Item>\n          {this.showArticleList()}\n        </ListGroup.Item>\n      </ListGroup>\n      {this.checkLoading()}\n      {this.checkResults()}\n    </div>\n    );\n  }\n}\n\ninterface IArticleListProps {\n  articleList: Array<any> | null | undefined;\n}\n\ninterface IArticleListState {\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport Select from 'react-select';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\n\nexport default class LocationSearch extends React.Component<ILocationSearchProps, ILocationSearchState> {\n  constructor(props: ILocationSearchProps) {\n    super(props);\n\n    this.state = {\n      values: this.props.locations,\n      filterOptions: []\n    }\n  }\n\n  componentWillMount() {\n    api.getLocations((error: any, response: any) => {\n      if (error && error.response) {\n        let message = error.response.data.message\n        console.log('error message', message);\n      } else if (error) {\n        console.log('error message', error.message);\n      }\n      let filterOptions: Array<Object> = this.createFilterOptions(response);\n\n      this.setState({filterOptions})\n    });\n  }\n\n  createFilterOptions(locations: Array<any>) {\n    let filteredLocations: Array<string> = [];\n\n    filteredLocations = locations.map((location: any) => this.createLocationLabel(location));\n    filteredLocations = filteredLocations.filter(function(elem, index, self) {\n      return index === self.indexOf(elem);\n    });\n\n    return filteredLocations.map((location: string, index: number) => ({\n      label: location,\n      value: index\n    }));\n  }\n\n  createLocationLabel(location: any) {\n    let locationLabel: string = '';\n    \n    if (location.city.length != 0) locationLabel = locationLabel.concat(location.city, \", \");\n    if (location.state.length != 0) locationLabel = locationLabel.concat(location.state, \", \");\n    if (location.country.length != 0) locationLabel = locationLabel.concat(location.country);\n  \n    return locationLabel;\n  }\n\n  private handleChange(event: Array<any>) {\n    let values: Array<String> = event.map(option => (option.label));\n    this.setState({ values });\n    console.log({ values });\n    this.props.updateLocation({ locations: values });\n  }\n\n  render() {\n    return (\n      <div className=\"Filter-element\">\n        <b>Locations</b>\n        <Select\n          isMulti\n          options={this.state.filterOptions}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n          placeholder=\"Select location...\"\n          onChange={(e: any) => this.handleChange(e)}\n          value={this.state.values.map((value: String) => { return { label: value, value }})}\n        />\n      </div>\n    );\n  }\n}\n\ninterface ILocationSearchProps {\n  updateLocation: (event: object) => void;\n  locations: Array<string>;\n}\n\ninterface ILocationSearchState {\n  values: Array<String>;\n  filterOptions: Array<Object>\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\nconst filterTypes: Array<any> = [\n    { label: 'General', value: 0, type: 'general' },\n    { label: 'Specific', value: 1, type: 'specific' }\n];\n\nexport default class KeytermSearch extends React.Component<IKeytermSearchProps, IKeytermSearchState> {\n    constructor(props: IKeytermSearchProps) {\n        super(props);\n\n        this.state = {\n            filterType: 0,\n            values: this.props.keyterms,\n            filterOptions: [],\n            keyterms: []\n        }\n    }\n\n    componentWillMount() {\n        this.addFilterOptions(filterTypes[1]);\n        this.addFilterOptions(filterTypes[0]);\n        this.changeType(filterTypes[0]);\n    }\n\n    private handleChange(event: Array<any>) {\n        console.log(event);\n        let values: Array<String> = event.map(option => (option.label));\n        this.setState({ values });\n        this.props.updateKeyterm(({ keyterms: values }));\n    }\n\n    private addFilterOptions(filterType: any) {\n        api.getKeyTerms(filterType.type, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            }\n\n            let newKeyterms: Array<any> = response.map((keyterm: any) => ({\n                label: keyterm.name,\n                value: keyterm.name,\n                type: filterType.type\n            }));\n\n            this.setState({\n                keyterms: this.state.keyterms.concat(newKeyterms),\n                filterOptions: newKeyterms\n            })\n        });\n    }\n\n    private changeType(event: any) {\n        this.setState({\n            filterType: event.value,\n            filterOptions: this.state.keyterms.filter((keyterm: any) => keyterm.type == event.type)\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Filter-element\">\n                <b>Keyterms</b>\n                <div className='Keyterm-flex'>\n                    <div className='Keyterm-left'>\n                        <Select\n                            value={filterTypes.filter(type => type.value == this.state.filterType)}\n                            options={filterTypes}\n                            onChange={(e: any) => this.changeType(e)}\n                        />\n                    </div>\n                    <div className='Keyterm-right'>\n                        <CreatableSelect\n                            isMulti\n                            options={this.state.filterOptions}\n                            className=\"basic-multi-select\"\n                            classNamePrefix=\"select\"\n                            placeholder=\"Select keyterms...\"\n                            onChange={(e: any) => this.handleChange(e)}\n                            value={this.state.values.map((value: String) => { return { label: value, value }})}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IKeytermSearchProps {\n    keyterms: Array<String>;\n    updateKeyterm: (event: object) => void;\n}\n\ninterface IKeytermSearchState {\n    filterType: Number;\n    values: Array<String>;\n    filterOptions: Array<Object>;\n    keyterms: Array<Object>\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport { Pagination } from 'react-bootstrap';\nimport { isNull } from 'util';\nimport animateScrollTo from 'animated-scroll-to';\n\nconst pageDisplayLimit: number = 5;\nconst pageMargin: number = Math.floor(pageDisplayLimit/2);\n\nexport default class PaginateSearch extends React.Component<IPaginateSearchProps, IPaginateSearchState> {\n    constructor(props: IPaginateSearchProps) {\n        super(props);\n    }\n\n    calculateTotalPages() {\n        let totalPages: number = 0;\n        if (!isNull(this.props.articleCount) && this.props.articleCount != 0) {\n            totalPages = Math.ceil(this.props.articleCount/this.props.showCount);\n        }\n        return totalPages;\n    }\n\n    createPageItems(totalPages: number) {\n        let count, last;\n        if (this.props.currentPage <= pageMargin) {\n            count = 1;\n            last = pageDisplayLimit;\n        } else if (this.props.currentPage + pageMargin > totalPages) {\n            count = totalPages - pageDisplayLimit;\n            last = totalPages;\n        } else {\n            count = this.props.currentPage - pageMargin;\n            last = this.props.currentPage + pageMargin;\n        }\n\n        if (count < 0) count = 1;\n        if (last > totalPages) last = totalPages;\n\n        let pageNums: Array<number> = [];\n        for (let i = count; i <= last; i++) pageNums.push(i);\n\n        let active: boolean = false;\n        return pageNums.map((pageNum: number) => {\n            active = (pageNum == this.props.currentPage);\n            return <Pagination.Item onClick={() => this.changePage(pageNum)} active={active}>{pageNum}</Pagination.Item>;\n        });\n    }\n\n    private changePage(newPage: number) {\n        if (newPage != this.props.currentPage) {\n            this.props.updatePaginate({currentPage: newPage});\n            animateScrollTo(0);\n        }\n    }\n\n    private showPagination() {\n        if (!isNull(this.props.articleCount)) {\n            let totalPages: number = this.calculateTotalPages();\n            if (totalPages != 0) {\n                let disableFirst: boolean = (this.props.currentPage == 1);\n                let disableLast: boolean = (this.props.currentPage == totalPages);\n\n                return (\n                    <Pagination>\n                        <Pagination.First onClick={() => this.changePage(1)} disabled={disableFirst}/>\n                        <Pagination.Prev onClick={() => this.changePage(this.props.currentPage - 1)} disabled={disableFirst}/>\n                        { this.createPageItems(totalPages) }\n                        <Pagination.Next onClick={() => this.changePage(this.props.currentPage + 1)} disabled={disableLast}/>\n                        <Pagination.Last onClick={() => this.changePage(totalPages)} disabled={disableLast}/>\n                    </Pagination>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"pagination\">\n            {this.showPagination()}\n        </div>\n        );\n    }\n}\n\ninterface IPaginateSearchProps {\n    currentPage: number;\n    articleCount: number | null;\n    showCount: number;\n    updatePaginate: (e: object) => void;\n}\n\ninterface IPaginateSearchState {\n\n}","import React from 'react';\nimport '../css/Home.css';\nimport { Button, Collapse } from 'react-bootstrap';\nimport TitleSearch from './TitleSearch';\nimport TimeSearch from './TimeSearch';\nimport ArticleList from './ArticleList';\nimport LocationSearch from './LocationSearch';\nimport KeytermSearch from './KeytermSearch';\nimport { BackendAPI, IFilterOptions } from '../API';\nimport { isNull, isNullOrUndefined } from 'util';\nimport PaginateSearch from './PaginateSearch';\nimport Header from './Header';\n\nlet api = new BackendAPI();\n\nexport default class Search extends React.Component<ISearchProps, ISearchState> {\n    constructor(props: ISearchProps) {\n        super(props);\n\n        let sessionSearch = sessionStorage.getItem('search');\n        if (isNull(sessionSearch)) {\n            this.state = {\n                title: '',\n                keyterms: [],\n                locations: [],\n                startDate: null,\n                endDate: null,\n                advancedFilter: false,\n                articleList: undefined,\n                currentPage: 1,\n                showCount: 10,\n                articleCount: 0\n            }\n        } else {\n            let sessionState = JSON.parse(sessionSearch);\n            sessionState.startDate = this.parseDates(sessionState.startDate);\n            sessionState.endDate = this.parseDates(sessionState.endDate);\n            this.state = sessionState;\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n    }\n\n    private parseDates(date: string | null) {\n        return (!isNull(date) ? new Date(date) : date);\n    }\n\n    private onSearch() {\n        let apiFilterState: IFilterOptions = this.createApiFilterState();\n        \n        this.setState({\n            articleList: null,\n            articleCount: null\n        })\n\n        api.getFilteredReports(apiFilterState, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            }\n            this.setState({\n                articleList: response,\n                articleCount: (!isNullOrUndefined(response)) ? response.length : 0,\n                currentPage: 1\n            });\n            console.log(response.length);\n            sessionStorage.setItem('search', JSON.stringify(this.state));\n        });\n    }\n\n    private createApiFilterState() {\n        return ({\n            keyterms: this.stringifyKeyterms(),\n            locations: this.state.locations.join(','),\n            startDate: this.stringifyDates(this.state.startDate),\n            endDate: this.stringifyDates(this.state.endDate),\n        });\n    }\n\n    private stringifyDates(date: Date | null) {\n        return (!isNull(date) ? date.toISOString().slice(0, -5) : '');\n    }\n\n    private stringifyKeyterms() {\n        let keytermString: string = this.state.keyterms.join(',');\n        if (this.state.title.length != 0) {\n            keytermString += ','  + this.state.title;\n        }\n        return keytermString;\n    }\n\n    private handleChange(event: any) {\n        this.setState(event);\n        console.log(event);\n    }\n\n    private paginateArticleList() {\n        if (!isNullOrUndefined(this.state.articleList)) {\n            let end: number = this.state.currentPage * this.state.showCount;\n            let start: number = end - this.state.showCount;\n            return this.state.articleList.slice(start, end);\n        } else {\n            return this.state.articleList;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                            <h1>SEARCH</h1>\n                            <div>\n                                <TitleSearch title={this.state.title} onSearch={this.onSearch} updateTitle={this.handleChange} />\n                            </div>\n                            <Button\n                                onClick={() => this.handleChange({advancedFilter: !this.state.advancedFilter})}\n                                aria-controls=\"collapse-filters\"\n                                aria-expanded={this.state.advancedFilter}\n                                variant=\"secondary\" size=\"sm\"\n                                block\n                            >\n                                Advanced Filters\n                            </Button>\n                            <Collapse in={this.state.advancedFilter}>\n                                <div id=\"collapse-filters\" className=\"Filter-panel\">\n                                    <KeytermSearch keyterms={this.state.keyterms} updateKeyterm={this.handleChange}/>\n                                    <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                                    <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                                    <div className=\"Filter-button\">\n                                        <Button onClick={this.onSearch}>Advanced Search</Button>\n                                    </div>\n                                </div>\n                            </Collapse>\n                            <div className='ArticleList-division' />\n                            <ArticleList articleList={this.paginateArticleList()}/>\n                            <br></br>\n                            <PaginateSearch\n                                articleCount={this.state.articleCount}\n                                currentPage={this.state.currentPage}\n                                showCount={this.state.showCount}\n                                updatePaginate={this.handleChange}\n                            />\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n//TODO write Search function fetch backend report data.\ninterface ISearchProps {\n\n}\n\ninterface ISearchState {\n    advancedFilter: boolean;\n    title: string;\n    keyterms: Array<string>;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    articleList: Array<any> | null | undefined;\n    currentPage: number;\n    showCount: number;\n    articleCount: number | null;\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport { isNullOrUndefined } from 'util';\nimport { Badge } from 'react-bootstrap';\n\nexport default class EventReport extends React.Component<IEventReportProps, IEventReportState> {\n  constructor(props: IEventReportProps) {\n    super(props);\n  }\n  \n  checkLocation(location: LocationBasic | LocationAdvanced) {\n      let locationProp = null;\n      if (!isNullOrUndefined(location['geonames-id'])) {\n        locationProp = <p><b>Location:</b> {location['geonames-id']}</p>;\n      } else {\n        locationProp = <p><b>Location:</b> {location.location}, {location.country}</p>\n      }\n      return locationProp;\n  }\n\n  render() {\n    return (\n        <div>\n            <p><b>Type: </b> \n                <Badge className=\"Badge-division\" variant=\"secondary\">\n                    {this.props.type}\n                </Badge>\n            </p>\n            <p><b>Date:</b> {this.props.date}</p>\n            {this.checkLocation(this.props.location)}\n            <p><b>Number Affected:</b> {this.props['number-affected']}</p>\n        </div>\n        \n    );\n  }\n}\n\ninterface LocationAdvanced {\n    'geonames-id': number;\n    [key: string]: number;\n}\n\ninterface LocationBasic {\n    country: string;\n    location: string;\n    [key: string]: string;\n}\n\ninterface IEventReportProps {\n  type: string;\n  date: string;\n  location: LocationAdvanced | LocationBasic;\n  'number-affected': number;\n}\n\ninterface IEventReportState {    \n}","import React from 'react';\nimport '../css/Home.css';\nimport EventReport from './EventReport';\nimport { Card } from 'react-bootstrap';\n\nexport default class EventReportList extends React.Component<IEventReportListProps, IEventReportListState>{\n  constructor(props: IEventReportListProps) {\n    super(props);\n  }\n  \n  render() {\n    return (\n        <div>\n            <p><b>Event Reports:</b></p>\n            {this.props.reports.map((report: any) => {\n                return <div className=\"EventReport-division\">\n                    <Card>\n                        <Card.Body className=\"EventReport-card\">\n                            <EventReport {...report} />\n                        </Card.Body>\n                    </Card>\n                </div>\n            })}\n        </div>\n    );\n  }\n}\n\ninterface IEventReportListProps {\n  reports: Array<EventReport>;\n}\n\ninterface IEventReportListState {    \n}","import React from 'react';\nimport '../css/Home.css';\nimport EventReport from './EventReport';\nimport { isNull } from 'util';\nimport { Badge } from 'react-bootstrap';\nimport EventReportList from './EventReportList';\n\nexport default class Report extends React.Component<IReportProps, IReportState> {\n  constructor(props: IReportProps) {\n    super(props);\n  }\n  \n  private ListCheck(check: Array<string>, type:string) {\n    let listProp: any = null;\n    if (!isNull(check) && check.length != 0) {\n        listProp = check.map((item: string) =>\n        {\n            return <Badge className=\"Badge-division\" variant=\"secondary\">{item}</Badge>\n        })\n        listProp = (<p><b>{type}:</b> {listProp}</p>);\n    }\n    return listProp;\n  }\n\n  private CommentCheck(check: string) {\n      return (\n        (!isNull(check)) ? <p><b>Comments:</b> {check}</p> : null\n      )\n  }\n\n  render() {\n    let reported_events = (this.props.reported_events.length != 0) ?\n        <EventReportList reports={this.props.reported_events}/> : null;\n\n    return (\n        <div>\n            {this.ListCheck(this.props.disease, 'Disease')}\n            {this.ListCheck(this.props.syndrome, 'Syndrome')}\n            {reported_events}\n            {this.CommentCheck(this.props.comment)}\n        </div>\n    );\n  }\n}\n\nexport interface IReportProps {\n  disease: Array<string>;\n  syndrome: Array<string>;\n  reported_events: Array<EventReport>\n  comment: string;\n}\n\ninterface IReportState {    \n}","import React from 'react';\nimport '../css/Home.css';\nimport Report from './Report';\nimport { ListGroup } from 'react-bootstrap';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\nexport default class ReportList extends React.Component<IReportListProps, IReportListState>{\n  constructor(props: IReportListProps) {\n    super(props);\n    console.log(this.props.reports);\n  }\n  \n  render() {\n    let reports;\n    api.getAllReports((error: any, response: any) => {\n      if (error) {\n        if (error.response) {\n          let message = error.response.data.message\n          console.log(message, 'ppp');\n        } else {\n          console.log(error.message, 'ppp');\n        }\n      }\n      reports = response;\n      console.log(reports, 'reports in app tsx')\n    });\n\n    return (\n        <div className=\"ReportList-division\">\n            <h3>Reports</h3>\n            <ListGroup>\n                {this.props.reports.map((report: any) => {\n                    return <ListGroup.Item>\n                        <Report {...report} />\n                    </ListGroup.Item>\n                })}\n            </ListGroup>\n        </div>\n    );\n  }\n}\n\ninterface IReportListProps {\n  reports: Array<Report>;\n}\n\ninterface IReportListState {    \n}\n","import React from 'react';\nimport '../css/Home.css';\nimport Report from './Report';\nimport ReportList from './ReportList';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from './Header';\n\nexport default class Article extends React.Component<IArticleProps, IArticleState>{\n  constructor(props: IArticleProps) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.setState(this.props.location.state);\n  }\n  \n  render() {\n    return (\n        <div className=\"bg\">\n            <Header />\n            <body id=\"top\">\n                <div className=\"Main\">\n                    <Link to='/search'><Button variant=\"outline-primary\">Back to Search</Button></Link>\n                    <p></p>\n                    <br></br>\n                    <h1>{this.state.headline}</h1>\n                    <p><i>URL: <a href={this.state.url}>{this.state.url}</a></i></p>\n                    <p><i>DOP: {this.state.date_of_publication}</i></p>\n                    <p>{this.state.main_text}</p>\n                    <ReportList reports={this.state.reports} />\n                </div>\n            </body>\n        </div>\n    );\n  }\n}\n\ninterface IArticleProps {\n  history: any;\n  location: {state: IArticleState};\n}\n\ninterface IArticleState {\n  url: string;\n  date_of_publication: string;\n  headline: string;\n  main_text: string;\n  reports: Array<Report>;   \n}","import React from 'react';\nimport '../css/Home.css';\nimport Select from 'react-select';\nimport DiseaseList from '../dummydata/disease_list.json';\nimport SyndromeList from '../dummydata/syndrome_list.json';\n\nconst filterTypes: Array<any> = [\n    { label: 'Disease', value: 0, type: 'disease' },\n    { label: 'Syndrome', value: 1, type: 'syndrome' }\n];\n\nexport default class DiseaseSearch extends React.Component<IDiseaseSearchProps, IDiseaseSearchState> {\n    constructor(props: IDiseaseSearchProps) {\n        super(props);\n\n        this.state = {\n            filterType: 0,\n            value: this.props.disease,\n            filterOptions: this.addFilterOptions()\n        }\n    }\n\n    private handleChange(event: any) {\n        console.log(event);\n        this.setState({ value: event.label });\n        this.props.updateDisease({ disease: event.label });\n    }\n\n    private addFilterOptions() {\n        let diseases: Array<Object> = DiseaseList.map((disease: any) => {\n            return { label: disease.name, value: disease.name, type: 'disease' }\n        });\n        let syndromes: Array<Object> = SyndromeList.map((syndrome: any) => {\n            return { label: syndrome.name, value: syndrome.name, type: 'syndrome' }\n        });\n        return diseases.concat(syndromes);\n    }\n\n    private changeType(event: any) {\n        this.setState({\n            filterType: event.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Filter-element\">\n                <b>Diseases</b>\n                <div className='Keyterm-flex'>\n                    {/* <div className='Keyterm-left'>\n                        <Select\n                            value={filterTypes.filter(type => type.value == this.state.filterType)}\n                            options={filterTypes}\n                            onChange={(e: any) => this.changeType(e)}\n                        />\n                    </div> */}\n                    <div className='Keyterm-right'>\n                        <Select\n                            options={this.state.filterOptions.filter((option: any) => option.type == filterTypes[this.state.filterType].type)}\n                            classNamePrefix=\"select\"\n                            placeholder=\"Select disease...\"\n                            onChange={(e: any) => this.handleChange(e)}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IDiseaseSearchProps {\n    updateDisease: (event: object) => void;\n    disease: string;\n}\n\ninterface IDiseaseSearchState {\n    filterType: number;\n    value: string;\n    filterOptions: Array<Object>;\n}","import axios, { AxiosError, AxiosResponse } from 'axios'\n\nexport interface IFilterOptions {\n    disease: string;\n    location: string;\n    startDate: string;\n    endDate: string;\n}\n\nexport default class GoogleAPI {\n    baseURL: string = 'https://newsapi.org/';\n    apiKey: string = '93ab589956f84076963dac0eb76d6a41';\n\n    getFilteredMedia(filter: IFilterOptions, cb:(err: any, res: any) => any) {\n        let q :string[] = [];\n        if (filter.disease) {\n            let temp: string = `q=\"${filter.disease}\"`;\n            if (filter.location) {\n                temp += `+\"${filter.location}\"`;\n            }\n            q.push(temp);\n        }\n        if (filter.startDate) {\n            q.push(`from=${filter.startDate}`);\n        }\n        if (filter.endDate){\n            q.push(`to=${filter.endDate}`);\n        }\n\n        if (q.length != 0) {\n            q.push(`apiKey=${this.apiKey}`);\n            let query = q.join('&');\n            let url = `${this.baseURL}v2/everything?${query}`\n            console.log(url);\n    \n            axios.get(url)\n                .then((response: AxiosResponse) => {\n                    cb(null, response.data)\n                })\n                .catch((error: AxiosError) => {\n                    cb(error, null)\n            });\n        }\n    }\n} ","import React from 'react';\nimport '../css/Home.css';\nimport GoogleMapReact from 'google-map-react';\nimport { Card, ListGroup, Button, Collapse } from 'react-bootstrap';\n\nlet mapsAPIkey = { key: 'AIzaSyAWAexUwY_tKggKe5GoqUmdCLV3h8si3Co' };\n\nexport default class HeatMap extends React.Component<IHeatMapProps, IHeatMapState> {\n    constructor(props: IHeatMapProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        };\n    }\n\n    static defaultProps = {\n        heatMapData: {\n            positions: [\n                {lat: 37.782551, lng: -122.445368},\n                {lat: 37.782745, lng: -122.444586},\n                {lat: 37.782842, lng: -122.443688},\n                {lat: 37.782919, lng: -122.442815},\n                {lat: 37.782992, lng: -122.442112},\n                {lat: 37.783100, lng: -122.441461},\n                {lat: 37.783206, lng: -122.440829},\n                {lat: 37.783273, lng: -122.440324},\n                {lat: 37.783316, lng: -122.440023},\n                {lat: 37.783357, lng: -122.439794},\n                {lat: 37.783371, lng: -122.439687},\n                {lat: 37.783368, lng: -122.439666},\n                {lat: 37.783383, lng: -122.439594},\n                {lat: 37.783508, lng: -122.439525},\n                {lat: 37.783842, lng: -122.439591},\n                {lat: 37.784147, lng: -122.439668},\n                {lat: 37.784206, lng: -122.439686},\n                {lat: 37.784386, lng: -122.439790},\n                {lat: 37.784701, lng: -122.439902},\n                {lat: 37.784965, lng: -122.439938},\n                {lat: 37.785010, lng: -122.439947},\n                {lat: 37.785360, lng: -122.439952},\n                {lat: 37.785715, lng: -122.440030},\n                {lat: 37.786117, lng: -122.440119},\n                {lat: 37.786564, lng: -122.440209},\n                {lat: 37.786905, lng: -122.440270},\n                {lat: 37.786956, lng: -122.440279},\n                {lat: 37.800224, lng: -122.433520},\n            ],\n            options: {\n                radius: 20,\n                opacity: 0.6\n            }\n        },\n        defaultZoom: 13,\n        defaultCenter: {\n            lat: 37.774546,\n            lng: -122.433523\n        }\n  }\n\n    private toggleCollapse() {\n        this.setState({\n            collapse: !this.state.collapse\n        });\n    }\n\n  render() {\n    return (\n        <div>\n            <Button\n                onClick={() => this.toggleCollapse()}\n                aria-controls=\"heatmap\"\n                aria-expanded={this.state.collapse}\n                variant=\"secondary\"\n                block\n            >\n                Heatmap\n            </Button>\n            <Collapse in={this.state.collapse}>\n                <div id=\"heatmap\">\n                    <div className=\"Analytics-collapse\">\n                        <div style={{height: '450px', width: '70%', float: \"left\"}}>\n                            <GoogleMapReact\n                                bootstrapURLKeys={mapsAPIkey}\n                                defaultCenter={this.props.defaultCenter}\n                                defaultZoom={this.props.defaultZoom}\n                                heatmapLibrary={true}\n                                heatmap={this.props.heatMapData}\n                            >\n                            </GoogleMapReact>\n                        </div>\n                        <div style={{float: \"left\", height: '450px', marginLeft: '10px', width: '29%'}}>\n                            <Card style={{height:\"100%\"}}>\n                                <Card.Header as=\"h5\">Zika occurences</Card.Header>\n                                <Card.Body>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>Lower Pacific Heights, California, USA <div style={{float: 'right'}}><b>311</b></div></ListGroup.Item>\n                                        <ListGroup.Item>Marina District, California, USA <div style={{float: 'right'}}><b>25</b></div></ListGroup.Item>\n                                    </ListGroup>\n                                </Card.Body>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </Collapse>\n            <br></br>\n        </div>\n    );\n  }\n}\n\ninterface IHeatMapProps {\n    locations?: Array<object>;\n    defaultCenter?: GeoPosition;\n    defaultZoom?: number;\n    heatMapData?: IHeatMap;\n}\n\ninterface IHeatMapState {\n    collapse: boolean;\n}\n\ninterface IHeatMap {\n    positions: Array<GeoPosition>;\n    options: PositionWeight;\n}\n\ninterface GeoPosition {\n    lat: number;\n    lng: number;\n}\n\ninterface PositionWeight {\n    radius: number;\n    opacity: number;\n}","import React from 'react';\nimport '../css/Home.css';\nimport { LineChart, ResponsiveContainer, XAxis, YAxis, Line, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nexport default class FrequencyFormat extends React.Component<IFrequencyFormatProps, IFrequencyFormatState> {\n    constructor(props: IFrequencyFormatProps) {\n        super(props);\n    }\n\n  render() {\n    return (\n        <div className='Frequency-chart'>\n            <b>{this.props.title}</b>\n            <ResponsiveContainer width = '100%' height = '90%' >\n                <LineChart data={this.props.chartData}>\n                    <XAxis label={{value: 'Dates', position: 'insideBottom', offset: 0}} dataKey=\"date\"/>\n                    <YAxis label={{value: 'Mentions count', position: 'insideLeft', angle: -90, offset: 25}}/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Tooltip/>\n                    <Legend />\n                    {this.props.types.map((type: string, index: number) => {\n                        return <Line key={index} type=\"monotone\" dataKey={type} activeDot stroke=\"#82ca9d\" />\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n  }\n}\n\ninterface IFrequencyFormatProps {\n    title: string;\n    chartData?: Array<Plot>;\n    types: Array<string>;\n}\n\ninterface IFrequencyFormatState {\n}\n\ninterface Plot {\n    date: string;\n    WHO: number;\n    Twitter: number;\n    Google: number;\n}","import React from 'react';\nimport '../css/Home.css';\nimport { Button, Collapse, InputGroup, ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport FrequencyFormat from './FrequencyFormat';\nimport { isUndefined } from 'util';\n\nconst frequencyFilters: Array<string> = ['day', 'month', 'year'];\n\nexport default class FrequencyGraph extends React.Component<IFrequencyGraphProps, IFrequencyGraphState> {\n    constructor(props: IFrequencyGraphProps) {\n        super(props);\n        this.state = {\n            collapse: true,\n            frequencyFilter: frequencyFilters[0],\n            frequencyData: (!isUndefined(this.props.chartData)) ? this.props.chartData : []\n        };\n    }\n\n    static defaultProps = {\n        chartData: [\n            { WHO: 1, Twitter: 2, Google: 3, date: \"2017-02-25Txx:xx:xx\" },\n            { WHO: 2, Twitter: 3, Google: 4, date: \"2017-02-26Txx:xx:xx\" },\n            { WHO: 3, Twitter: 4, Google: 5, date: \"2017-02-27Txx:xx:xx\" },\n            { WHO: 4, Twitter: 5, Google: 6, date: \"2017-02-28Txx:xx:xx\" },\n            { WHO: 5, Twitter: 6, Google: 7, date: \"2017-03-01Txx:xx:xx\" },\n            { WHO: 6, Twitter: 7, Google: 8, date: \"2017-03-02Txx:xx:xx\" }\n        ]\n    }\n\n    private toggleCollapse() {\n        this.setState({\n            collapse: !this.state.collapse\n        });\n    }\n\n    private convertFrequency(interval: string) {\n        let data = this.props.chartData;\n        if (!isUndefined(data) && this.state.frequencyFilter != interval) {\n            if (interval == 'day') {\n                this.setState({frequencyData: data, frequencyFilter: interval});\n            } else {\n                let start_date = new Date(data[0].date.replace(/x/g, '0'));\n                let end_date= new Date(data[data.length - 1].date.replace(/x/g, '0'));\n\n                let newFrequency: Array<Frequency> = [];\n                let k = new Date(start_date.getFullYear(), start_date.getMonth(), 1);\n                while(k <= end_date) {\n                    let j = new Date(k.getTime() - k.getTimezoneOffset() * 60000).toISOString();\n                    data.forEach((date: Frequency, i: number) => {\n                        let a = (interval == 'month') ? j.indexOf('-', j.indexOf('-') + 1) : j.indexOf('-');\n                        let p = j.substring(0, a);\n                        if (date.date.indexOf(p) !== -1) {\n                            let found = newFrequency.filter(e => e.date == p);\n                            if (found.length == 0) {\n                                newFrequency.push({\n                                    date: p,\n                                    WHO: date.WHO,\n                                    Twitter: date.Twitter,\n                                    Google: date.Google\n                                });\n                            } else {\n                                let num = newFrequency.indexOf(found[0]);\n                                newFrequency[num] = {\n                                    date: newFrequency[num].date,\n                                    WHO: newFrequency[num].WHO + date.WHO,\n                                    Google: newFrequency[num].Google + date.Google,\n                                    Twitter: newFrequency[num].Twitter + date.Twitter\n                                }\n                            }\n                        }\n                    });\n                    if (interval == 'month') k.setMonth(k.getMonth() + 1);\n                    else k.setFullYear(k.getFullYear() + 1);\n                }\n\n                this.setState({frequencyData: newFrequency, frequencyFilter: interval});\n                console.log(newFrequency);\n            }\n        }\n    }\n\n    formatXAxis(date: string) {\n        let newDate: string = date;\n        if (date.indexOf('T') != -1) newDate = newDate.substring(0, date.indexOf('T'));\n        newDate = newDate.split('-').reverse().join('/');\n        return newDate;\n    }\n\n    private cleanChartData(data?: Array<Frequency>) {\n        if (!isUndefined(data)) {\n            return data.map((value: Frequency) => {\n                return {\n                    WHO: value.WHO,\n                    Twitter: value.Twitter,\n                    Google: value.Google,\n                    date: this.formatXAxis(value.date)\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Button\n                    onClick={() => this.toggleCollapse()}\n                    aria-controls=\"frequency\"\n                    aria-expanded={this.state.collapse}\n                    variant=\"secondary\"\n                    block\n                >\n                    Frequency Mentions\n                </Button>\n                <Collapse in={this.state.collapse}>\n                    <div id=\"frequency\">\n                        <div className=\"Analytics-collapse\">\n                            <FrequencyFormat title='Frequency of Zika mentions on articles at WHO' types={['WHO']} chartData={this.cleanChartData(this.state.frequencyData)}/>\n                            <FrequencyFormat title='Frequency of Zika mentions on different media coverage' types={['Twitter', 'Google']} chartData={this.cleanChartData(this.state.frequencyData)}/>\n                            <div style={{float: 'left', marginRight: '10px'}}>Date frequency:</div>\n                            <input type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[0])} name=\"frequencyFilter\" defaultChecked/>Day\n                            <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[1])} name=\"frequencyFilter\" />Month\n                            <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[2])} name=\"frequencyFilter\" />Year\n                        </div>\n                    </div>\n                </Collapse>\n                <br></br>\n            </div>\n        );\n    }\n}\n\ninterface IFrequencyGraphProps {\n    chartData?: Array<Frequency>;\n}\n\ninterface IFrequencyGraphState {\n    collapse: boolean;\n    frequencyFilter: string;\n    frequencyData: Array<Frequency>;\n}\n\ninterface Frequency {\n    date: string;\n    WHO: number;\n    Twitter: number;\n    Google: number;\n}","import React from 'react';\nimport '../css/Home.css';\nimport { Button, Collapse } from 'react-bootstrap';\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Legend, Bar, Tooltip } from 'recharts';\n\nexport default class HistogramGraph extends React.Component<IHistogramGraphProps, IHistogramGraphState> {\n  constructor(props: IHistogramGraphProps) {\n    super(props);\n    this.state = {\n      collapse: true\n    };\n  }\n\n  static defaultProps = {\n    histogramData: [\n      { event:'presence', count: 12 },\n      { event: 'death', count: 0 },\n      { event: 'infected', count: 30 },\n      { event: 'hospitalised', count: 43 },\n      { event: 'recovered', count: 21 }\n    ]\n  };\n\n  private toggleCollapse() {\n    this.setState({\n        collapse: !this.state.collapse\n    });\n  }\n\n  render() {\n    return (\n    <div>\n      <Button\n        onClick={() => this.toggleCollapse()}\n        aria-controls=\"histogram\"\n        aria-expanded={this.state.collapse}\n        variant=\"secondary\"\n        block\n      >\n        Event Histogram\n      </Button>\n      <Collapse in={this.state.collapse}>\n        <div id=\"histogram\">\n            <div className=\"Analytics-collapse\">\n                <div className=\"Histogram-chart\">\n                    <b>{this.props.title}</b>\n                    <ResponsiveContainer width = '100%' height = '100%' >\n                        <BarChart data={this.props.histogramData}>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis label={{value: 'Event types', position: 'insideBottom', offset: 0}} dataKey=\"event\"/>\n                        <YAxis label={{value: 'Event type count', position: 'insideLeft', angle: -90, offset: 25}}/>\n                        <Tooltip/>\n                        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        </div>\n      </Collapse>\n      <br></br>\n    </div>\n    );\n  }\n}\n\ninterface IHistogramGraphProps {\n  histogramData?: Array<HistBar>;\n  title: string;\n}\n\ninterface IHistogramGraphState {\n  collapse: boolean;\n}\n\ninterface HistBar {\n  event: string;\n  count: number;\n}","import React from 'react';\nimport '../css/Home.css';\nimport { Card } from 'react-bootstrap';\n\nexport default class GoogleCard extends React.Component<IGoogleCardProps, IGoogleCardState> {\n    constructor(props: IGoogleCardProps) {\n        super(props);\n    }\n\n    trimText(main_text: string, minCut: number) {\n        let cutCount: number = main_text.length;\n    \n        if (cutCount > minCut) {\n          cutCount = minCut;\n          while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n            cutCount++;\n          }\n        }\n    \n        return main_text.substring(0, cutCount);\n    }\n\n    render() {\n        return (\n            <a href={this.props.url} className=\"link\" target=\"_blank\">\n            <Card className=\"Card-hover\">\n            <div style={{height: '200px', display: 'flex', borderColor: 'darkGray', border: '1px'}}>\n                <img style={{float: 'left', objectFit: 'cover', height: '200px', width: '200px'}} src={this.props.urlToImage}/>\n                <div style={{float: 'left', width: '100%', padding: '10px'}}>\n                    <h5 style={{textDecoration: 'underline'}}>{ this.trimText(this.props.title, 50) }</h5>\n                    <div style={{fontSize: 'small'}}>\n                        <i>{ this.props.source.name } • { this.props.publishedAt }</i>\n                        <p style={{marginTop: '5px'}}>{ this.trimText(this.props.description, 250) }...</p>\n                    </div>\n                </div>\n            </div>\n            </Card>\n            </a>\n        );\n    }\n}\n\ninterface IGoogleCardProps {\n    title: string;\n    description: string;\n    publishedAt: string;\n    source : { name: string };\n    url: string;\n    urlToImage: string;\n}\n\ninterface IGoogleCardState {\n}","import React from 'react';\nimport '../css/Home.css';\nimport GoogleCard from './GoogleCard';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nexport default class GoogleCardList extends React.Component<IGoogleCardListProps, IGoogleCardListState> {\n    constructor(props: IGoogleCardListProps) {\n        super(props);\n    }\n\n  render() {\n      console.log(this.props.data);\n    return (\n        <div style={{float: \"left\", height: '450px', width: '50%'}}>\n            <Card style={{height:\"100%\"}}>\n                <Card.Header as=\"h5\">Google Articles and Headlines</Card.Header>\n                <Card.Body style={{maxHeight: '425px', overflowY: 'auto'}}>\n                    <ListGroup variant=\"flush\">\n                        {this.props.data.map((value: any, index: number) => {\n                            return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                <GoogleCard {...value}/>\n                            </ListGroup.Item>\n                        })}\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n  }\n}\n\ninterface IGoogleCardListProps {\n    data: Array<GoogleCard>;\n}\n\ninterface IGoogleCardListState {\n}","import React from 'react';\nimport '../css/Home.css';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport TweetEmbed from 'react-tweet-embed';\n\nexport default class TweetList extends React.Component<ITweetListProps, ITweetListState> {\n    constructor(props: ITweetListProps) {\n        super(props);\n    }\n\n    static defaultProps = {\n    }\n\n  render() {\n    return (\n        <div style={{float: \"left\", height: '450px', width: '50%'}}>\n            <Card style={{height:\"100%\"}}>\n                <Card.Header as=\"h5\">Tweets</Card.Header>\n                <Card.Body style={{maxHeight: '425px', overflowY: 'auto'}}>\n                    <ListGroup variant=\"flush\">\n                        {this.props.data.map((value: number, index: number) => {\n                            return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                <TweetEmbed id={value.toString()} placeholder={'loading'}/>\n                            </ListGroup.Item>\n                        })}\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n  }\n}\n\ninterface ITweetListProps {\n    data: Array<number>;\n}\n\ninterface ITweetListState {\n}","import React from 'react';\nimport '../css/Home.css';\nimport { Button, Collapse } from 'react-bootstrap';\nimport GoogleCardList from './GoogleCardList';\nimport TweetList from './TweetList';\nimport GoogleData from '../dummydata/google_article.json';\nimport GoogleCard from './GoogleCard';\n\nexport default class MediaCoverage extends React.Component<IMediaCoverageProps, IMediaCoverageState> {\n    constructor(props: IMediaCoverageProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        }\n    }\n\n    static defaultProps = {\n        googleData: GoogleData.articles,\n        tweetData: [\n            '1113518650747695106',\n            '1115011387921707009',\n            '1114987459446812673',\n            '1114951144638439425',\n            '1114966369823592448',\n        ]\n    }\n\n    private toggleCollapse() {\n      this.setState({\n          collapse: !this.state.collapse\n      });\n    }\n\n    render() {\n      return (\n            <div>\n                <Button\n                    onClick={() => this.toggleCollapse()}\n                    aria-controls=\"media\"\n                    aria-expanded={this.state.collapse}\n                    variant=\"secondary\"\n                    block\n                >\n                    Media Coverage\n                </Button>\n                <Collapse in={this.state.collapse}>\n                    <div id=\"media\">\n                        <div className=\"Analytics-collapse\">\n                            <GoogleCardList data={this.props.googleData}/>\n                            <TweetList data={this.props.tweetData}/>\n                        </div>\n                    </div>\n                </Collapse>\n                <br></br>\n            </div>\n      );\n    }\n}\n\ninterface IMediaCoverageProps {\n    googleData: Array<GoogleCard>;\n    tweetData: Array<number>;\n}\n\ninterface IMediaCoverageState {\n    collapse: boolean;\n}","import React from 'react';\nimport '../css/Home.css';\nimport TimeSearch from './TimeSearch';\nimport LocationSearch from './LocationSearch';\nimport { Button } from 'react-bootstrap';\nimport DiseaseSearch from './DiseaseSearch';\nimport GoogleAPI, { IFilterOptions } from '../Google';\nimport { isNull } from 'util';\nimport HeatMap from './Heatmap';\nimport FrequencyGraph from './FrequencyGraph';\nimport HistogramGraph from './HistogramGraph';\nimport MediaCoverage from './MediaCoverage';\nimport Header from './Header';\n\nlet newsAPI = new GoogleAPI();\n\nexport default class Analytics extends React.Component<IAnalyticsProps, IAnalyticsState> {\n  constructor(props: IAnalyticsProps) {\n    super(props);\n    this.state = {\n        disease: '',\n        locations: [],\n        startDate: null,\n        endDate: null,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onAnalyze = this.onAnalyze.bind(this);\n  }\n\n  private handleChange(event: any) {\n      this.setState(event);\n  }\n\n  private onAnalyze() {\n    let apiFilterState: IFilterOptions = this.createApiFilterState();\n    newsAPI.getFilteredMedia(apiFilterState, (error: any, response: any) => {\n        if (error && error.response) {\n            let message = error.response.data.message\n            console.log('error message', message);\n        } else if (error) {\n            console.log('error message', error.message);\n        }\n        console.log(response);\n    });\n  }\n\n    private createApiFilterState() {\n        let apiFilterState: IFilterOptions = {\n            disease: this.state.disease,\n            location: this.state.locations[0],\n            startDate: this.stringifyDates(this.state.startDate),\n            endDate: this.stringifyDates(this.state.endDate),\n        };\n        console.log(apiFilterState);\n        return apiFilterState;\n    }\n\n    private stringifyDates(date: Date | null) {\n        return (!isNull(date) ? date.toISOString().slice(0, -5) : '');\n    }\n\n    render() {\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                    <h1>ANALYZE</h1>\n                    <div id=\"collapse-filters\" className=\"Filter-panel\">\n                        <DiseaseSearch disease={this.state.disease} updateDisease={this.handleChange}/>\n                        <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                        <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                        <div className=\"Filter-button\">\n                            <Button onClick={this.onAnalyze}>Create Analytics</Button>\n                        </div>\n                    </div>\n                    <div className='ArticleList-division' />\n                        <FrequencyGraph />\n                        <HeatMap />\n                        <HistogramGraph title='Histogram of events related to Zika'/>\n                        <MediaCoverage />\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface IAnalyticsProps {\n}\n\ninterface IAnalyticsState {\n    disease: string;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport Article from './components/Article';\nimport { BackendAPI } from './API'\nimport Analytics from './components/Analytics';\n\nexport default class App extends Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <main>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/article\" component={Article} />\n            <Route path=\"/analyze\" component={Analytics} />\n          </Switch>\n        </Router>\n      </main>\n    );\n  }\n}\n\ninterface IAppProps {\n\n}\n\ninterface IAppState {\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"media/logo.bf63f469.png\";"],"sourceRoot":""}