{"version":3,"sources":["imgs/frequency.png","imgs/heatmap.png","imgs/event.png","imgs/media.png","imgs/trends.png","components/util.tsx","API.tsx","components/Header.tsx","components/Home.tsx","components/TimeSearch.tsx","components/ArticleCard.tsx","components/ArticleList.tsx","components/LocationSearch.tsx","components/KeytermSearch.tsx","components/PaginateSearch.tsx","components/Search.tsx","components/EventReport.tsx","components/EventReportList.tsx","components/Report.tsx","components/ReportList.tsx","components/Article.tsx","components/DiseaseSearch.tsx","components/Tooltip.tsx","components/FrequencyFormat.tsx","components/FrequencyGraph.tsx","components/Marker.tsx","components/Heatmap.tsx","components/HistogramGraph.tsx","components/PageMenu.tsx","components/Analytics.tsx","Google.tsx","components/GoogleCard.tsx","components/GoogleCardList.tsx","components/TweetList.tsx","components/MediaCoverage.tsx","components/Trends.tsx","App.tsx","index.tsx","imgs/loading1.gif","imgs/logo.png"],"names":["module","exports","__webpack_require__","p","parseDates","date","isNull","Date","stringifyDates","dateType","temp","setSeconds","getSeconds","setDate","getDate","getTime","getTimezoneOffset","toISOString","slice","cleanLocations","locations","i","length","multiLocation","indexOf","substring","push","join","createApiFilterState","state","keyterms","isNullOrUndefined","undefined","disease","location","startDate","endDate","cleanDate","shortenDate","split","reverse","capitalize","word","charAt","toUpperCase","formatTwitterDate","newDate","replace","BackendAPI","Object","classCallCheck","this","baseURL","createClass","key","value","type","cb","axios","get","concat","then","response","data","catch","error","keyword","filter","q","url","query","console","log","analytic","country","code","UNLOCodes","CountryName","CountryCode","payload","keys","post","api","Header","props","_this","possibleConstructorReturn","getPrototypeOf","call","api_doc_url","_this2","doc_url","getAPIdocURL","message","setState","react_default","a","createElement","Navbar","className","variant","expand","react_router_dom","to","Brand","src","logo","height","width","alt","Nav","Link","href","onClick","sessionStorage","removeItem","target","React","Component","Home","Header_Header","defaultProps","username","password","TimeSearch","maxDate","minDate","isUndefined","changeMinMaxDate","event","timeState","updateTime","newMinMax","style","float","es","selected","selectsStart","dateFormat","onChange","e","handleChange","placeholderText","selectsEnd","ArticleCard","main_text","cutCount","pathname","Card","Body","Title","headline","Subtitle","date_of_publication","Text","trimText","ArticleList","articleList","map","articleData","ArticleCard_ArticleCard","loading","listLength","showResultsLength","showArticleList","checkLoading","checkResults","LocationSearch","values","filterOptions","getLocations","createFilterOptions","_this3","createLocationLabel","elem","index","self","label","locationLabel","city","option","updateLocation","_this4","react_select_esm","isMulti","options","sort","b","localeCompare","classNamePrefix","placeholder","theme","objectSpread","borderRadius","colors","primary25","primary","filterTypes","KeytermSearch","addFilterOptions","updateKeyterm","filterType","getKeyTerms","newKeyterms","keyterm","name","Creatable_default","isClearable","pageMargin","Math","floor","pageDisplayLimit","PaginateSearch","totalPages","articleCount","ceil","showCount","count","last","currentPage","pageNums","active","pageNum","Pagination","Item","changePage","newPage","updatePaginate","animateScrollTo","calculateTotalPages","disableFirst","disableLast","First","disabled","Prev","createPageItems","Next","Last","showPagination","Search","sessionSearch","getItem","title","sessionState","JSON","parse","bind","assertThisInitialized","onSearch","apiFilterState","getFilteredReports","setItem","stringify","end","start","id","KeytermSearch_KeytermSearch","LocationSearch_LocationSearch","TimeSearch_TimeSearch","Button","Form","ArticleList_ArticleList","paginateArticleList","PaginateSearch_PaginateSearch","EventReport","cleanLocation","locationArray","colSpan","affected","checkColSpan","Table","striped","bordered","hover","marginBottom","checkType","checkDate","checkLocation","checkNumberAffected","EventReportList","reports","report","EventReport_EventReport","Report","check","listProp","Array","isArray","item","Badge","reported_events","EventReportList_EventReportList","listCheck","syndrome","commentCheck","comment","ReportList","getAllReports","ListGroup","Report_Report","Article","renderRedirect","react_router","ReportList_ReportList","DiseaseSearch","getDiseases","updateDisease","Tooltip","OverlayTrigger","trigger","placement","overlay","description","Popover","maxWidth","types","WHO","Twitter","Google","FrequencyFormat","Tooltip_Tooltip","es6","chartData","position","offset","dataKey","angle","allowDecimals","strokeDasharray","layout","align","wrapperStyle","paddingTop","activeDot","stroke","frequencyFilters","FrequencyGraph","frequencyFilter","frequencyData","newProps","interval","start_date","end_date","newFrequency","counterDate","getFullYear","getMonth","setMonth","_loop","countStr","forEach","countInd","countInterval","found","num","freqType","setFullYear","formatXAxis","FrequencyFormat_FrequencyFormat","titleType","cleanChartData","convertFrequency","defaultChecked","marginLeft","Marker","collapse","checkHover","$hover","number_affected","article_count","mapsAPIkey","HeatMap","bounds","google","maps","LatLngBounds","center","lat","lng","zoom","marker","extend","LatLng","newBounds","ne","getNorthEast","sw","getSouthWest","_fitBounds","fitBounds","_this$calculateBounds","calculateBounds","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","heatmapLibrary","heatmap","positions","radius","opacity","Marker_Marker","assignWeight","numberAffected","weightValues","HistogramGraph","graphRange","histogramData","createGraphRange","events","fill","PageMenu","cardStyle","backgroundColor","color","margin","textAlign","CardDeck","Img","frequency","media","trends","epiAPI","sections","geoCoder","Geocoder","Analytics","sessionAnalyze","heatmapPositions","displaySection","onAnalyze","getAnalyticReport","createHeatMapData","heat_map","createFrequencyData","frequency_graph","createHistogramData","event_graph","apiEvent","histogramEvents","apiHeatmap","geocode","address","results","status","weight","GeocoderStatus","OK","geometry","apiFrequency","setHours","endStr","freqArray","sameDate","section","display","DiseaseSearch_DiseaseSearch","checkInputs","ButtonGroup","vertical","size","changeSection","FrequencyGraph_FrequencyGraph","Heatmap_HeatMap","HistogramGraph_HistogramGraph","PageMenu_PageMenu","GoogleAPI","apiKey","GoogleCard","minCut","urlToImage","textDecoration","fontSize","source","publishedAt","marginTop","GoogleCardList","reverseSortData","as","maxHeight","overflowY","marginRight","GoogleCard_GoogleCard","TweetList","tweet_embed_es","MediaCoverage","GoogleCardList_GoogleCardList","googleData","TweetList_TweetList","tweetData","newsAPI","gSections","div","widget","Trends","sessionTrends","googleArticles","tweets","googleCheck","twitterCheck","onTrends","getGoogleData","getGoogleTrends","geo","lastIndexOf","getUNLOCode","widgetCalls","document","getElementById","innerHTML","embed","renderExploreWidgetTo","comparisonItem","time","category","property","exploreQuery","guestPath","dateArray","countStart","countEnd","getFilteredMedia","articles","totalResults","getTwitterData","newTweets","diseaseTweets","filtered","text","filterByLocation","_loop2","matched","ids","createDateArray","currentDate","monthBack","MediaCoverage_MediaCoverage","App","exact","path","component","ReactDOM","render","App_App"],"mappings":"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","file":"js/main.03204834.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/frequency.87eaf39a.png\";","module.exports = __webpack_public_path__ + \"media/heatmap.66d31c20.png\";","module.exports = __webpack_public_path__ + \"media/event.065f5e3e.png\";","module.exports = __webpack_public_path__ + \"media/media.e90e1548.png\";","module.exports = __webpack_public_path__ + \"media/trends.c140a701.png\";","import { isNull, isNullOrUndefined } from 'util';\n\nexport function parseDates(date: string | null) {\n    return (!isNull(date) ? new Date(date) : date);\n}\n\nexport function stringifyDates(date: Date | null, dateType: string) {\n    let temp = (!isNull(date)) ? new Date(date) : date;\n    if (!isNull(temp)) {\n        if (dateType == 'endDate') {\n            temp.setSeconds(temp.getSeconds() - 1);\n            temp.setDate(temp.getDate() + 1);\n        }\n        temp = new Date(temp.getTime() - (temp.getTimezoneOffset() * 60000));\n    }\n    return (!isNull(temp) ? temp.toISOString().slice(0, -5) : '');\n}\n\nfunction cleanLocations(locations: Array<string>) {\n    let cleanLocations = [];\n    for (let i = 0; i < locations.length; i++) {\n        let multiLocation = locations[i].indexOf(',');\n        let temp = locations[i];\n        if (multiLocation != -1) {\n            temp = temp.substring(0, multiLocation);\n        }\n        cleanLocations.push(temp);\n    }\n    return cleanLocations.join(', ');\n}\n\nexport function createApiFilterState(state: any) {\n    return ({\n        keyterms: !isNullOrUndefined(state.keyterms) ? state.keyterms.join(',') : undefined,\n        disease: state.disease,\n        location: cleanLocations(state.locations),\n        startDate: stringifyDates(state.startDate, 'startDate'),\n        endDate: stringifyDates(state.endDate, 'endDate')\n    })\n}\n\nexport function cleanDate(date: string) {\n    return shortenDate(date)\n                .split('-')\n                .reverse()\n                .join('/');\n}\n\nexport function shortenDate(date: string) {\n    return date.substring(0, date.indexOf('T'));\n}\n\nexport function capitalize(word: string) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\nexport function formatTwitterDate(date: string) {\n    let newDate: string = date.replace(/T|-|:/g, '');\n    return newDate.slice(0, newDate.length - 2);\n}","import axios, { AxiosResponse, AxiosError } from \"axios\";\nimport UNLOCodes from './data/country-codes.json';\nimport { formatTwitterDate } from \"./components/util\";\n\nexport interface IFilterOptions {\n  keyterms?: string;\n  disease?: string;\n  location: string;\n  startDate: string;\n  endDate: string;\n}\n\nexport class BackendAPI {\n  baseURL: string = 'https://productionv1-dot-epiproapp.appspot.com/'\n  getKeyTerms(type: string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/key-terms/${type}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getLocations(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/locations/all`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getLocationsByKeyword(keyword: string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/locations/${keyword}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAllReports(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/filter`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAPIdocURL(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/doc-url`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n      });\n  }\n\n  getFilteredReports(filter: IFilterOptions, cb: (err: any, res: any) => any) {\n    let q: string[] = [];\n    if (filter.location) {\n      q.push(`Location=${filter.location}`)\n    }\n    if (filter.keyterms) {\n      q.push(`Key-terms=${filter.keyterms}`)\n    }\n    if (filter.startDate) {\n      q.push(`Start-date=${filter.startDate}`)\n    }\n    if (filter.endDate) {\n      q.push(`End-date=${filter.endDate}`)\n    }\n    q.push(`Limit=300`);\n    let url = '';\n\n    let query = q.join('&')\n    url = `${this.baseURL}api/v1/reports/filter?${query}`\n\n    console.log(url);\n\n    axios.get(url)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n        console.log(\"CALL ERROR\");\n      });\n  }\n\n  getAnalyticReport(analytic: IFilterOptions, cb: (err: any, res: any) => any) {\n    let q: string[] = [];\n    if (analytic.location) {\n      q.push(`Location=${analytic.location}`)\n    }\n    if (analytic.disease) {\n      q.push(`Disease=${analytic.disease}`)\n    }\n    if (analytic.startDate) {\n      q.push(`Start-date=${analytic.startDate}`)\n    }\n    if (analytic.endDate) {\n      q.push(`End-date=${analytic.endDate}`)\n    }\n\n    let url = '';\n\n    let query = q.join('&')\n    url = `${this.baseURL}api/v1/analytics?${query}`\n\n    console.log(url);\n\n    axios.get(url)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n        console.log(\"CALL ERROR\");\n      });\n  }\n\n  getDiseases(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}api/v1/reports/diseases/all`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getUNLOCode(country: string) {\n    let code = UNLOCodes.filter(value => country.indexOf(value.CountryName) != -1);\n    if (code.length == 0) {\n      return '';\n    } else {\n      return code[0].CountryCode;\n    }\n  }\n\n    getTwitterData(filter: IFilterOptions, cb:(err: any, res: any) => any) {\n        let payload: any = {};\n        if (filter.disease) {\n            payload['query'] = `is:verified ${filter.disease}`;\n            if (filter.location) {\n                payload['query'] += ` ${filter.location}`;\n            }\n        }\n        if (filter.startDate) {\n            payload['fromDate'] = formatTwitterDate(filter.startDate);\n        }\n        if (filter.endDate) {\n            payload['toDate'] = formatTwitterDate(filter.endDate);\n        }\n\n        if (Object.keys(payload).length != 0) {\n            axios.post('https://production-dot-epiproapp.appspot.com/api/v1/twitter',payload)\n                .then((response: AxiosResponse) => {\n                    cb(null, response.data);\n                })\n                .catch((error: AxiosError) => {\n                    cb(error, null)\n            });\n        }\n    }\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport logo from '../imgs/logo.png';\nimport { Link } from 'react-router-dom';\nimport { BackendAPI } from '../API';\n\nlet api = new BackendAPI();\n\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\n    constructor(props: IHeaderProps) {\n        super(props);\n        this.state = {\n            api_doc_url: ''\n        };\n    }\n\n    componentWillMount() {\n        let doc_url:string='';\n        api.getAPIdocURL((error: any, response: any) => {\n            if (error) {\n                if (error.response) {\n                let message = error.response.data.message\n                console.log(message, 'ppp');\n                } else {\n                console.log(error.message, 'ppp');\n                }\n                return\n            }\n            doc_url = response;\n            this.setState({api_doc_url: doc_url})\n        });\n    }\n\n    render() {\n        return (\n            <Navbar className=\"App-theme\" variant=\"dark\" expand=\"lg\">\n                <Link to=\"/\">\n                    <Navbar.Brand>\n                        <img src={logo} className=\"d-inline-block align-top\" height=\"30\" width=\"30\" alt=\"logo\" />\n                        {' EpiPro'}\n                    </Navbar.Brand>\n                </Link>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link><Link to=\"/search\" className=\"link\">Search</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/analyze\" className=\"link\">Analyze</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/trends\" className=\"link\">Trends</Link></Nav.Link>\n                    <Nav.Link href={this.state.api_doc_url} onClick={() => sessionStorage.removeItem('search')} target=\"_blank\">API Doc</Nav.Link>\n                </Nav>\n            </Navbar>\n        );\n    }\n}\n\ninterface IHeaderProps {\n}\n\ninterface IHeaderState {\n    api_doc_url: string;\n}","import React from 'react';\nimport logo from '../imgs/logo.png';\nimport '../css/Home.css';\nimport Header from './Header';\n\nexport default class Home extends React.Component<IHomeProps, IHomeState> {\n    constructor(props: IHomeProps) {\n        super(props);\n    }\n\n    static defaultProps = {\n        username: 'admin',\n        password: 'EpiProBreak219'\n    }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <Header />\n        <body>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Welcome to EpiPro</h1>\n            <h3>Predict. Prevent. Protect.</h3>\n          </header>\n        </body>\n      </div>\n    );\n  }\n}\n\ninterface IHomeProps {\n}\n\ninterface IHomeState {\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport DatePicker from 'react-datepicker';\nimport { isNull, isUndefined } from 'util';\n\nexport default class TimeSearch extends React.Component<ITimeSearchProps, ITimeSearchState> {\n    constructor(props: ITimeSearchProps) {\n        super(props);\n        this.state = {\n            startDate: this.props.startDate,\n            endDate: this.props.endDate,\n            maxDate: new Date(),\n            minDate: (!isUndefined(this.props.minDate)) ? this.props.minDate : null\n        }\n        if (!isNull(this.state.startDate)) this.changeMinMaxDate(this.state.startDate, 'startDate');\n        if (!isNull(this.state.endDate)) this.changeMinMaxDate(this.state.endDate, 'endDate');\n    }\n    \n    private handleChange(event: Date | null, dateType: string) {\n        let timeState: any = {};\n        timeState[dateType] = event;\n        this.setState(timeState);\n        this.changeMinMaxDate(event, dateType);\n        this.props.updateTime(timeState);\n    }\n\n    private changeMinMaxDate(newDate: Date | null, dateType: string) {\n        let newMinMax: any = {\n        minDate: null,\n        maxDate: new Date()\n        }\n\n        if (!isNull(newDate)) {\n            if (dateType == 'startDate') newMinMax['minDate'] = newDate;\n            else newMinMax['maxDate'] = newDate;\n        }\n\n        this.setState(newMinMax);\n    }\n\n    render() {\n        return (\n        <div style={{float: 'left'}}>\n            <div className=\"Date-picker\">\n                <DatePicker\n                selected={this.state.startDate}\n                selectsStart\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                dateFormat=\"dd/MM/yyyy\"\n                minDate={this.props.minDate}\n                maxDate={this.state.maxDate}\n                onChange={(e:any) => this.handleChange(e, 'startDate')}\n                placeholderText='Start Date'\n                />\n            </div>\n            <div className=\"Date-picker\">\n            <DatePicker\n                selected={this.state.endDate}\n                selectsEnd\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                dateFormat=\"dd/MM/yyyy\"\n                minDate={this.state.minDate}\n                maxDate={new Date()}\n                onChange={(e:any) => this.handleChange(e, 'endDate')}\n                placeholderText='End Date'\n            />\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface ITimeSearchProps {\n    updateTime: (event: object) => void;\n    startDate: Date | null;\n    endDate: Date | null;\n    minDate?: Date;\n}\n\ninterface ITimeSearchState {\n    startDate: Date | null;\n    endDate: Date | null;\n    minDate: Date | null,\n    maxDate: Date \n}","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Search.css';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Report from './Report';\n\nexport default class ArticleCard extends React.Component<IArticleCardProps, IArticleCardState> {\n    constructor(props: IArticleCardProps) {\n        super(props);\n    }\n\n    private trimText(main_text: string) {\n        let cutCount: number = main_text.length;\n        const minCut: number = 500;\n\n        if (cutCount > minCut) {\n        cutCount = minCut;\n            while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n                cutCount++;\n            }\n        }\n        return main_text.substring(0, cutCount);\n    }\n    \n    render() {\n        return (\n        <div>\n            <Link to={{\n                pathname:'/article',\n                state: this.props\n                }}\n                className=\"link\"\n\n            >\n            <Card>\n                <div className=\"Card-hover\">\n                    <Card.Body>\n                        <Card.Title className='Card-title'><h3>{ this.props.headline }</h3></Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">\n                            <i>{ this.props.url } • { this.props.date_of_publication }</i>\n                        </Card.Subtitle>\n                        <Card.Text>{ this.trimText(this.props.main_text) }...</Card.Text>\n                    </Card.Body>\n                </div>\n            </Card>\n            </Link>\n        </div>\n        );\n    }\n}\n\ninterface IArticleCardProps {\n    url: string;\n    date_of_publication: string;\n    headline: string;\n    main_text: string;\n    reports: Array<Report>;\n}\n\ninterface IArticleCardState {    \n}","import React from 'react';\nimport '../css/Basic.css';\nimport ArticleCard from './ArticleCard';\nimport { isNullOrUndefined, isNull, isUndefined } from 'util';\nimport loading from '../imgs/loading1.gif';\nimport { cleanDate } from './util';\nimport { IArticleState } from './Article';\n\nexport default class ArticleList extends React.Component<IArticleListProps, IArticleListState> {\n    constructor(props: IArticleListProps) {\n        super(props);\n    }\n\n    private showArticleList() {\n        if (!isNullOrUndefined(this.props.articleList)) {\n            return this.props.articleList.map((articleData: IArticleState) => {\n                console.log(articleData);\n                articleData.date_of_publication = cleanDate(articleData.date_of_publication);\n                return <ArticleCard {...articleData}/>;\n            });\n        }\n    }\n\n    private checkLoading() {\n        if (isNull(this.props.articleList)) return <img src={loading} className=\"loading\" alt=\"loading\" />;\n    }\n\n    private checkResults() {\n        if (!isNullOrUndefined(this.props.articleList) && this.props.articleList.length == 0) {\n            return <p>No results found.</p>;\n        } else if (isUndefined(this.props.articleList)) {\n            return <p></p>;\n        }\n    }\n\n    private showResultsLength() {\n        if (!isNullOrUndefined(this.props.articleList) && this.props.articleList.length != 0) {\n            return <p>{this.props.listLength} matching articles found.</p>;\n        }\n    }\n\n    render() {\n        return (\n\n        <div>\n            {this.showResultsLength()}\n            {this.showArticleList()}\n            {this.checkLoading()}\n            {this.checkResults()}\n            <br />\n        </div>\n        );\n    }\n}\n\ninterface IArticleListProps {\n    articleList: Array<IArticleState> | null | undefined;\n    listLength: number;\n}\n\ninterface IArticleListState {\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport Select from 'react-select';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\nexport default class LocationSearch extends React.Component<ILocationSearchProps, ILocationSearchState> {\n    constructor(props: ILocationSearchProps) {\n        super(props);\n\n        this.state = {\n            values: this.props.locations,\n            filterOptions: []\n        }\n    }\n\n    componentWillMount() {\n        api.getLocations((error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                let filterOptions: Array<Object> = this.createFilterOptions(response);\n\n                this.setState({filterOptions});\n            }\n        });\n    }\n\n    private createFilterOptions(locations: Array<any>) {\n        let filteredLocations: Array<string> = [];\n\n        filteredLocations = locations.map((location: Location) => this.createLocationLabel(location));\n        filteredLocations = filteredLocations.filter(function(elem, index, self) {\n            return index === self.indexOf(elem);\n        });\n\n        return filteredLocations.map((location: string, index: number) => ({\n            label: location,\n            value: location\n        }));\n    }\n\n    private createLocationLabel(location: Location) {\n        let locationLabel: string = '';\n        \n        if (location.city.length != 0) locationLabel = locationLabel.concat(location.city, \", \");\n        if (location.state.length != 0) locationLabel = locationLabel.concat(location.state, \", \");\n        if (location.country.length != 0) locationLabel = locationLabel.concat(location.country);\n    \n        return locationLabel;\n    }\n\n    private handleChange(event: Array<any>) {\n        let values: Array<String> = event.map(option => (option.label));\n        this.setState({ values });\n        this.props.updateLocation({ locations: values });\n    }\n\n    render() {\n        return (\n        <div className=\"Search-element\">\n            <Select\n            isMulti\n            options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n            className=\"basic-multi-select\"\n            classNamePrefix=\"select\"\n            placeholder=\"Select location...\"\n            onChange={(e: any) => this.handleChange(e)}\n            value={this.state.values.map((value: String) => { return { label: value, value }})}\n            theme={(theme) => ({\n                ...theme,\n                borderRadius: 3,\n                colors: {\n                ...theme.colors,\n                primary25: 'rgb(162, 156, 194)',\n                primary: 'rgb(162, 156, 194)',\n                },\n            })}\n            />\n        </div>\n        );\n    }\n}\n\ninterface ILocationSearchProps {\n    updateLocation: (event: object) => void;\n    locations: Array<string>;\n}\n\ninterface ILocationSearchState {\n    values: Array<String>;\n    filterOptions: Array<Object>\n}\n\ninterface Location {\n    city: string;\n    state: string;\n    country: string;\n}\n","import React from 'react';\nimport '../css/Search.css';\nimport '../css/Basic.css';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\nconst filterTypes: Array<any> = ['general', 'specific'];\n\nexport default class KeytermSearch extends React.Component<IKeytermSearchProps, IKeytermSearchState> {\n    constructor(props: IKeytermSearchProps) {\n        super(props);\n\n        this.state = {\n            values: this.props.keyterms,\n            filterOptions: [],\n        }\n    }\n\n    componentWillMount() {\n        this.addFilterOptions(filterTypes[1]);\n        this.addFilterOptions(filterTypes[0]);\n    }\n\n    private handleChange(event: Array<any>) {\n        console.log(event);\n        let values: Array<String> = event.map(option => (option.label));\n        this.setState({ values });\n        this.props.updateKeyterm(({ keyterms: values }));\n    }\n\n    private addFilterOptions(filterType: string) {\n        api.getKeyTerms(filterType, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            }\n\n            let newKeyterms: Array<any> = response.map((keyterm: any) => ({\n                label: keyterm.name,\n                value: keyterm.name\n            }));\n\n            this.setState({\n                filterOptions: this.state.filterOptions.concat(newKeyterms)\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Search-element\">\n                <CreatableSelect\n                    isMulti\n                    isClearable\n                    options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n                    className=\"basic-multi-select select-menu\"\n                    classNamePrefix=\"select\"\n                    placeholder=\"Select keyterms...\"\n                    onChange={(e: any) => this.handleChange(e)}\n                    value={this.state.values.map((value: String) => { return { label: value, value }})}\n                    theme={(theme) => ({\n                        ...theme,\n                        borderRadius: 3,\n                        colors: {\n                        ...theme.colors,\n                          primary25: 'rgb(162, 156, 194)',\n                          primary: 'rgb(162, 156, 194)',\n                        },\n                      })}\n                />\n            </div>\n        );\n    }\n}\n\ninterface IKeytermSearchProps {\n    keyterms: Array<String>;\n    updateKeyterm: (event: object) => void;\n}\n\ninterface IKeytermSearchState {\n    values: Array<String>;\n    filterOptions: Array<Object>;\n}\n","import React from 'react';\nimport '../css/Search.css';\nimport { Pagination } from 'react-bootstrap';\nimport { isNull } from 'util';\nimport animateScrollTo from 'animated-scroll-to';\n\nconst pageDisplayLimit: number = 5;\nconst pageMargin: number = Math.floor(pageDisplayLimit/2);\n\nexport default class PaginateSearch extends React.Component<IPaginateSearchProps, IPaginateSearchState> {\n    constructor(props: IPaginateSearchProps) {\n        super(props);\n    }\n\n    private calculateTotalPages() {\n        let totalPages: number = 0;\n        if (!isNull(this.props.articleCount) && this.props.articleCount != 0) {\n            totalPages = Math.ceil(this.props.articleCount/this.props.showCount);\n        }\n        return totalPages;\n    }\n\n    private createPageItems(totalPages: number) {\n        let count, last;\n        if (this.props.currentPage <= pageMargin) {\n            count = 1;\n            last = pageDisplayLimit;\n        } else if (this.props.currentPage + pageMargin > totalPages) {\n            count = totalPages - pageDisplayLimit;\n            last = totalPages;\n        } else {\n            count = this.props.currentPage - pageMargin;\n            last = this.props.currentPage + pageMargin;\n        }\n\n        if (count < 0) count = 1;\n        if (last > totalPages) last = totalPages;\n\n        let pageNums: Array<number> = [];\n        for (let i = count; i <= last; i++) pageNums.push(i);\n\n        let active: boolean = false;\n        return pageNums.map((pageNum: number) => {\n            active = (pageNum == this.props.currentPage);\n            return <Pagination.Item onClick={() => this.changePage(pageNum)} active={active}>{pageNum}</Pagination.Item>;\n        });\n    }\n\n    private changePage(newPage: number) {\n        if (newPage != this.props.currentPage) {\n            this.props.updatePaginate({currentPage: newPage});\n            animateScrollTo(0);\n        }\n    }\n\n    private showPagination() {\n        if (!isNull(this.props.articleCount)) {\n            let totalPages: number = this.calculateTotalPages();\n            if (totalPages != 0) {\n                let disableFirst: boolean = (this.props.currentPage == 1);\n                let disableLast: boolean = (this.props.currentPage == totalPages);\n\n                return (\n                    <Pagination>\n                        <Pagination.First onClick={() => this.changePage(1)} disabled={disableFirst}/>\n                        <Pagination.Prev onClick={() => this.changePage(this.props.currentPage - 1)} disabled={disableFirst}/>\n                        { this.createPageItems(totalPages) }\n                        <Pagination.Next onClick={() => this.changePage(this.props.currentPage + 1)} disabled={disableLast}/>\n                        <Pagination.Last onClick={() => this.changePage(totalPages)} disabled={disableLast}/>\n                    </Pagination>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n        <div>\n            <div className=\"pagination\">\n                {this.showPagination()}\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface IPaginateSearchProps {\n    currentPage: number;\n    articleCount: number | null;\n    showCount: number;\n    updatePaginate: (e: object) => void;\n}\n\ninterface IPaginateSearchState {\n\n}","import React from 'react';\nimport '../css/Basic.css';\nimport { Button, Form } from 'react-bootstrap';\nimport TimeSearch from './TimeSearch';\nimport ArticleList from './ArticleList';\nimport LocationSearch from './LocationSearch';\nimport KeytermSearch from './KeytermSearch';\nimport { BackendAPI, IFilterOptions } from '../API';\nimport { isNull, isNullOrUndefined, isUndefined } from 'util';\nimport PaginateSearch from './PaginateSearch';\nimport Header from './Header';\nimport { createApiFilterState, parseDates } from './util';\nimport { IArticleState } from './Article';\n\nlet api = new BackendAPI();\n\nexport default class Search extends React.Component<ISearchProps, ISearchState> {\n    constructor(props: ISearchProps) {\n        super(props);\n\n        let sessionSearch = sessionStorage.getItem('search');\n        if (isNull(sessionSearch)) {\n            this.state = {\n                title: '',\n                keyterms: [],\n                locations: [],\n                startDate: null,\n                endDate: null,\n                articleList: undefined,\n                currentPage: 1,\n                showCount: 10,\n                articleCount: 0,\n                listLength: 0\n            }\n        } else {\n            let sessionState = JSON.parse(sessionSearch);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n    }\n\n    componentWillMount() {\n        let sessionSearch = sessionStorage.getItem('search');\n        if (isNull(sessionSearch)) this.onSearch();\n    }\n\n    private onSearch() {\n        let apiFilterState: IFilterOptions = createApiFilterState(this.state);\n        \n        this.setState({\n            articleList: null,\n            articleCount: null,\n            listLength: 0\n        })\n\n        api.getFilteredReports(apiFilterState, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.setState({\n                    articleList: response,\n                    articleCount: (!isNullOrUndefined(response)) ? response.length : 0,\n                    currentPage: 1,\n                    listLength: response.length\n                });\n                console.log(response.length);\n                sessionStorage.setItem('search', JSON.stringify(this.state));\n            }\n        });\n    }\n\n    private handleChange(event: any) {\n        this.setState(event);\n        console.log(event);\n    }\n\n    private paginateArticleList() {\n        if (!isNullOrUndefined(this.state.articleList)) {\n            let end: number = this.state.currentPage * this.state.showCount;\n            let start: number = end - this.state.showCount;\n            let sessionSearch = sessionStorage.getItem('search');\n            if (!isNull(sessionSearch)) {\n                let sessionState = JSON.parse(sessionSearch);\n                sessionState.currentPage = this.state.currentPage;\n                sessionState.showCount = this.state.showCount;\n                sessionStorage.setItem('search', JSON.stringify(sessionState));\n            }\n            return this.state.articleList.slice(start, end);\n        } else {\n            return this.state.articleList;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                            <h1>SEARCH</h1>\n                            <div id=\"collapse-filters\" className=\"Filter-panel\">\n                                <KeytermSearch keyterms={this.state.keyterms} updateKeyterm={this.handleChange}/>\n                                <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                                <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                                <Button onClick={this.onSearch}>Search Articles</Button>\n                            </div>\n                            <Form.Text className=\"text-muted\">\n                                * All filters are optional.\n                            </Form.Text>\n                            <hr />\n                            <ArticleList articleList={this.paginateArticleList()} listLength={this.state.listLength}/>\n                            <PaginateSearch\n                                articleCount={this.state.articleCount}\n                                currentPage={this.state.currentPage}\n                                showCount={this.state.showCount}\n                                updatePaginate={this.handleChange}\n                            />\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface ISearchProps {\n}\n\ninterface ISearchState {\n    title: string;\n    keyterms: Array<string>;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    articleList: Array<IArticleState> | null | undefined;\n    currentPage: number;\n    showCount: number;\n    articleCount: number | null;\n    listLength: number;\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport { isNullOrUndefined } from 'util';\nimport { Table } from 'react-bootstrap';\nimport { cleanDate, capitalize } from './util';\n\nexport default class EventReport extends React.Component<IEventReportProps, IEventReportState> {\n    constructor(props: IEventReportProps) {\n        super(props);\n    }\n  \n    private checkLocation(location: LocationBasic | LocationAdvanced) {\n        if (!isNullOrUndefined(location['geonames-id'])) {\n            return <tr><th>Location</th><td>{location['geonames-id']}</td></tr>;\n        } else {\n            return this.cleanLocation(location);\n        }\n    }\n\n    private cleanLocation(location: LocationBasic) {\n        let locationArray: Array<string> = [];\n        if (!isNullOrUndefined(location.location) && location.location != '') {\n            locationArray = [location.location];\n            if (location.location.indexOf(';') != -1) {\n                locationArray = location.location.split(';');\n            }\n            for (let i = 0; i < locationArray.length; i++) {\n                if (!isNullOrUndefined(location.country) && location.country != '') {\n                    locationArray[i] += ',' + location.country;\n                }\n                locationArray[i] = locationArray[i].replace(/,/g, ', ');\n            }\n        } else if (!isNullOrUndefined(location.country) && location.country != '') {\n            locationArray = [location.country];\n        }\n        if (locationArray.length != 0) {\n            return <tr><th>Location</th>{locationArray.map(value => <td>{value}</td>)}</tr>;\n        }\n    }\n\n    private checkType(type: string, colSpan: number) {\n        if (!isNullOrUndefined(type) && type != '') {\n            return <tr><th>Event type</th><td colSpan={colSpan}>{capitalize(type)}</td></tr>;\n        } else {\n            return <tr><th>Event type</th><td colSpan={colSpan}>Unknown</td></tr>;\n        }\n    }\n\n    private checkDate(date: string, colSpan: number) {\n        if (!isNullOrUndefined(date) && date != '') {\n            let temp = (date.indexOf(' to ') != 1) ? date.split(' to ') : [date];\n            for (let i = 0; i < temp.length; i++) {\n                temp[i] = cleanDate(temp[i]);\n            }\n            return <tr><th>Date</th><td colSpan={colSpan}>{temp.join(' to ')}</td></tr>;\n        }\n    }\n\n    private checkNumberAffected(affected: number, colSpan: number) {\n        if (!isNullOrUndefined(affected)) {\n            return <tr><th>Number affected</th><td colSpan={colSpan}>{affected}</td></tr>\n        }\n    }\n\n    private checkColSpan(location: LocationAdvanced | LocationBasic) {\n        let colSpan = 1;\n        if (!isNullOrUndefined(location.location) && location.location.indexOf(';') != -1) {\n            colSpan = location.location.split(';').length;\n        }\n        return colSpan;\n    }\n\n    render() {\n        let colSpan = this.checkColSpan(this.props.location);\n        return (\n            <div>\n                <Table striped bordered hover style={{marginBottom: '0px'}}>\n                    <tbody>\n                        {this.checkType(this.props.type, colSpan)}\n                        {this.checkDate(this.props.date, colSpan)}\n                        {this.checkLocation(this.props.location)}\n                        {this.checkNumberAffected(this.props[\"number-affected\"], colSpan)}\n                    </tbody>\n                </Table>\n            </div>\n            \n        );\n    }\n}\n\ninterface LocationAdvanced {\n    'geonames-id': string;\n    location: string;\n    country: string;\n    [key: string]: string;\n}\n\ninterface LocationBasic {\n    country: string;\n    location: string;\n    [key: string]: string;\n}\n\ninterface IEventReportProps {\n  type: string;\n  date: string;\n  location: LocationAdvanced | LocationBasic;\n  'number-affected': number;\n}\n\ninterface IEventReportState {    \n}","import React from 'react';\nimport '../css/Search.css';\nimport EventReport from './EventReport';\nimport { Card } from 'react-bootstrap';\n\nexport default class EventReportList extends React.Component<IEventReportListProps, IEventReportListState>{\n    constructor(props: IEventReportListProps) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <p><b>Event Reports:</b></p>\n                {this.props.reports.map((report: any) => {\n                    return <div className=\"EventReport-division\">\n                        <Card>\n                            <Card.Body className=\"EventReport-card\">\n                                <EventReport {...report} />\n                            </Card.Body>\n                        </Card>\n                    </div>\n                })}\n            </div>\n        );\n    }\n}\n\ninterface IEventReportListProps {\n    reports: Array<EventReport>;\n}\n\ninterface IEventReportListState {    \n}","import React from 'react';\nimport '../css/Search.css';\nimport EventReport from './EventReport';\nimport { isNull } from 'util';\nimport { Badge } from 'react-bootstrap';\nimport EventReportList from './EventReportList';\n\nexport default class Report extends React.Component<IReportProps, IReportState> {\n  constructor(props: IReportProps) {\n    super(props);\n  }\n  \n    private listCheck(check: Array<string>, type:string) {\n      console.log(check);\n        let listProp = null;\n        if (!isNull(check) && check.length != 0) {\n            if (!Array.isArray(check)) check = [check];\n            listProp = check.map((item: string) => {\n                return <Badge className=\"Badge-division\" variant=\"secondary\">{item}</Badge>\n            });\n            listProp = (<p><b>{type}:</b> {listProp}</p>);\n        }\n        return listProp;\n    }\n\n  private commentCheck(check: string) {\n        return (\n            (!isNull(check)) ? <p><b>Comments:</b> {check}</p> : null\n        )\n  }\n\n  render() {\n    let reported_events = (this.props.reported_events.length != 0) ?\n        <EventReportList reports={this.props.reported_events}/> : null;\n\n    return (\n        <div>\n            {this.listCheck(this.props.disease, 'Disease')}\n            {this.listCheck(this.props.syndrome, 'Syndrome')}\n            {reported_events}\n            {this.commentCheck(this.props.comment)}\n        </div>\n    );\n  }\n}\n\ninterface IReportProps {\n  disease: Array<string>;\n  syndrome: Array<string>;\n  reported_events: Array<EventReport>\n  comment: string;\n}\n\ninterface IReportState {    \n}","import React from 'react';\nimport '../css/Home.css';\nimport Report from './Report';\nimport { ListGroup } from 'react-bootstrap';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\nexport default class ReportList extends React.Component<IReportListProps, IReportListState>{\n  constructor(props: IReportListProps) {\n    super(props);\n    console.log(this.props.reports);\n  }\n  \n  render() {\n    let reports;\n    api.getAllReports((error: any, response: any) => {\n        if (error) {\n            if (error.response) {\n                let message = error.response.data.message\n                console.log(message, 'ppp');\n            } else {\n                console.log(error.message, 'ppp');\n            }\n        }\n        reports = response;\n        console.log(reports, 'reports in app tsx')\n    });\n\n    return (\n        <div>\n            <h3>Disease Reports</h3>\n            <ListGroup>\n                {this.props.reports.map((report: any) => {\n                    return <ListGroup.Item>\n                        <Report {...report} />\n                    </ListGroup.Item>\n                })}\n            </ListGroup>\n        </div>\n    );\n  }\n}\n\ninterface IReportListProps {\n  reports: Array<Report>;\n}\n\ninterface IReportListState {    \n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport Report from './Report';\nimport ReportList from './ReportList';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from './Header';\nimport { isNullOrUndefined } from 'util';\n\nexport default class Article extends React.Component<IArticleProps, IArticleState>{\n    constructor(props: IArticleProps) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState(this.props.location.state);\n    }\n\n    private renderRedirect() {\n        if (isNullOrUndefined(this.state)) return true;\n        return false;\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.renderRedirect() ? <Redirect to='/' /> :\n                <div className=\"bg\">\n                    <Header />\n                    <body id=\"top\">\n                        <div className=\"Main\">\n                            <Link to='/search'><Button variant=\"secondary\">Back to Search</Button></Link>\n                            <br /><br />\n                            <h1>{this.state.headline}</h1>\n                            <p><i>URL: <a href={this.state.url} target=\"_blank\">{this.state.url}</a></i></p>\n                            <p><i>DOP: {this.state.date_of_publication}</i></p>\n                            <p>{this.state.main_text}</p>\n                            <ReportList reports={this.state.reports} />\n                        </div>\n                    </body>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\ninterface IArticleProps {\n    location: {state: IArticleState};\n}\n\nexport interface IArticleState {\n    url: string;\n    date_of_publication: string;\n    headline: string;\n    main_text: string;\n    reports: Array<Report>;   \n}","import React from 'react';\nimport '../css/Basic.css';\nimport Select from 'react-select';\nimport { BackendAPI } from '../API';\n\nlet api = new BackendAPI();\n\nexport default class DiseaseSearch extends React.Component<IDiseaseSearchProps, IDiseaseSearchState> {\n    constructor(props: IDiseaseSearchProps) {\n        super(props);\n\n        this.state = {\n            filterType: 0,\n            value: this.props.disease,\n            filterOptions: []\n        }\n    }\n\n    componentWillMount() {\n        api.getDiseases((error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.setState({filterOptions: this.addFilterOptions(response)});\n            }\n        });\n    }\n\n    private handleChange(event: any) {\n        console.log(event);\n        this.setState({ value: event.label });\n        this.props.updateDisease({ disease: event.label });\n    }\n\n    private addFilterOptions(response: Array<{name: string}>) {\n        let diseases: Array<Object> = response.map((disease: {name: string}) => {\n            return { label: disease.name, value: disease.name, type: 'disease' }\n        });\n        return diseases;\n    }\n\n    render() {\n        return (\n            <div className=\"Search-element\">\n                <Select\n                    options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n                    classNamePrefix=\"select\"\n                    placeholder=\"Select disease...\"\n                    onChange={(e: any) => this.handleChange(e)}\n                    value={(this.state.value != '') ? { label: this.state.value, value: this.state.value } : null}\n                    theme={(theme) => ({\n                        ...theme,\n                        borderRadius: 3,\n                        colors: {\n                        ...theme.colors,\n                            primary25: 'rgb(162, 156, 194)',\n                            primary: 'rgb(162, 156, 194)',\n                        },\n                    })}\n                />\n            </div>\n        );\n    }\n}\n\ninterface IDiseaseSearchProps {\n    updateDisease: (event: object) => void;\n    disease: string;\n}\n\ninterface IDiseaseSearchState {\n    filterType: number;\n    value: string;\n    filterOptions: Array<Object>;\n}","import React from 'react';\nimport { Popover, OverlayTrigger, Button } from 'react-bootstrap';\n\nconst popover = (description: string) => (\n    <Popover id=\"popover-basic\" style={{maxWidth: '400px'}}>\n      {description}\n    </Popover>\n  );\n  \nexport const Tooltip = (props: {description: string}) => (\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover(props.description)}>\n        <Button variant=\"outline-secondary\">?</Button>\n    </OverlayTrigger>\n);","import React from 'react';\nimport '../css/Basic.css';\nimport { LineChart, ResponsiveContainer, XAxis, YAxis, Line, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Tooltip as ChartTooltip } from './Tooltip';\nimport { Frequency } from './FrequencyGraph';\n\nconst types: {[key: string]: string} = {\n    WHO: \"#19a022\",\n    Twitter: \"#22d8d8\",\n    Google: \"#a02f19\"\n}\nexport default class FrequencyFormat extends React.Component<IFrequencyFormatProps, IFrequencyFormatState> {\n    constructor(props: IFrequencyFormatProps) {\n        super(props);\n    }\n\n  render() {\n    return (\n        <div className='Frequency-chart'>\n            <p>\n                <b>{this.props.title}</b>\n                <ChartTooltip description={'Frequency of mentions of disease within time range.'} />\n            </p>\n            <ResponsiveContainer height=\"95%\">\n                <LineChart data={this.props.chartData}>\n                    <XAxis label={{value: 'Dates', position: 'insideBottom', offset: -15}} dataKey=\"date\"/>\n                    <YAxis label={{value: 'Mentions count', position: 'insideLeft', angle: -90, offset: 0}} allowDecimals={false}/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Tooltip/>\n                    <Legend\n                    layout=\"horizontal\"\n                    align=\"center\"\n                    wrapperStyle={{\n                        paddingTop: \"20px\"\n                    }}/>\n                    {this.props.types.map((type: string, index: number) => {\n                        return <Line key={index} type=\"monotone\" dataKey={type} activeDot stroke={types[type]} />\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n  }\n}\n\ninterface IFrequencyFormatProps {\n    title: string;\n    chartData?: Array<Frequency>;\n    types: Array<string>;\n}\n\ninterface IFrequencyFormatState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport FrequencyFormat from './FrequencyFormat';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { shortenDate, capitalize } from './util';\n\nconst frequencyFilters: Array<string> = ['day', 'month', 'year'];\n\nexport default class FrequencyGraph extends React.Component<IFrequencyGraphProps, IFrequencyGraphState> {\n    constructor(props: IFrequencyGraphProps) {\n        super(props);\n        this.state = {\n            frequencyFilter: frequencyFilters[0],\n            frequencyData: (!isNullOrUndefined(this.props.frequencyData)) ? this.props.frequencyData : []\n        };\n    }\n\n    componentWillReceiveProps(newProps: any) {\n        if (!isNullOrUndefined(newProps.frequencyData) && newProps.frequencyData !== this.state.frequencyData) {\n            this.setState({frequencyData: newProps.frequencyData});\n        }\n    }\n\n    private convertFrequency(interval: string) {\n        let data = this.props.frequencyData;\n        if (!isNullOrUndefined(data) && this.state.frequencyFilter != interval) {\n            console.log(\"HERE\");\n            if (interval == 'day') {\n                this.setState({frequencyData: data, frequencyFilter: interval});\n            } else {\n                let start_date = new Date(data[0].date.replace(/x/g, '0'));\n                let end_date= new Date(data[data.length - 1].date.replace(/x/g, '0'));\n\n                let newFrequency: Array<Frequency> = [];\n                let counterDate = new Date(start_date.getFullYear(), start_date.getMonth(), 1);\n                if (interval == 'year') counterDate.setMonth(0);\n                while(counterDate <= end_date) {\n                    let countStr = new Date(counterDate.getTime() - counterDate.getTimezoneOffset() * 60000).toISOString();\n                    data.forEach((date: Frequency, i: number) => {\n                        let countInd = (interval == 'month') ? countStr.indexOf('-', countStr.indexOf('-') + 1) : countStr.indexOf('-');\n                        let countInterval = countStr.substring(0, countInd);\n                        if (date.date.indexOf(countInterval) !== -1) {\n                            let found = newFrequency.filter(e => e.date == countInterval);\n                            if (found.length == 0) {\n                                newFrequency.push({\n                                    date: countInterval,\n                                    WHO: date.WHO,\n                                    Twitter: date.Twitter,\n                                    Google: date.Google\n                                });\n                            } else {\n                                let num = newFrequency.indexOf(found[0]);\n                                newFrequency[num].date = newFrequency[num].date;\n                                for (let i = 0; i < this.props.types.length; i++) {\n                                    let freqType = newFrequency[num][this.props.types[i]] as number;\n                                    let dateType = date[this.props.types[i]] as number;\n                                    if (!isUndefined(freqType) && !isUndefined(dateType)) {\n                                        newFrequency[num][this.props.types[i]] = freqType + dateType;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                    if (interval == 'month') counterDate.setMonth(counterDate.getMonth() + 1);\n                    else counterDate.setFullYear(counterDate.getFullYear() + 1);\n                }\n\n                this.setState({frequencyData: newFrequency, frequencyFilter: interval});\n                console.log(newFrequency);\n            }\n        }\n    }\n\n    private formatXAxis(date: string) {\n        let newDate: string = date;\n        if (date.indexOf('T') != -1) newDate = shortenDate(newDate);\n        newDate = newDate.split('-').reverse().join('/');\n        return newDate;\n    }\n\n    private cleanChartData(data?: Array<Frequency>) {\n        if (!isNullOrUndefined(data)) {\n            return data.map((value: Frequency) => {\n                return {\n                    WHO: value.WHO,\n                    Twitter: value.Twitter,\n                    Google: value.Google,\n                    date: this.formatXAxis(value.date)\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"frequency\">\n                <FrequencyFormat\n                    title={'Frequency of ' + capitalize(this.props.title) + ' mentions on ' + this.props.titleType}\n                    types={this.props.types}\n                    chartData={this.cleanChartData(this.state.frequencyData)}/>\n                <br></br>\n                <br></br>\n                <div>\n                    <div className=\"Date-frequency\">Date frequency:</div>\n                    <input type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[0])} name=\"frequencyFilter\" defaultChecked/>Day\n                    <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[1])} name=\"frequencyFilter\" />Month\n                    <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[2])} name=\"frequencyFilter\" />Year\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IFrequencyGraphProps {\n    frequencyData: Array<Frequency> | null | undefined;\n    title: string;\n    titleType: string;\n    types: Array<string>;\n}\n\ninterface IFrequencyGraphState {\n    frequencyFilter: string;\n    frequencyData: Array<Frequency>;\n}\n\nexport interface Frequency {\n    date: string;\n    WHO?: number;\n    Google?: number;\n    Twitter?: number;\n    [key: string]: number | string | undefined;\n}","import React from 'react';\nimport '../css/Trends.css';\n\nexport default class Marker extends React.Component<IMarkerProps, IMarkerState> {\n    constructor(props: IMarkerProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        };\n    }\n\n  render() {\n      const checkHover = this.props.$hover;\n        return (\n            <div>\n                { checkHover ? (\n                <div className=\"Marker\">\n                    <div>\n                        <b>Location:</b> {this.props.location}<br/>\n                        <b>Number affected:</b> {this.props.number_affected}<br/>\n                        <b>Article mentions:</b> {this.props.article_count}<br/>\n                    </div>\n                </div>\n                ) : (<div></div>)}\n            </div>\n        );\n    }\n}\n\ninterface IMarkerProps {\n    $hover?: boolean;\n    lat: number;\n    lng: number;\n    location: string;\n    number_affected: number;\n    article_count: number;\n}\n\ninterface IMarkerState {\n    collapse: boolean;\n}","import React from 'react';\nimport '../css/Home.css';\nimport GoogleMapReact from 'google-map-react';\nimport { fitBounds } from 'google-map-react/utils';\nimport { Table } from 'react-bootstrap';\nimport Marker from './Marker';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { Tooltip } from './Tooltip';\n\ndeclare var google: any;\nlet mapsAPIkey = { key: 'AIzaSyAWAexUwY_tKggKe5GoqUmdCLV3h8si3Co' };\n\nexport default class HeatMap extends React.Component<IHeatMapProps, IHeatMapState> {\n    constructor(props: IHeatMapProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        };\n    }\n\n    private calculateBounds() {\n        const bounds = new google.maps.LatLngBounds();\n        let center = {lat: 0, lng: 0};\n        let zoom = 1;\n        if (isNullOrUndefined(this.props.locations)) return {center, zoom};\n        if (this.props.locations.length != 0) {\n            this.props.locations.forEach((marker: GeoPosition) => {\n                bounds.extend(new google.maps.LatLng(marker.lat, marker.lng));\n            });\n\n            let newBounds = {\n                ne: {\n                    lat: bounds.getNorthEast().lat(),\n                    lng: bounds.getNorthEast().lng()\n                },\n                sw: {\n                    lat: bounds.getSouthWest().lat(),\n                    lng: bounds.getSouthWest().lng()\n                }\n            }\n            let size = { width: 1000, height: 450 };\n            let {center, zoom} = fitBounds(newBounds, size);\n            return {center, zoom};\n        }\n\n        return {center, zoom};\n    }\n\n    render() {\n        let {center, zoom} = this.calculateBounds();\n        return (\n            <div id=\"heatmap\" className=\"Section-title\">\n                <p>\n                    <b>Heatmap of the occurences of {this.props.title}</b>\n                    <Tooltip description={`Shows the occurences of ${this.props.title} worldwide or within the geographical range of location inputs.`} />\n                </p>\n                <div style={{height: '700px'}}>\n                    <GoogleMapReact\n                        bootstrapURLKeys={mapsAPIkey}\n                        defaultCenter={{lat: 0, lng: 0}}\n                        defaultZoom={1}\n                        heatmapLibrary={true}\n                        heatmap={{\n                            positions: this.props.locations,\n                            options: {\n                                radius: 30,\n                                opacity: 0.6\n                            }\n                        }}\n                        center={center}\n                        zoom={zoom}\n                    >\n                        {this.props.locations.map(value =>\n                        <Marker\n                            lat={value.lat}\n                            lng={value.lng}\n                            location={!isUndefined(value.data) ? value.data.location : ''}\n                            number_affected={!isUndefined(value.data) ? value.data.number_affected : 0}\n                            article_count={!isUndefined(value.data) ? value.data.article_count: 0}\n\n                        />)}\n\n                    </GoogleMapReact>\n                </div>\n                <br></br>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Location</th>\n                            <th>Number affected</th>\n                            <th>Article mentions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.locations.length == 0 ? <tr>\n                            <td colSpan={3}>No results found</td>\n                        </tr> : <div></div>}\n                        {this.props.locations.map((value: GeoPosition) => \n                        (!isNullOrUndefined(value.data)) ?\n                        <tr>\n                            <td>{value.data.location}</td>\n                            <td>{value.data.number_affected}</td>\n                            <td>{value.data.article_count}</td>\n                        </tr> : <div></div>)}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport function assignWeight(numberAffected: number) {\n    const weightValues = [0, 10, 100, 250, 500, 750, 1000, 2000, 5000]\n    for (let i = weightValues.length; i != 0; i--) {\n        if (numberAffected > weightValues[i - 1]) return i;\n    }\n    return 0;\n}\n\ninterface IHeatMapProps {\n    title: string;\n    locations: Array<GeoPosition>;\n}\n\ninterface IHeatMapState {\n    collapse: boolean;\n}\n\nexport interface APIHeatmap {\n    location: string;\n    article_count: number;\n    number_affected: number;\n}\n\nexport interface GeoPosition {\n    lat: number;\n    lng: number;\n    weight?: number;\n    data?: APIHeatmap;\n}","import React from 'react';\nimport '../css/Analytics.css';\nimport { Tooltip as ChartTooltip } from './Tooltip';\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Legend, Bar, Tooltip } from 'recharts';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { capitalize } from './util';\n\nexport default class HistogramGraph extends React.Component<IHistogramGraphProps, IHistogramGraphState> {\n    constructor(props: IHistogramGraphProps) {\n        super(props);\n    }\n\n    private createGraphRange() {\n        let graphRange = '';\n        if (!isNullOrUndefined(this.props.histogramData) &&\n            !isNullOrUndefined(this.props.histogramData.startDate) &&\n            !isNullOrUndefined(this.props.histogramData.endDate)) {\n            let startDate = this.props.histogramData.startDate.split('-').reverse().join('/');\n            let endDate = this.props.histogramData.endDate.split('-').reverse().join('/');\n            graphRange = 'from ' + startDate + ' to ' + endDate;\n        }\n        return graphRange;\n    }\n\n    render() {\n        let graphRange = this.createGraphRange();\n        return (\n            <div id=\"histogram\">\n                <div className=\"Histogram-chart\">\n                    <p>\n                        <b>Event histogram of {capitalize(this.props.title)} {graphRange}</b>\n                        <ChartTooltip description={`Overview of events across articles with a publication date within the inputted time range.\n                                                    The title range is the date range across the selected articles.`} />\n                    </p>\n                    <ResponsiveContainer width = '100%' height = '100%' >\n                        <BarChart data={!isNullOrUndefined(this.props.histogramData) && !isUndefined(this.props.histogramData.events) ?\n                                        this.props.histogramData.events : []}>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis label={{value: 'Event types', position: 'insideBottom', offset: -15}} dataKey=\"event\"/>\n                        <YAxis label={{value: 'Event type count', position: 'insideLeft', angle: -90, offset: 0}}/>\n                        <Tooltip/>\n                        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                        <Legend\n                        layout=\"horizontal\"\n                        align=\"center\"\n                        wrapperStyle={{\n                            paddingTop: \"20px\"\n                        }}/>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IHistogramGraphProps {\n  histogramData: HistogramData | null | undefined;\n  title: string;\n}\n\ninterface IHistogramGraphState {\n}\n\nexport interface HistBar {\n  event: string;\n  count: number;\n}\n\nexport interface APIEvent {\n    start_date: string;\n    end_date: string;\n    death: number;\n    hospitalised: number;\n    infected: number;\n    presence: number;\n    recovered: number;\n    [key: string]: string | number;\n}\n\nexport interface HistogramData {\n    startDate: string;\n    endDate: string;\n    events: Array<HistBar>;\n}","import React from 'react';\nimport '../css/Basic.css';\nimport frequency from '../imgs/frequency.png';\nimport heatmap from '../imgs/heatmap.png';\nimport event from '../imgs/event.png';\nimport media from '../imgs/media.png';\nimport trends from '../imgs/trends.png';\nimport { CardDeck, Card } from 'react-bootstrap';\n\nexport default class PageMenu extends React.Component<IPageMenuProps, IPageMenuState> {\n    constructor(props: IPageMenuProps) {\n        super(props);\n    }\n\n    render() {\n        let cardStyle = { width: '300px', maxWidth: '300px', backgroundColor: 'darkslateblue', float: \"left\" as \"left\", color: 'white', margin: '5px', height: '370px'};\n        return (\n        <div style={{textAlign: 'center'}}>\n            <h4>Report Features</h4>\n            <div className=\"Page-menu\">\n                <CardDeck>\n                    <Card style={cardStyle}>\n                        <Card.Img variant=\"top\" src={frequency} />\n                        <Card.Body>\n                            <Card.Title>Frequency Mentions</Card.Title>\n                            <Card.Text>\n                                Frequency graph of the number of mentions of the selected disease across the inputted time range.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    {this.props.type == 'trends' ? (\n                    <div>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={media} />                    \n                            <Card.Body>\n                                <Card.Title>Media Coverage</Card.Title>\n                                <Card.Text>\n                                    Headlines and tweets mentioning the selected disease.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={trends} />                    \n                            <Card.Body>\n                                <Card.Title>Google Trends</Card.Title>\n                                <Card.Text>\n                                    Google search trends involving the selected disease.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div> ) : (\n                    <div>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={heatmap} />                    \n                            <Card.Body>\n                                <Card.Title>Heatmap</Card.Title>\n                                <Card.Text>\n                                    Shows the occurences of the selected disease within the geographical range.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={event} />\n                            <Card.Body>\n                                <Card.Title>Event histogram</Card.Title>\n                                <Card.Text>\n                                    Histogram graph of the event types of the disease for WHO articles within inputted time range.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div> )}\n                </CardDeck>\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface IPageMenuProps {\n    type: string;\n}\n\ninterface IPageMenuState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport TimeSearch from './TimeSearch';\nimport LocationSearch from './LocationSearch';\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport DiseaseSearch from './DiseaseSearch';\nimport { isNull, isNullOrUndefined, isUndefined } from 'util';\nimport Header from './Header';\nimport { BackendAPI } from '../API';\n\nimport FrequencyGraph, { Frequency } from './FrequencyGraph';\nimport HeatMap, { APIHeatmap, GeoPosition, assignWeight } from './Heatmap';\nimport HistogramGraph, { HistBar, APIEvent, HistogramData } from './HistogramGraph';\nimport loading from '../imgs/loading1.gif';\nimport { parseDates, stringifyDates, createApiFilterState, shortenDate, capitalize } from './util';\nimport PageMenu from './PageMenu';\n\ndeclare var google: any;\nlet epiAPI = new BackendAPI();\nconst sections = ['frequency', 'heatmap', 'event'];\nlet geoCoder = new google.maps.Geocoder();\n\n\nexport default class Analytics extends React.Component<IAnalyticsProps, IAnalyticsState> {\n    constructor(props: IAnalyticsProps) {\n        super(props);\n        let sessionAnalyze = sessionStorage.getItem('analyze');\n        if (isNull(sessionAnalyze)) {\n            this.state = {\n                disease: '',\n                locations: [],\n                startDate: null,\n                endDate: null,\n                frequencyData: undefined,\n                heatmapPositions: undefined,\n                histogramData: undefined,\n                title: '',\n                displaySection: sections[0]\n            };\n        } else {\n            let sessionState = JSON.parse(sessionAnalyze);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n            console.log(sessionState);\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onAnalyze = this.onAnalyze.bind(this);\n    }\n\n    private onAnalyze() {\n        console.log(\"ANALYZE\");\n        this.setState({\n            heatmapPositions: null,\n            frequencyData: null,\n            histogramData: null,\n            displaySection: sections[0]\n        });\n        let apiFilterState = createApiFilterState(this.state);\n        epiAPI.getAnalyticReport(apiFilterState, (error: any, response: any) => {\n            console.log(response);\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.createHeatMapData(response.heat_map.locations);\n                this.setState({\n                    frequencyData: this.createFrequencyData(response.frequency_graph.frequency),\n                    histogramData: this.createHistogramData(response.event_graph),\n                    title: this.state.disease\n                });\n                console.log(\"LINE 45\", response);\n            }\n        });\n    }\n\n    private createHistogramData(apiEvent: APIEvent) {\n        const histogramEvents: Array<HistBar> = [];\n        const events = ['death', 'hospitalised', 'infected', 'presence', 'recovered'];\n        for (let i = 0; i < events.length; i++) {\n            histogramEvents.push({\n                event: events[i],\n                count: apiEvent[events[i]] as number\n            });\n        }\n        return {\n            startDate: apiEvent.start_date,\n            endDate: apiEvent.end_date,\n            events: histogramEvents\n        }\n    }\n\n    private createHeatMapData(apiHeatmap: Array<APIHeatmap>) {\n        let heatmapData: Array<GeoPosition> = [];\n        this.setState({heatmapPositions: []})\n        for (let i = 0; i < apiHeatmap.length; i++) {\n            geoCoder.geocode({address: apiHeatmap[i].location}, (results: any, status: any) => {\n                let temp = {lat: 0, lng: 0, weight: 0, data: apiHeatmap[i]};\n                if (status === google.maps.GeocoderStatus.OK) {\n                    temp = {\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng(),\n                        weight: assignWeight(apiHeatmap[i].number_affected),\n                        data: apiHeatmap[i]\n\n                    };\n                }\n                if (!isNullOrUndefined(this.state.heatmapPositions)) {\n                    this.setState({heatmapPositions: this.state.heatmapPositions.concat([temp])});\n                }\n            });\n        }\n        return heatmapData;\n    }\n\n    private createFrequencyData(apiFrequency: Array<APIFrequency>) {\n        let count = (!isNull(this.state.startDate)) ? new Date(this.state.startDate) : new Date(2017, 0, 1);\n        let endDate = (!isNull(this.state.endDate)) ? new Date(this.state.endDate) : new Date();\n        endDate.setHours(0, 0, 0, 0);\n\n        let countStr: string = stringifyDates(count, 'startDate');\n        let endStr: string = stringifyDates(endDate, 'endDate');\n        countStr =  shortenDate(countStr);\n        endStr = shortenDate(endStr);\n\n        let freqArray: Array<Frequency> = [];\n        let temp: Frequency = { date: countStr, WHO: 0, Google: 0, Twitter: 0 };\n\n        while (count <= endDate) {\n            temp = { date: countStr, WHO: 0, Google: 0, Twitter: 0 };\n            freqArray.push(temp);\n            let sameDate = apiFrequency.filter(value => value.date == countStr);\n            if (sameDate.length != 0) temp.WHO = sameDate[0].count;\n            count.setDate(count.getDate() + 1);\n            count.setHours(0, 0, 0, 0);\n            countStr =  stringifyDates(count, 'startDate').substring(0, countStr.length);\n        }\n        return freqArray;\n    }\n\n    private handleChange(event: any) {\n        this.setState(event);\n    }\n\n    private checkInputs() {\n        return (this.state.disease.length == 0);\n    }\n\n    private changeSection(section: number) {\n        if (this.state.displaySection != sections[section]) {\n            this.setState({displaySection: sections[section]});\n        }\n    }\n\n    private checkLoading() {\n        if (isNull(this.state.frequencyData) || isNull(this.state.frequencyData) ||\n            isNull(this.state.heatmapPositions)) {\n          return <img src={loading} className=\"loading\" alt=\"loading\" />;\n        } else if (isUndefined(this.state.frequencyData) && isUndefined(this.state.histogramData) &&\n            isUndefined(this.state.heatmapPositions)) {\n                return true;\n        }\n        sessionStorage.setItem('analyze', JSON.stringify(this.state));\n        return false;\n    }\n\n    render() {\n        let display = (this.checkLoading() == false) ? 'block' : 'none';\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                        <h1>ANALYZE</h1>\n                        <div id=\"collapse-filters\" className=\"Filter-panel\">\n                            <DiseaseSearch disease={this.state.disease} updateDisease={this.handleChange}/>\n                            <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                            <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                            <Button disabled={this.checkInputs()} onClick={this.onAnalyze}>Create Analytics</Button>\n                        </div>\n                        <Form.Text className=\"text-muted\">\n                                * Disease filter is required. Other filters are optional.\n                        </Form.Text>\n                        <hr />\n                        {this.checkLoading()}\n                        <div style={{display: display}}>\n                            <ButtonGroup vertical className=\"Report-menu\">\n                                <Button size=\"lg\" className=\"Report-title\">{capitalize(this.state.title)} Analytics</Button>\n                                <Button variant={this.state.displaySection == 'frequency' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(0)}>Frequency Mentions</Button>\n                                <Button variant={this.state.displaySection == 'heatmap' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(1)}>Heatmap</Button>\n                                <Button variant={this.state.displaySection == 'event' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(2)}>Event Histogram</Button>\n                            </ButtonGroup>\n                            <div className=\"Report-display\">\n                                <div style={{display: this.state.displaySection == 'frequency' ? 'block' : 'none'}}>\n                                    <FrequencyGraph\n                                        title={this.state.title}\n                                        titleType='articles at WHO'\n                                        types={['WHO']}\n                                        frequencyData={this.state.frequencyData}\n                                    />\n                                </div>\n                                <div style={{display: this.state.displaySection == 'heatmap' ? 'block' : 'none'}}>\n                                    <HeatMap\n                                        title={this.state.title}\n                                        locations={isNullOrUndefined(this.state.heatmapPositions) ? [] : this.state.heatmapPositions}\n                                    />\n                                </div>\n                                <div style={{display: this.state.displaySection == 'event' ? 'block' : 'none'}}>\n                                    <HistogramGraph\n                                        title={this.state.title}\n                                        histogramData={this.state.histogramData}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div style={(display == 'none') && (this.checkLoading() == true) ? {display: 'block'} : {display: 'none'}}>\n                                <PageMenu type=\"analyze\" />\n                        </div>\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface IAnalyticsProps {\n}\n\ninterface IAnalyticsState {\n    disease: string;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    frequencyData: Array<Frequency> | null | undefined;\n    heatmapPositions: Array<GeoPosition> | null | undefined;\n    histogramData: HistogramData | null | undefined;\n    title: string;\n    displaySection: string;\n}\n\ninterface APIFrequency {\n    date: string;\n    count: number;\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios'\n\n\nexport interface IFilterOptions {\n    disease: string;\n    location: string;\n    startDate: string;\n    endDate: string;\n}\n\nexport default class GoogleAPI {\n    baseURL: string = 'https://newsapi.org/';\n    apiKey: string = '112874d7eb274abf8417934c83a1ba07';\n    // apiKey: string = '93ab589956f84076963dac0eb76d6a41';\n    // apiKey: string = 'eda37975a50a479cb28a43249df18ae2';\n\n    getFilteredMedia(filter: IFilterOptions, cb:(err: any, res: any) => any) {\n        let q :string[] = [];\n        if (filter.disease) {\n            let temp: string = `q=\"${filter.disease}\"`;\n            if (filter.location) {\n                temp += `+\"${filter.location}\"`;\n            }\n            q.push(temp);\n        }\n        if (filter.startDate) {\n            q.push(`from=${filter.startDate}`);\n        }\n        if (filter.endDate){\n            q.push(`to=${filter.endDate}`);\n        }\n        q.push('pageSize=100');\n\n        if (q.length != 0) {\n            q.push(`apiKey=${this.apiKey}`);\n            let query = q.join('&');\n            let url = `${this.baseURL}v2/everything?${query}`\n            //console.log(url);\n\n            axios.get(url)\n                .then((response: AxiosResponse) => {\n                    cb(null, response.data)\n                })\n                .catch((error: AxiosError) => {\n                    cb(error, null)\n            });\n        }\n    }\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Trends.css';\nimport { Card } from 'react-bootstrap';\nimport { isNull } from 'util';\n\nexport default class GoogleCard extends React.Component<IGoogleCardProps, IGoogleCardState> {\n    constructor(props: IGoogleCardProps) {\n        super(props);\n    }\n\n    private trimText(main_text: string, minCut: number) {\n        if (isNull(main_text)) return 'No description found.';\n        let cutCount: number = main_text.length;\n    \n        if (cutCount > minCut) {\n          cutCount = minCut;\n          while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n            cutCount++;\n          }\n        }\n    \n        return main_text.substring(0, cutCount);\n    }\n\n    render() {\n        return (\n            <a href={this.props.url} className=\"link\" target=\"_blank\">\n            <Card className=\"Card-hover\">\n            <div className=\"Google-card\">\n                {!isNull(this.props.urlToImage) ? (\n                    <div style={{width: '200px'}}>\n                    <img className=\"Google-card-image\" src={this.props.urlToImage}/>\n                    </div>\n                ) : ( <div></div> )}\n                <div className=\"Google-card-text\">\n                    <h5 style={{textDecoration: 'underline'}}>{ this.trimText(this.props.title, 50) }</h5>\n                    <div style={{fontSize: 'small'}}>\n                        <i>{ this.props.source.name } • { this.props.publishedAt }</i>\n                        <p style={{marginTop: '5px'}}>{ this.trimText(this.props.description, 250) }...</p>\n                    </div>\n                </div>\n            </div>\n            </Card>\n            </a>\n        );\n    }\n}\n\ninterface IGoogleCardProps {\n    title: string;\n    description: string;\n    publishedAt: string;\n    source : { name: string };\n    url: string;\n    urlToImage: string;\n}\n\ninterface IGoogleCardState {\n}","import React from 'react';\nimport '../css/Trends.css';\nimport GoogleCard from './GoogleCard';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nexport default class GoogleCardList extends React.Component<IGoogleCardListProps, IGoogleCardListState> {\n    constructor(props: IGoogleCardListProps) {\n        super(props);\n    }\n\n    render() {\n        let reverseSortData: Array<GoogleCard> = [];\n        for (let i = this.props.data.length; i > 0; i--) reverseSortData.push(this.props.data[i - 1]);\n        console.log(reverseSortData);\n        return (\n            <div className=\"Media-list\">\n                <Card style={{height:\"100%\"}}>\n                    <Card.Header as=\"h5\">Google Articles and Headlines</Card.Header>\n                    <Card.Body style={{maxHeight: '725px', overflowY: 'auto'}}>\n                        <ListGroup variant=\"flush\">\n                            {reverseSortData.length == 0 ? 'No results found.' : <div></div>}\n                            {reverseSortData.map((value: any, index: number) => {\n                                return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                    <GoogleCard {...value}/>\n                                </ListGroup.Item>\n                            })}\n                        </ListGroup>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\ninterface IGoogleCardListProps {\n    data: Array<GoogleCard>;\n}\n\ninterface IGoogleCardListState {\n}","import React from 'react';\nimport '../css/Trends.css';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport TweetEmbed from 'react-tweet-embed';\n\nexport default class TweetList extends React.Component<ITweetListProps, ITweetListState> {\n    constructor(props: ITweetListProps) {\n        super(props);\n    }\n\n    render() {\n        console.log(this.props.data);\n        return (\n            <div className=\"Media-list\">\n                <Card style={{height:\"100%\"}}>\n                    <Card.Header as=\"h5\">Tweets</Card.Header>\n                    <Card.Body style={{maxHeight: '725px', overflowY: 'auto'}}>\n                        <ListGroup variant=\"flush\" style={{marginTop: '-10px', marginBottom: '-10px'}}>\n                            {this.props.data.length == 0 ? 'No results found.' : <div></div>}\n                            {this.props.data.map((value: string, index: number) => {\n                                return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                    <TweetEmbed id={value} placeholder={'loading'}/>\n                                </ListGroup.Item>\n                            })}\n                        </ListGroup>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport function filterByLocation(tweets: Array<any>, locations: Array<string>) {\n    let filtered = tweets.map(value => value);\n    if (locations.length != 0) {\n        for (let i = 0; i < locations.length; i++) {\n            let multiLocation = locations[i].indexOf(',');\n            let location = locations[i];\n            if (multiLocation != -1) location = location.substring(0, multiLocation);\n            filtered = filtered.filter(value => (value.text.indexOf(location) != -1));\n        }\n    }\n    return filtered;\n}\n\ninterface ITweetListProps {\n    data: Array<string>;\n}\n\ninterface ITweetListState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport GoogleCardList from './GoogleCardList';\nimport TweetList from './TweetList';\nimport GoogleCard from './GoogleCard';\nimport { Tooltip } from './Tooltip';\n\nexport default class MediaCoverage extends React.Component<IMediaCoverageProps, IMediaCoverageState> {\n    constructor(props: IMediaCoverageProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        }\n    }\n\n    render() {\n      return (\n            <div>\n                <p className=\"Section-title\">\n                    <b>Media coverage of {this.props.title}</b>\n                    <Tooltip description={`Media coverage of the disease from Twitter and Google News within the time range.`} />\n                </p>\n                <GoogleCardList data={this.props.googleData}/>\n                <TweetList data={this.props.tweetData}/>\n            </div>\n      );\n    }\n}\n\ninterface IMediaCoverageProps {\n    googleData: Array<GoogleCard>;\n    tweetData: Array<string>;\n    title: string;\n}\n\ninterface IMediaCoverageState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Trends.css';\nimport TimeSearch from './TimeSearch';\nimport LocationSearch from './LocationSearch';\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport DiseaseSearch from './DiseaseSearch';\nimport GoogleAPI from '../Google';\nimport { isNull, isUndefined } from 'util';\nimport FrequencyGraph, { Frequency } from './FrequencyGraph';\nimport MediaCoverage from './MediaCoverage';\nimport Header from './Header';\nimport { BackendAPI } from '../API';\nimport loading from '../imgs/loading1.gif';\nimport { Tooltip } from './Tooltip';\nimport { stringifyDates, createApiFilterState, parseDates, shortenDate, capitalize } from './util';\nimport { filterByLocation } from './TweetList';\nimport PageMenu from './PageMenu';\n\nlet newsAPI = new GoogleAPI();\nlet epiAPI = new BackendAPI();\ndeclare var trends: any;\nconst sections = ['frequency', 'media', 'gTrends'];\nconst gSections = [\n    {div: 'gTrends', widget: 'TIMESERIES'},\n    {div: 'gTopics', widget: 'RELATED_TOPICS'},\n    {div: 'gQueries', widget: 'RELATED_QUERIES'}\n];\n\nexport default class Trends extends React.Component<ITrendsProps, ITrendsState> {\n    constructor(props: ITrendsProps) {\n        super(props);\n        let sessionTrends = sessionStorage.getItem('trends');\n        if (isNull(sessionTrends)) {\n            this.state = {\n                title: '',\n                disease: '',\n                locations: [],\n                startDate: null,\n                endDate: null,\n                googleArticles: [],\n                frequencyData: undefined,\n                tweets: [],\n                googleCheck: 0,\n                twitterCheck: 0,\n                displaySection: 'frequency'\n            };\n        } else {\n            let sessionState = JSON.parse(sessionTrends);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n            console.log(sessionState);\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onTrends = this.onTrends.bind(this);\n        this.getGoogleData = this.getGoogleData.bind(this);\n    }\n\n    componentDidMount() {\n        if (!isNull(sessionStorage.getItem('trends'))) this.getGoogleTrends();\n    }\n\n    private getGoogleTrends(){\n        let startDate = stringifyDates(this.state.startDate, 'startDate');\n        let endDate = stringifyDates(this.state.endDate, 'endDate');\n        startDate = shortenDate(startDate);\n        endDate = shortenDate(endDate);\n        let geo = \"\";\n        if (this.state.locations.length == 1) {\n            let location = this.state.locations[0];\n            let country = location.substring(location.lastIndexOf(\",\") + 1);\n            geo = epiAPI.getUNLOCode(country);\n        }\n\n        let widgetCalls = [];\n        for (let i = 0; i < gSections.length; i++) {\n            let div = document.getElementById(gSections[i].div);\n            if (!isNull(div)) div.innerHTML = '';\n            widgetCalls.push({div: div, type: gSections[i].widget});\n        }\n\n        for (let i = 0; i < widgetCalls.length; i++) {\n            trends.embed.renderExploreWidgetTo(widgetCalls[i].div, widgetCalls[i].type, {\n                \"comparisonItem\":[{\n                    \"keyword\":this.state.disease, \"geo\":geo, \"time\":`${startDate} ${endDate}`\n                }],\n                \"category\":0,\n                \"property\":\"\"\n            }, {\n                \"exploreQuery\":`q=${this.state.disease}&geo=${geo}&time=${startDate} ${endDate}`,\n                \"guestPath\":\"https://trends.google.com:443/trends/embed/\"\n            });\n        }\n    }\n\n    private getGoogleData(dateArray: Array<Frequency>) {\n        let apiFilterState = createApiFilterState(this.state);\n        apiFilterState.location = this.state.locations.join(' ').replace(',', ' ');\n        this.setState({\n            googleArticles: [],\n            title: capitalize(this.state.disease),\n            googleCheck: 0\n        });\n        let count: Date = new Date(apiFilterState.startDate);\n\n        for (let i = 0; i < dateArray.length; i++) {\n            let countStart = stringifyDates(count, 'startDate');\n            let countEnd = stringifyDates(count, 'endDate');\n            apiFilterState['startDate'] = countStart;\n            apiFilterState['endDate'] = countEnd;\n\n            newsAPI.getFilteredMedia(apiFilterState, (error: any, response: any) => {\n                if (error && error.response) {\n                    let message = error.response.data.message\n                    console.log('error message', message);\n                } else if (error) {\n                    console.log('error message', error.message);\n                } else {\n                    this.setState({googleArticles: this.state.googleArticles.concat(response.articles)});\n                    dateArray[i].Google = response.totalResults;\n                    this.setState({frequencyData: dateArray, googleCheck: this.state.googleCheck + 1});\n                }\n            });\n\n            count.setDate(count.getDate() + 1);\n            count.setHours(0,0,0,0);\n        }\n    }\n\n    private getTwitterData(dateArray: Array<Frequency>) {\n        this.setState({tweets: [], twitterCheck: 0});\n\n        let apiFilterState = createApiFilterState(this.state);\n        epiAPI.getTwitterData(apiFilterState, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                let newTweets: Array<string> = [];\n                let diseaseTweets = JSON.parse(response).filter((value:any) => value.disease == apiFilterState.disease);\n                diseaseTweets = (diseaseTweets.length == 0) ? [] : diseaseTweets[0].tweets;\n                let filtered = filterByLocation(diseaseTweets, this.state.locations);\n                for (let i = 0; i < dateArray.length; i++) {\n                    let matched = filtered.filter(value => value.date == dateArray[i].date);\n                    dateArray[i].Twitter = matched.length;\n                    let ids = matched.map(value => (value.id));\n                    newTweets = newTweets.concat(ids);\n                }\n                this.setState({tweets: newTweets.reverse(), frequencyData: dateArray, twitterCheck: dateArray.length});\n            }\n        });\n    }\n\n    private onTrends() {\n        let dateArray = this.createDateArray();\n        this.setState({frequencyData: dateArray, displaySection: 'frequency'});\n        this.getGoogleTrends();\n        this.getGoogleData(dateArray);\n        this.getTwitterData(dateArray);\n        this.setState({frequencyData: dateArray});\n    }\n\n    private createDateArray() {\n        let startDate = stringifyDates(this.state.startDate, 'startDate');\n        let endDate = stringifyDates(this.state.endDate, 'endDate');\n        let count: Date = new Date(startDate);\n        let dateArray: Array<Frequency> = [];\n        let countStr =  stringifyDates(count, 'startDate').substring(0, startDate.indexOf('T'));\n        let endStr: string = shortenDate(endDate);\n        let temp: Frequency = {date: countStr};\n    \n        while (countStr != endStr) {\n            temp = { date: countStr, Twitter: 0, Google: 0 };\n            dateArray.push(temp);\n            count.setDate(count.getDate() + 1);\n            countStr =  stringifyDates(count, 'startDate').substring(0, startDate.indexOf('T'));\n        }\n        temp = { date: endStr, Twitter: 0, Google: 0 };\n        dateArray.push(temp);\n        return dateArray;\n    }\n    \n    private handleChange(event: any) {\n        this.setState(event);\n    }\n\n    private checkInputs() {\n        return (this.state.disease.length == 0 || isNull(this.state.startDate) || isNull(this.state.endDate));\n    }\n\n    private checkLoading() {\n        if (isUndefined(this.state.frequencyData)) {\n            return true;\n        } else if (this.state.googleCheck != this.state.frequencyData.length ||\n                    this.state.twitterCheck != this.state.frequencyData.length) {\n            return <img src={loading} className=\"loading\" alt=\"loading\" />;\n        }\n        sessionStorage.setItem('trends', JSON.stringify(this.state));\n        return false;\n    }\n\n    private changeSection(section: number) {\n        if (this.state.displaySection != sections[section]) {\n            this.setState({displaySection: sections[section]});\n        }\n    }\n\n    render() {\n        let currentDate = new Date();\n        let monthBack = new Date(new Date().setDate(currentDate.getDate() - 30));\n        let display = (this.checkLoading() == false) ? 'block' : 'none';\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                        <h1>TRENDS</h1>\n                        <div id=\"collapse-filters\" className=\"Filter-panel\">\n                            <DiseaseSearch disease={this.state.disease} updateDisease={this.handleChange}/>\n                            <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                            <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} minDate={monthBack} updateTime={this.handleChange}/>\n                            <Button disabled={this.checkInputs()} onClick={() => this.onTrends()}>Create Trends</Button>\n                        </div>\n                        <Form.Text className=\"text-muted\">\n                                * All filters except location are required.\n                        </Form.Text>\n                        <hr />\n                        {this.checkLoading()}\n                        <div style={{display: display}}>\n                            <ButtonGroup vertical className=\"Report-menu\">\n                                <Button size=\"lg\" className=\"Report-title\">{capitalize(this.state.title)} Trends</Button>\n                                <Button variant={this.state.displaySection == 'frequency' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(0)}>Frequency Mentions</Button>\n                                <Button variant={this.state.displaySection == 'media' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(1)}>Media Coverage</Button>\n                                <Button variant={this.state.displaySection == 'gTrends' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(2)}>Google Trends</Button>\n                            </ButtonGroup>\n                            <div className=\"Report-display\">\n                                <div style={{display: this.state.displaySection == 'frequency' ? 'block' : 'none'}}>\n                                    <FrequencyGraph\n                                        title={this.state.title}\n                                        titleType={'Google News and Twitter'}\n                                        types={['Google', 'Twitter']}\n                                        frequencyData={this.state.frequencyData}/>\n                                </div>\n                                <div style={{display: this.state.displaySection == 'media' ? 'block' : 'none'}}>\n                                    <MediaCoverage title={this.state.title} googleData={this.state.googleArticles} tweetData={this.state.tweets}/>\n                                </div>\n                                <div style={{display: this.state.displaySection == 'gTrends' ? 'block' : 'none'}}>\n                                    <p className=\"Section-title\">\n                                        <b>Google Trends on {this.state.title}</b>\n                                        <Tooltip description={'Google trends reflects the trends of Google search terms within time range.'} />\n                                    </p>\n                                    <div id=\"gTrends\"/>\n                                    <br></br>\n                                    <div id=\"gTopics\" className=\"GTrends\"/>\n                                    <div id=\"gQueries\" className=\"GTrends\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={(display == 'none') && (this.checkLoading() == true) ? {display: 'block'} : {display: 'none'}}>\n                            <PageMenu type=\"trends\" />\n                        </div>\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface ITrendsProps {\n}\n\ninterface ITrendsState {\n    title: string;\n    disease: string;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    googleArticles: Array<any>;\n    tweets: Array<string>;\n    frequencyData: Array<Frequency> | undefined;\n    googleCheck: number;\n    twitterCheck: number;\n    displaySection: string;\n}","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport Article from './components/Article';\nimport Analytics from './components/Analytics';\nimport Trends from './components/Trends';\n\nexport default class App extends Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <main>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/article\" component={Article} />\n            <Route path=\"/analyze\" component={Analytics} />\n            <Route path=\"/trends\" component={Trends} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </HashRouter>\n      </main>\n    );\n  }\n}\n\ninterface IAppProps {\n\n}\n\ninterface IAppState {\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"media/loading1.df540fd9.gif\";","module.exports = __webpack_public_path__ + \"media/logo.bf63f469.png\";"],"sourceRoot":""}