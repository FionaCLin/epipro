{"version":3,"sources":["imgs/logo.png","imgs/frequency.png","imgs/heatmap.png","imgs/event.png","imgs/media.png","imgs/trends.png","components/util.tsx","API.tsx","components/Header.tsx","components/Home.tsx","components/TimeSearch.tsx","components/ArticleCard.tsx","components/ArticleList.tsx","components/LocationSearch.tsx","components/KeytermSearch.tsx","components/PaginateSearch.tsx","components/Search.tsx","components/EventReport.tsx","components/EventReportList.tsx","components/Report.tsx","components/ReportList.tsx","components/Article.tsx","components/DiseaseSearch.tsx","components/Tooltip.tsx","components/FrequencyFormat.tsx","components/FrequencyGraph.tsx","components/Marker.tsx","components/Heatmap.tsx","components/HistogramGraph.tsx","components/PageMenu.tsx","components/Analytics.tsx","Google.tsx","components/GoogleCard.tsx","components/GoogleCardList.tsx","components/TweetList.tsx","components/MediaCoverage.tsx","components/Trends.tsx","App.tsx","index.tsx","imgs/loading1.gif"],"names":["module","exports","__webpack_require__","p","parseDates","date","isNull","Date","stringifyDates","dateType","temp","setSeconds","getSeconds","setDate","getDate","getTime","getTimezoneOffset","toISOString","slice","cleanLocations","locations","i","length","multiLocation","indexOf","substring","push","join","createApiFilterState","state","keyterms","isNullOrUndefined","undefined","disease","location","startDate","endDate","cleanDate","shortenDate","split","reverse","capitalize","word","charAt","toUpperCase","formatTwitterDate","newDate","replace","BackendAPI","Object","classCallCheck","this","baseURL","createClass","key","value","type","cb","axios","get","concat","then","response","data","catch","error","keyword","filter","q","url","query","analytic","country","code","UNLOCodes","CountryName","CountryCode","payload","keys","post","api","Header","props","_this","possibleConstructorReturn","getPrototypeOf","call","api_doc_url","_this2","doc_url","getAPIdocURL","message","console","log","setState","react_default","a","createElement","Navbar","className","variant","expand","react_router_dom","to","Brand","src","logo","height","width","alt","Nav","Link","href","onClick","sessionStorage","removeItem","target","React","Component","Home","Header_Header","TimeSearch","maxDate","minDate","isUndefined","changeMinMaxDate","event","timeState","updateTime","newMinMax","style","float","react_datepicker_min_default","selected","selectsStart","dateFormat","onChange","e","handleChange","placeholderText","selectsEnd","ArticleCard","main_text","cutCount","pathname","Card","Body","Title","headline","Subtitle","date_of_publication","Text","trimText","ArticleList","articleList","map","articleData","ArticleCard_ArticleCard","loading","listLength","showResultsLength","showArticleList","checkLoading","checkResults","LocationSearch","values","filterOptions","getLocations","createFilterOptions","_this3","createLocationLabel","elem","index","self","label","locationLabel","city","option","updateLocation","_this4","react_select_esm","isMulti","options","sort","b","localeCompare","classNamePrefix","placeholder","theme","objectSpread","borderRadius","colors","primary25","primary","filterTypes","KeytermSearch","addFilterOptions","updateKeyterm","filterType","getKeyTerms","newKeyterms","keyterm","name","Creatable_default","isClearable","pageMargin","Math","floor","pageDisplayLimit","PaginateSearch","totalPages","articleCount","ceil","showCount","count","last","currentPage","pageNums","active","pageNum","Pagination","Item","changePage","newPage","updatePaginate","animateScrollTo","calculateTotalPages","disableFirst","disableLast","First","disabled","Prev","createPageItems","Next","Last","showPagination","Search","sessionSearch","getItem","title","sessionState","JSON","parse","bind","assertThisInitialized","onSearch","apiFilterState","getFilteredReports","setItem","stringify","end","start","id","KeytermSearch_KeytermSearch","LocationSearch_LocationSearch","TimeSearch_TimeSearch","Button","margin","Form","ArticleList_ArticleList","paginateArticleList","PaginateSearch_PaginateSearch","EventReport","cleanLocation","locationArray","colSpan","affected","checkColSpan","Table","striped","bordered","hover","marginBottom","checkType","checkDate","checkLocation","checkNumberAffected","EventReportList","reports","report","EventReport_EventReport","Report","check","listProp","Array","isArray","item","Badge","reported_events","EventReportList_EventReportList","listCheck","syndrome","commentCheck","comment","ReportList","getAllReports","ListGroup","Report_Report","Article","renderRedirect","react_router","ReportList_ReportList","DiseaseSearch","getDiseases","updateDisease","Tooltip","OverlayTrigger","trigger","placement","overlay","description","Popover","maxWidth","types","WHO","Twitter","Google","FrequencyFormat","Tooltip_Tooltip","es6","chartData","position","offset","dataKey","angle","allowDecimals","strokeDasharray","layout","align","wrapperStyle","paddingTop","activeDot","stroke","frequencyFilters","FrequencyGraph","frequencyFilter","frequencyData","newProps","interval","start_date","end_date","newFrequency","counterDate","getFullYear","getMonth","setMonth","_loop","countStr","forEach","countInd","countInterval","found","num","freqType","setFullYear","formatXAxis","FrequencyFormat_FrequencyFormat","titleType","cleanChartData","convertFrequency","defaultChecked","marginLeft","Marker","collapse","checkHover","$hover","number_affected","article_count","mapsAPIkey","HeatMap","bounds","google","maps","LatLngBounds","center","lat","lng","zoom","marker","extend","LatLng","newBounds","ne","getNorthEast","sw","getSouthWest","_fitBounds","fitBounds","_this$calculateBounds","calculateBounds","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","heatmapLibrary","heatmap","positions","radius","opacity","Marker_Marker","assignWeight","numberAffected","weightValues","HistogramGraph","graphRange","histogramData","createGraphRange","events","fill","PageMenu","cardStyle","backgroundColor","color","textAlign","CardDeck","Img","frequency","media","trends","epiAPI","sections","geoCoder","Geocoder","Analytics","sessionAnalyze","heatmapPositions","displaySection","onAnalyze","getAnalyticReport","createHeatMapData","heat_map","createFrequencyData","frequency_graph","createHistogramData","event_graph","apiEvent","histogramEvents","apiHeatmap","geocode","address","results","status","weight","GeocoderStatus","OK","geometry","apiFrequency","setHours","endStr","freqArray","sameDate","section","display","DiseaseSearch_DiseaseSearch","checkInputs","ButtonGroup","vertical","size","changeSection","FrequencyGraph_FrequencyGraph","Heatmap_HeatMap","HistogramGraph_HistogramGraph","PageMenu_PageMenu","GoogleAPI","apiKey","GoogleCard","minCut","urlToImage","textDecoration","fontSize","source","publishedAt","marginTop","GoogleCardList","reverseSortData","as","maxHeight","overflowY","marginRight","GoogleCard_GoogleCard","TweetList","tweet_embed_es","MediaCoverage","GoogleCardList_GoogleCardList","googleData","TweetList_TweetList","tweetData","newsAPI","gSections","div","widget","Trends","sessionTrends","googleArticles","tweets","googleCheck","twitterCheck","onTrends","getGoogleData","getGoogleTrends","geo","lastIndexOf","getUNLOCode","widgetCalls","document","getElementById","innerHTML","embed","renderExploreWidgetTo","comparisonItem","time","category","property","exploreQuery","guestPath","dateArray","countStart","countEnd","getFilteredMedia","articles","totalResults","getTwitterData","newTweets","diseaseTweets","filtered","text","filterByLocation","_loop2","matched","ids","createDateArray","currentDate","monthBack","MediaCoverage_MediaCoverage","App","exact","path","component","ReactDOM","render","App_App"],"mappings":"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","file":"js/main.31cd62cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo.bf63f469.png\";","module.exports = __webpack_public_path__ + \"media/frequency.87eaf39a.png\";","module.exports = __webpack_public_path__ + \"media/heatmap.66d31c20.png\";","module.exports = __webpack_public_path__ + \"media/event.065f5e3e.png\";","module.exports = __webpack_public_path__ + \"media/media.e90e1548.png\";","module.exports = __webpack_public_path__ + \"media/trends.c140a701.png\";","import { isNull, isNullOrUndefined } from 'util';\n\nexport function parseDates(date: string | null) {\n    return (!isNull(date) ? new Date(date) : date);\n}\n\nexport function stringifyDates(date: Date | null, dateType: string) {\n    let temp = (!isNull(date)) ? new Date(date) : date;\n    if (!isNull(temp)) {\n        if (dateType == 'endDate') {\n            temp.setSeconds(temp.getSeconds() - 1);\n            temp.setDate(temp.getDate() + 1);\n        }\n        temp = new Date(temp.getTime() - (temp.getTimezoneOffset() * 60000));\n    }\n    return (!isNull(temp) ? temp.toISOString().slice(0, -5) : '');\n}\n\nfunction cleanLocations(locations: Array<string>) {\n    let cleanLocations = [];\n    for (let i = 0; i < locations.length; i++) {\n        let multiLocation = locations[i].indexOf(',');\n        let temp = locations[i];\n        if (multiLocation != -1) {\n            temp = temp.substring(0, multiLocation);\n        }\n        cleanLocations.push(temp);\n    }\n    return cleanLocations.join(', ');\n}\n\nexport function createApiFilterState(state: any) {\n    return ({\n        keyterms: !isNullOrUndefined(state.keyterms) ? state.keyterms.join(',') : undefined,\n        disease: state.disease,\n        location: cleanLocations(state.locations),\n        startDate: stringifyDates(state.startDate, 'startDate'),\n        endDate: stringifyDates(state.endDate, 'endDate')\n    })\n}\n\nexport function cleanDate(date: string) {\n    return shortenDate(date)\n                .split('-')\n                .reverse()\n                .join('/');\n}\n\nexport function shortenDate(date: string) {\n    return date.substring(0, date.indexOf('T'));\n}\n\nexport function capitalize(word: string) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\nexport function formatTwitterDate(date: string) {\n    let newDate: string = date.replace(/T|-|:/g, '');\n    return newDate.slice(0, newDate.length - 2);\n}","import axios, { AxiosResponse, AxiosError } from \"axios\";\nimport UNLOCodes from './data/country-codes.json';\nimport { formatTwitterDate } from \"./components/util\";\n\nexport interface IFilterOptions {\n  keyterms?: string;\n  disease?: string;\n  location: string;\n  startDate: string;\n  endDate: string;\n}\n\nexport class BackendAPI {\n  baseURL: string = 'https://epiproapp.appspot.com/'\n\n  getKeyTerms(type: string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/key-terms/${type}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getLocations(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/locations/all`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getLocationsByKeyword(keyword: string, cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/locations/${keyword}`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAllReports(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/filter`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getAPIdocURL(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/doc-url`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n      });\n  }\n\n  getFilteredReports(filter: IFilterOptions, cb: (err: any, res: any) => any) {\n    let q: string[] = [];\n    if (filter.location) {\n      q.push(`Location=${filter.location}`)\n    }\n    if (filter.keyterms) {\n      q.push(`Key-terms=${filter.keyterms}`)\n    }\n    if (filter.startDate) {\n      q.push(`Start-date=${filter.startDate}`)\n    }\n    if (filter.endDate) {\n      q.push(`End-date=${filter.endDate}`)\n    }\n    q.push(`Limit=300`);\n    let url = '';\n\n    let query = q.join('&')\n    url = `${this.baseURL}/api/v1/reports/filter?${query}`\n\n    axios.get(url)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n      });\n  }\n\n  getAnalyticReport(analytic: IFilterOptions, cb: (err: any, res: any) => any) {\n    let q: string[] = [];\n    if (analytic.location) {\n      q.push(`Location=${analytic.location}`)\n    }\n    if (analytic.disease) {\n      q.push(`Disease=${analytic.disease}`)\n    }\n    if (analytic.startDate) {\n      q.push(`Start-date=${analytic.startDate}`)\n    }\n    if (analytic.endDate) {\n      q.push(`End-date=${analytic.endDate}`)\n    }\n\n    let url = '';\n\n    let query = q.join('&')\n    url = `${this.baseURL}/api/v1/analytics?${query}`\n\n    axios.get(url)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data);\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null);\n      });\n  }\n\n  getDiseases(cb: (err: any, res: any) => any) {\n    axios.get(`${this.baseURL}/api/v1/reports/diseases/all`)\n      .then((response: AxiosResponse) => {\n        cb(null, response.data)\n      })\n      .catch((error: AxiosError) => {\n        cb(error, null)\n      });\n  }\n\n  getUNLOCode(country: string) {\n    let code = UNLOCodes.filter(value => country.indexOf(value.CountryName) != -1);\n    if (code.length == 0) {\n      return '';\n    } else {\n      return code[0].CountryCode;\n    }\n  }\n\n    getTwitterData(filter: IFilterOptions, cb:(err: any, res: any) => any) {\n        let payload: any = {};\n        if (filter.disease) {\n            payload['query'] = `is:verified ${filter.disease}`;\n            if (filter.location) {\n                payload['query'] += ` ${filter.location}`;\n            }\n        }\n        if (filter.startDate) {\n            payload['fromDate'] = formatTwitterDate(filter.startDate);\n        }\n        if (filter.endDate) {\n            payload['toDate'] = formatTwitterDate(filter.endDate);\n        }\n\n        if (Object.keys(payload).length !== 0) {\n          axios.post(`${this.baseURL}/api/v1/twitter`,payload)\n                .then((response: AxiosResponse) => {\n                    cb(null, response.data);\n                })\n                .catch((error: AxiosError) => {\n                    cb(error, null)\n            });\n        }\n    }\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport logo from '../imgs/logo.png';\nimport { Link } from 'react-router-dom';\nimport { BackendAPI } from '../API';\n\nlet api = new BackendAPI();\n\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\n    constructor(props: IHeaderProps) {\n        super(props);\n        this.state = {\n            api_doc_url: ''\n        };\n    }\n\n    componentWillMount() {\n        let doc_url:string='';\n        api.getAPIdocURL((error: any, response: any) => {\n            if (error) {\n                if (error.response) {\n                    let message = error.response.data.message\n                    console.log('error message', message);\n                } else {\n                    console.log('error message', error.message);\n                }\n                return\n            }\n            doc_url = response;\n            this.setState({api_doc_url: doc_url})\n        });\n    }\n\n    render() {\n        return (\n            <Navbar className=\"App-theme\" variant=\"dark\" expand=\"lg\">\n                <Link to=\"/\">\n                    <Navbar.Brand>\n                        <img src={logo} className=\"d-inline-block align-top\" height=\"30\" width=\"30\" alt=\"logo\" />\n                        {' EpiPro'}\n                    </Navbar.Brand>\n                </Link>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link><Link to=\"/search\" className=\"link\">Search</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/analyze\" className=\"link\">Analyze</Link></Nav.Link>\n                    <Nav.Link><Link to=\"/trends\" className=\"link\">Trends</Link></Nav.Link>\n                    <Nav.Link href={this.state.api_doc_url} onClick={() => sessionStorage.removeItem('search')} target=\"_blank\">API Doc</Nav.Link>\n                </Nav>\n            </Navbar>\n        );\n    }\n}\n\ninterface IHeaderProps {\n}\n\ninterface IHeaderState {\n    api_doc_url: string;\n}","import React from 'react';\nimport logo from '../imgs/logo.png';\nimport '../css/Home.css';\nimport Header from './Header';\n\nexport default class Home extends React.Component<IHomeProps, IHomeState> {\n    constructor(props: IHomeProps) {\n        super(props);\n    }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <Header />\n        <body>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Welcome to EpiPro</h1>\n            <h3>Predict. Prevent. Protect.</h3>\n          </header>\n        </body>\n      </div>\n    );\n  }\n}\n\ninterface IHomeProps {\n}\n\ninterface IHomeState {\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport DatePicker from 'react-datepicker';\nimport { isNull, isUndefined } from 'util';\n\nexport default class TimeSearch extends React.Component<ITimeSearchProps, ITimeSearchState> {\n    constructor(props: ITimeSearchProps) {\n        super(props);\n        this.state = {\n            startDate: this.props.startDate,\n            endDate: this.props.endDate,\n            maxDate: new Date(),\n            minDate: (!isUndefined(this.props.minDate)) ? this.props.minDate : null\n        }\n        if (!isNull(this.state.startDate)) this.changeMinMaxDate(this.state.startDate, 'startDate');\n        if (!isNull(this.state.endDate)) this.changeMinMaxDate(this.state.endDate, 'endDate');\n    }\n    \n    private handleChange(event: Date | null, dateType: string) {\n        let timeState: any = {};\n        timeState[dateType] = event;\n        this.setState(timeState);\n        this.changeMinMaxDate(event, dateType);\n        this.props.updateTime(timeState);\n    }\n\n    private changeMinMaxDate(newDate: Date | null, dateType: string) {\n        let newMinMax: any = {\n        minDate: null,\n        maxDate: new Date()\n        }\n\n        if (!isNull(newDate)) {\n            if (dateType == 'startDate') newMinMax['minDate'] = newDate;\n            else newMinMax['maxDate'] = newDate;\n        }\n\n        this.setState(newMinMax);\n    }\n\n    render() {\n        return (\n        <div style={{float: 'left'}}>\n            <div className=\"Date-picker\">\n                <DatePicker\n                selected={this.state.startDate}\n                selectsStart\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                dateFormat=\"dd/MM/yyyy\"\n                minDate={this.props.minDate}\n                maxDate={this.state.maxDate}\n                onChange={(e:any) => this.handleChange(e, 'startDate')}\n                placeholderText='Start Date'\n                />\n            </div>\n            <div className=\"Date-picker\">\n            <DatePicker\n                selected={this.state.endDate}\n                selectsEnd\n                startDate={this.state.startDate}\n                endDate={this.state.endDate}\n                dateFormat=\"dd/MM/yyyy\"\n                minDate={this.state.minDate}\n                maxDate={new Date()}\n                onChange={(e:any) => this.handleChange(e, 'endDate')}\n                placeholderText='End Date'\n            />\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface ITimeSearchProps {\n    updateTime: (event: object) => void;\n    startDate: Date | null;\n    endDate: Date | null;\n    minDate?: Date;\n}\n\ninterface ITimeSearchState {\n    startDate: Date | null;\n    endDate: Date | null;\n    minDate: Date | null,\n    maxDate: Date \n}","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Search.css';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Report from './Report';\n\nexport default class ArticleCard extends React.Component<IArticleCardProps, IArticleCardState> {\n    constructor(props: IArticleCardProps) {\n        super(props);\n    }\n\n    private trimText(main_text: string) {\n        let cutCount: number = main_text.length;\n        const minCut: number = 500;\n\n        if (cutCount > minCut) {\n        cutCount = minCut;\n            while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n                cutCount++;\n            }\n        }\n        return main_text.substring(0, cutCount);\n    }\n    \n    render() {\n        return (\n        <div>\n            <Link to={{\n                pathname:'/article',\n                state: this.props\n                }}\n                className=\"link\"\n\n            >\n            <Card>\n                <div className=\"Card-hover\">\n                    <Card.Body>\n                        <Card.Title className='Card-title'><h3>{ this.props.headline }</h3></Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">\n                            <i>{ this.props.url } • { this.props.date_of_publication }</i>\n                        </Card.Subtitle>\n                        <Card.Text>{ this.trimText(this.props.main_text) }...</Card.Text>\n                    </Card.Body>\n                </div>\n            </Card>\n            </Link>\n        </div>\n        );\n    }\n}\n\ninterface IArticleCardProps {\n    url: string;\n    date_of_publication: string;\n    headline: string;\n    main_text: string;\n    reports: Array<Report>;\n}\n\ninterface IArticleCardState {    \n}","import React from 'react';\nimport '../css/Basic.css';\nimport ArticleCard from './ArticleCard';\nimport { isNullOrUndefined, isNull, isUndefined } from 'util';\nimport loading from '../imgs/loading1.gif';\nimport { cleanDate } from './util';\nimport { IArticleState } from './Article';\n\nexport default class ArticleList extends React.Component<IArticleListProps, IArticleListState> {\n    constructor(props: IArticleListProps) {\n        super(props);\n    }\n\n    private showArticleList() {\n        if (!isNullOrUndefined(this.props.articleList)) {\n            return this.props.articleList.map((articleData: IArticleState) => {\n                if (articleData.date_of_publication.indexOf('T') != -1) {\n                    articleData.date_of_publication = cleanDate(articleData.date_of_publication);\n                }\n                return <ArticleCard {...articleData}/>;\n            });\n        }\n    }\n\n    private checkLoading() {\n        if (isNull(this.props.articleList)) return <img src={loading} className=\"loading\" alt=\"loading\" />;\n    }\n\n    private checkResults() {\n        if (!isNullOrUndefined(this.props.articleList) && this.props.articleList.length == 0) {\n            return <p>No results found.</p>;\n        } else if (isUndefined(this.props.articleList)) {\n            return <p></p>;\n        }\n    }\n\n    private showResultsLength() {\n        if (!isNullOrUndefined(this.props.articleList) && this.props.articleList.length != 0) {\n            return <p>{this.props.listLength} matching articles found.</p>;\n        }\n    }\n\n    render() {\n        return (\n\n        <div>\n            {this.showResultsLength()}\n            {this.showArticleList()}\n            {this.checkLoading()}\n            {this.checkResults()}\n            <br />\n        </div>\n        );\n    }\n}\n\ninterface IArticleListProps {\n    articleList: Array<IArticleState> | null | undefined;\n    listLength: number;\n}\n\ninterface IArticleListState {\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport Select from 'react-select';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\nexport default class LocationSearch extends React.Component<ILocationSearchProps, ILocationSearchState> {\n    constructor(props: ILocationSearchProps) {\n        super(props);\n\n        this.state = {\n            values: this.props.locations,\n            filterOptions: []\n        }\n    }\n\n    componentWillMount() {\n        api.getLocations((error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                let filterOptions: Array<Object> = this.createFilterOptions(response);\n\n                this.setState({filterOptions});\n            }\n        });\n    }\n\n    private createFilterOptions(locations: Array<any>) {\n        let filteredLocations: Array<string> = [];\n\n        filteredLocations = locations.map((location: Location) => this.createLocationLabel(location));\n        filteredLocations = filteredLocations.filter(function(elem, index, self) {\n            return index === self.indexOf(elem);\n        });\n\n        return filteredLocations.map((location: string, index: number) => ({\n            label: location,\n            value: location\n        }));\n    }\n\n    private createLocationLabel(location: Location) {\n        let locationLabel: string = '';\n        \n        if (location.city.length != 0) locationLabel = locationLabel.concat(location.city, \", \");\n        if (location.state.length != 0) locationLabel = locationLabel.concat(location.state, \", \");\n        if (location.country.length != 0) locationLabel = locationLabel.concat(location.country);\n    \n        return locationLabel;\n    }\n\n    private handleChange(event: Array<any>) {\n        let values: Array<String> = event.map(option => (option.label));\n        this.setState({ values });\n        this.props.updateLocation({ locations: values });\n    }\n\n    render() {\n        return (\n        <div className=\"Search-element\">\n            <Select\n            isMulti\n            options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n            className=\"basic-multi-select\"\n            classNamePrefix=\"select\"\n            placeholder=\"Select location...\"\n            onChange={(e: any) => this.handleChange(e)}\n            value={this.state.values.map((value: String) => { return { label: value, value }})}\n            theme={(theme) => ({\n                ...theme,\n                borderRadius: 3,\n                colors: {\n                ...theme.colors,\n                primary25: 'rgb(162, 156, 194)',\n                primary: 'rgb(162, 156, 194)',\n                },\n            })}\n            />\n        </div>\n        );\n    }\n}\n\ninterface ILocationSearchProps {\n    updateLocation: (event: object) => void;\n    locations: Array<string>;\n}\n\ninterface ILocationSearchState {\n    values: Array<String>;\n    filterOptions: Array<Object>\n}\n\ninterface Location {\n    city: string;\n    state: string;\n    country: string;\n}\n","import React from 'react';\nimport '../css/Search.css';\nimport '../css/Basic.css';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\nconst filterTypes: Array<any> = ['general', 'specific'];\n\nexport default class KeytermSearch extends React.Component<IKeytermSearchProps, IKeytermSearchState> {\n    constructor(props: IKeytermSearchProps) {\n        super(props);\n\n        this.state = {\n            values: this.props.keyterms,\n            filterOptions: [],\n        }\n    }\n\n    componentWillMount() {\n        this.addFilterOptions(filterTypes[1]);\n        this.addFilterOptions(filterTypes[0]);\n    }\n\n    private handleChange(event: Array<any>) {\n        let values: Array<String> = event.map(option => (option.label));\n        this.setState({ values });\n        this.props.updateKeyterm(({ keyterms: values }));\n    }\n\n    private addFilterOptions(filterType: string) {\n        api.getKeyTerms(filterType, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                let newKeyterms: Array<any> = response.map((keyterm: any) => ({\n                    label: keyterm.name,\n                    value: keyterm.name\n                }));\n\n                this.setState({\n                    filterOptions: this.state.filterOptions.concat(newKeyterms)\n                });\n            }\n\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Search-element\">\n                <CreatableSelect\n                    isMulti\n                    isClearable\n                    options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n                    className=\"basic-multi-select select-menu\"\n                    classNamePrefix=\"select\"\n                    placeholder=\"Select keyterms...\"\n                    onChange={(e: any) => this.handleChange(e)}\n                    value={this.state.values.map((value: String) => { return { label: value, value }})}\n                    theme={(theme) => ({\n                        ...theme,\n                        borderRadius: 3,\n                        colors: {\n                        ...theme.colors,\n                          primary25: 'rgb(162, 156, 194)',\n                          primary: 'rgb(162, 156, 194)',\n                        },\n                      })}\n                />\n            </div>\n        );\n    }\n}\n\ninterface IKeytermSearchProps {\n    keyterms: Array<String>;\n    updateKeyterm: (event: object) => void;\n}\n\ninterface IKeytermSearchState {\n    values: Array<String>;\n    filterOptions: Array<Object>;\n}\n","import React from 'react';\nimport '../css/Search.css';\nimport { Pagination } from 'react-bootstrap';\nimport { isNull } from 'util';\nimport animateScrollTo from 'animated-scroll-to';\n\nconst pageDisplayLimit: number = 5;\nconst pageMargin: number = Math.floor(pageDisplayLimit/2);\n\nexport default class PaginateSearch extends React.Component<IPaginateSearchProps, IPaginateSearchState> {\n    constructor(props: IPaginateSearchProps) {\n        super(props);\n    }\n\n    private calculateTotalPages() {\n        let totalPages: number = 0;\n        if (!isNull(this.props.articleCount) && this.props.articleCount != 0) {\n            totalPages = Math.ceil(this.props.articleCount/this.props.showCount);\n        }\n        return totalPages;\n    }\n\n    private createPageItems(totalPages: number) {\n        let count, last;\n        if (this.props.currentPage <= pageMargin) {\n            count = 1;\n            last = pageDisplayLimit;\n        } else if (this.props.currentPage + pageMargin > totalPages) {\n            count = totalPages - pageDisplayLimit;\n            last = totalPages;\n        } else {\n            count = this.props.currentPage - pageMargin;\n            last = this.props.currentPage + pageMargin;\n        }\n\n        if (count < 0) count = 1;\n        if (last > totalPages) last = totalPages;\n\n        let pageNums: Array<number> = [];\n        for (let i = count; i <= last; i++) pageNums.push(i);\n\n        let active: boolean = false;\n        return pageNums.map((pageNum: number) => {\n            active = (pageNum == this.props.currentPage);\n            return <Pagination.Item onClick={() => this.changePage(pageNum)} active={active}>{pageNum}</Pagination.Item>;\n        });\n    }\n\n    private changePage(newPage: number) {\n        if (newPage != this.props.currentPage) {\n            this.props.updatePaginate({currentPage: newPage});\n            animateScrollTo(0);\n        }\n    }\n\n    private showPagination() {\n        if (!isNull(this.props.articleCount)) {\n            let totalPages: number = this.calculateTotalPages();\n            if (totalPages != 0) {\n                let disableFirst: boolean = (this.props.currentPage == 1);\n                let disableLast: boolean = (this.props.currentPage == totalPages);\n\n                return (\n                    <Pagination>\n                        <Pagination.First onClick={() => this.changePage(1)} disabled={disableFirst}/>\n                        <Pagination.Prev onClick={() => this.changePage(this.props.currentPage - 1)} disabled={disableFirst}/>\n                        { this.createPageItems(totalPages) }\n                        <Pagination.Next onClick={() => this.changePage(this.props.currentPage + 1)} disabled={disableLast}/>\n                        <Pagination.Last onClick={() => this.changePage(totalPages)} disabled={disableLast}/>\n                    </Pagination>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n        <div>\n            <div className=\"pagination\">\n                {this.showPagination()}\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface IPaginateSearchProps {\n    currentPage: number;\n    articleCount: number | null;\n    showCount: number;\n    updatePaginate: (e: object) => void;\n}\n\ninterface IPaginateSearchState {\n\n}","import React from 'react';\nimport '../css/Basic.css';\nimport { Button, Form } from 'react-bootstrap';\nimport TimeSearch from './TimeSearch';\nimport ArticleList from './ArticleList';\nimport LocationSearch from './LocationSearch';\nimport KeytermSearch from './KeytermSearch';\nimport { BackendAPI, IFilterOptions } from '../API';\nimport { isNull, isNullOrUndefined, isUndefined } from 'util';\nimport PaginateSearch from './PaginateSearch';\nimport Header from './Header';\nimport { createApiFilterState, parseDates } from './util';\nimport { IArticleState } from './Article';\n\nlet api = new BackendAPI();\n\nexport default class Search extends React.Component<ISearchProps, ISearchState> {\n    constructor(props: ISearchProps) {\n        super(props);\n\n        let sessionSearch = sessionStorage.getItem('search');\n        if (isNull(sessionSearch)) {\n            this.state = {\n                title: '',\n                keyterms: [],\n                locations: [],\n                startDate: null,\n                endDate: null,\n                articleList: undefined,\n                currentPage: 1,\n                showCount: 10,\n                articleCount: 0,\n                listLength: 0\n            }\n        } else {\n            let sessionState = JSON.parse(sessionSearch);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n    }\n\n    componentWillMount() {\n        let sessionSearch = sessionStorage.getItem('search');\n        if (isNull(sessionSearch)) this.onSearch();\n    }\n\n    private onSearch() {\n        let apiFilterState: IFilterOptions = createApiFilterState(this.state);\n        \n        this.setState({\n            articleList: null,\n            articleCount: null,\n            listLength: 0\n        })\n\n        api.getFilteredReports(apiFilterState, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.setState({\n                    articleList: response,\n                    articleCount: (!isNullOrUndefined(response)) ? response.length : 0,\n                    currentPage: 1,\n                    listLength: response.length\n                });\n                sessionStorage.setItem('search', JSON.stringify(this.state));\n            }\n        });\n    }\n\n    private handleChange(event: any) {\n        this.setState(event);\n    }\n\n    private paginateArticleList() {\n        if (!isNullOrUndefined(this.state.articleList)) {\n            let end: number = this.state.currentPage * this.state.showCount;\n            let start: number = end - this.state.showCount;\n            let sessionSearch = sessionStorage.getItem('search');\n            if (!isNull(sessionSearch)) {\n                let sessionState = JSON.parse(sessionSearch);\n                sessionState.currentPage = this.state.currentPage;\n                sessionState.showCount = this.state.showCount;\n                sessionStorage.setItem('search', JSON.stringify(sessionState));\n            }\n            return this.state.articleList.slice(start, end);\n        } else {\n            return this.state.articleList;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                            <h1>SEARCH</h1>\n                            <div id=\"collapse-filters\" className=\"Filter-panel\">\n                                <KeytermSearch keyterms={this.state.keyterms} updateKeyterm={this.handleChange}/>\n                                <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                                <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                                <Button style={{margin:'8px', height: '38px'}}onClick={this.onSearch}>Search Articles</Button>\n                            </div>\n                            <Form.Text className=\"text-muted\">\n                                * All filters are optional.\n                            </Form.Text>\n                            <hr />\n                            <ArticleList articleList={this.paginateArticleList()} listLength={this.state.listLength}/>\n                            <PaginateSearch\n                                articleCount={this.state.articleCount}\n                                currentPage={this.state.currentPage}\n                                showCount={this.state.showCount}\n                                updatePaginate={this.handleChange}\n                            />\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface ISearchProps {\n}\n\ninterface ISearchState {\n    title: string;\n    keyterms: Array<string>;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    articleList: Array<IArticleState> | null | undefined;\n    currentPage: number;\n    showCount: number;\n    articleCount: number | null;\n    listLength: number;\n}\n","import React from 'react';\nimport '../css/Home.css';\nimport { isNullOrUndefined } from 'util';\nimport { Table } from 'react-bootstrap';\nimport { cleanDate, capitalize } from './util';\n\nexport default class EventReport extends React.Component<IEventReportProps, IEventReportState> {\n    constructor(props: IEventReportProps) {\n        super(props);\n    }\n  \n    private checkLocation(location: LocationBasic | LocationAdvanced) {\n        if (!isNullOrUndefined(location['geonames-id'])) {\n            return <tr><th>Location</th><td>{location['geonames-id']}</td></tr>;\n        } else {\n            return this.cleanLocation(location);\n        }\n    }\n\n    private cleanLocation(location: LocationBasic) {\n        let locationArray: Array<string> = [];\n        if (!isNullOrUndefined(location.location) && location.location != '') {\n            locationArray = [location.location];\n            if (location.location.indexOf(';') != -1) {\n                locationArray = location.location.split(';');\n            }\n            for (let i = 0; i < locationArray.length; i++) {\n                if (!isNullOrUndefined(location.country) && location.country != '') {\n                    locationArray[i] += ',' + location.country;\n                }\n                locationArray[i] = locationArray[i].replace(/,/g, ', ');\n            }\n        } else if (!isNullOrUndefined(location.country) && location.country != '') {\n            locationArray = [location.country];\n        }\n        if (locationArray.length != 0) {\n            return <tr><th>Location</th>{locationArray.map(value => <td>{value}</td>)}</tr>;\n        }\n    }\n\n    private checkType(type: string, colSpan: number) {\n        if (!isNullOrUndefined(type) && type != '') {\n            return <tr><th>Event type</th><td colSpan={colSpan}>{capitalize(type)}</td></tr>;\n        } else {\n            return <tr><th>Event type</th><td colSpan={colSpan}>Unknown</td></tr>;\n        }\n    }\n\n    private checkDate(date: string, colSpan: number) {\n        if (!isNullOrUndefined(date) && date != '') {\n            let temp = (date.indexOf(' to ') != 1) ? date.split(' to ') : [date];\n            for (let i = 0; i < temp.length; i++) {\n                temp[i] = cleanDate(temp[i]);\n            }\n            return <tr><th>Date</th><td colSpan={colSpan}>{temp.join(' to ')}</td></tr>;\n        }\n    }\n\n    private checkNumberAffected(affected: number, colSpan: number) {\n        if (!isNullOrUndefined(affected)) {\n            return <tr><th>Number affected</th><td colSpan={colSpan}>{affected}</td></tr>\n        }\n    }\n\n    private checkColSpan(location: LocationAdvanced | LocationBasic) {\n        let colSpan = 1;\n        if (!isNullOrUndefined(location.location) && location.location.indexOf(';') != -1) {\n            colSpan = location.location.split(';').length;\n        }\n        return colSpan;\n    }\n\n    render() {\n        let colSpan = this.checkColSpan(this.props.location);\n        return (\n            <div>\n                <Table striped bordered hover style={{marginBottom: '0px'}}>\n                    <tbody>\n                        {this.checkType(this.props.type, colSpan)}\n                        {this.checkDate(this.props.date, colSpan)}\n                        {this.checkLocation(this.props.location)}\n                        {this.checkNumberAffected(this.props[\"number-affected\"], colSpan)}\n                    </tbody>\n                </Table>\n            </div>\n            \n        );\n    }\n}\n\ninterface LocationAdvanced {\n    'geonames-id': string;\n    location: string;\n    country: string;\n    [key: string]: string;\n}\n\ninterface LocationBasic {\n    country: string;\n    location: string;\n    [key: string]: string;\n}\n\ninterface IEventReportProps {\n  type: string;\n  date: string;\n  location: LocationAdvanced | LocationBasic;\n  'number-affected': number;\n}\n\ninterface IEventReportState {    \n}","import React from 'react';\nimport '../css/Search.css';\nimport EventReport from './EventReport';\nimport { Card } from 'react-bootstrap';\n\nexport default class EventReportList extends React.Component<IEventReportListProps, IEventReportListState>{\n    constructor(props: IEventReportListProps) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <p><b>Event Reports:</b></p>\n                {this.props.reports.map((report: any) => {\n                    return <div className=\"EventReport-division\">\n                        <Card>\n                            <Card.Body className=\"EventReport-card\">\n                                <EventReport {...report} />\n                            </Card.Body>\n                        </Card>\n                    </div>\n                })}\n            </div>\n        );\n    }\n}\n\ninterface IEventReportListProps {\n    reports: Array<EventReport>;\n}\n\ninterface IEventReportListState {    \n}","import React from 'react';\nimport '../css/Search.css';\nimport EventReport from './EventReport';\nimport { isNull } from 'util';\nimport { Badge } from 'react-bootstrap';\nimport EventReportList from './EventReportList';\n\nexport default class Report extends React.Component<IReportProps, IReportState> {\n  constructor(props: IReportProps) {\n    super(props);\n  }\n  \n    private listCheck(check: Array<string>, type:string) {\n        let listProp = null;\n        if (!isNull(check) && check.length != 0) {\n            if (!Array.isArray(check)) check = [check];\n            listProp = check.map((item: string) => {\n                return <Badge className=\"Badge-division\" variant=\"secondary\">{item}</Badge>\n            });\n            listProp = (<p><b>{type}:</b> {listProp}</p>);\n        }\n        return listProp;\n    }\n\n  private commentCheck(check: string) {\n        return (\n            (!isNull(check)) ? <p><b>Comments:</b> {check}</p> : null\n        )\n  }\n\n  render() {\n    let reported_events = (this.props.reported_events.length != 0) ?\n        <EventReportList reports={this.props.reported_events}/> : null;\n\n    return (\n        <div>\n            {this.listCheck(this.props.disease, 'Disease')}\n            {this.listCheck(this.props.syndrome, 'Syndrome')}\n            {reported_events}\n            {this.commentCheck(this.props.comment)}\n        </div>\n    );\n  }\n}\n\ninterface IReportProps {\n  disease: Array<string>;\n  syndrome: Array<string>;\n  reported_events: Array<EventReport>\n  comment: string;\n}\n\ninterface IReportState {    \n}","import React from 'react';\nimport '../css/Home.css';\nimport Report from './Report';\nimport { ListGroup } from 'react-bootstrap';\nimport { BackendAPI } from '../API'\n\nlet api = new BackendAPI();\n\nexport default class ReportList extends React.Component<IReportListProps, IReportListState>{\n  constructor(props: IReportListProps) {\n    super(props);\n  }\n  \n  render() {\n    let reports;\n    api.getAllReports((error: any, response: any) => {\n        if (error) {\n            if (error.response) {\n                console.log('error message', error);\n            } else {\n                console.log('error message', error.message);\n            }\n        }\n        reports = response;\n    });\n\n    return (\n        <div>\n            <h3>Disease Reports</h3>\n            <ListGroup>\n                {this.props.reports.map((report: any) => {\n                    return <ListGroup.Item>\n                        <Report {...report} />\n                    </ListGroup.Item>\n                })}\n            </ListGroup>\n        </div>\n    );\n  }\n}\n\ninterface IReportListProps {\n  reports: Array<Report>;\n}\n\ninterface IReportListState {    \n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport Report from './Report';\nimport ReportList from './ReportList';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Header from './Header';\nimport { isNullOrUndefined } from 'util';\n\nexport default class Article extends React.Component<IArticleProps, IArticleState>{\n    constructor(props: IArticleProps) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState(this.props.location.state);\n    }\n\n    private renderRedirect() {\n        if (isNullOrUndefined(this.state)) return true;\n        return false;\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.renderRedirect() ? <Redirect to='/' /> :\n                <div className=\"bg\">\n                    <Header />\n                    <body id=\"top\">\n                        <div className=\"Main\">\n                            <Link to='/search'><Button variant=\"secondary\">Back to Search</Button></Link>\n                            <br /><br />\n                            <h1>{this.state.headline}</h1>\n                            <p><i>URL: <a href={this.state.url} target=\"_blank\">{this.state.url}</a></i></p>\n                            <p><i>DOP: {this.state.date_of_publication}</i></p>\n                            <p>{this.state.main_text}</p>\n                            <ReportList reports={this.state.reports} />\n                        </div>\n                    </body>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\ninterface IArticleProps {\n    location: {state: IArticleState};\n}\n\nexport interface IArticleState {\n    url: string;\n    date_of_publication: string;\n    headline: string;\n    main_text: string;\n    reports: Array<Report>;   \n}","import React from 'react';\nimport '../css/Basic.css';\nimport Select from 'react-select';\nimport { BackendAPI } from '../API';\n\nlet api = new BackendAPI();\n\nexport default class DiseaseSearch extends React.Component<IDiseaseSearchProps, IDiseaseSearchState> {\n    constructor(props: IDiseaseSearchProps) {\n        super(props);\n\n        this.state = {\n            filterType: 0,\n            value: this.props.disease,\n            filterOptions: []\n        }\n    }\n\n    componentWillMount() {\n        api.getDiseases((error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.setState({filterOptions: this.addFilterOptions(response)});\n            }\n        });\n    }\n\n    private handleChange(event: any) {\n        this.setState({ value: event.label });\n        this.props.updateDisease({ disease: event.label });\n    }\n\n    private addFilterOptions(response: Array<{name: string}>) {\n        let diseases: Array<Object> = response.map((disease: {name: string}) => {\n            return { label: disease.name, value: disease.name, type: 'disease' }\n        });\n        return diseases;\n    }\n\n    render() {\n        return (\n            <div className=\"Search-element\">\n                <Select\n                    options={this.state.filterOptions.sort((a: any, b: any) => { return a.value.localeCompare(b.value) })}\n                    classNamePrefix=\"select\"\n                    placeholder=\"Select disease...\"\n                    onChange={(e: any) => this.handleChange(e)}\n                    value={(this.state.value != '') ? { label: this.state.value, value: this.state.value } : null}\n                    theme={(theme) => ({\n                        ...theme,\n                        borderRadius: 3,\n                        colors: {\n                        ...theme.colors,\n                            primary25: 'rgb(162, 156, 194)',\n                            primary: 'rgb(162, 156, 194)',\n                        },\n                    })}\n                />\n            </div>\n        );\n    }\n}\n\ninterface IDiseaseSearchProps {\n    updateDisease: (event: object) => void;\n    disease: string;\n}\n\ninterface IDiseaseSearchState {\n    filterType: number;\n    value: string;\n    filterOptions: Array<Object>;\n}","import React from 'react';\nimport { Popover, OverlayTrigger, Button } from 'react-bootstrap';\n\nconst popover = (description: string) => (\n    <Popover id=\"popover-basic\" style={{maxWidth: '400px'}}>\n      {description}\n    </Popover>\n  );\n  \nexport const Tooltip = (props: {description: string}) => (\n    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover(props.description)}>\n        <Button variant=\"outline-secondary\">?</Button>\n    </OverlayTrigger>\n);","import React from 'react';\nimport '../css/Basic.css';\nimport { LineChart, ResponsiveContainer, XAxis, YAxis, Line, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Tooltip as ChartTooltip } from './Tooltip';\nimport { Frequency } from './FrequencyGraph';\n\nconst types: {[key: string]: string} = {\n    WHO: \"#19a022\",\n    Twitter: \"#22d8d8\",\n    Google: \"#a02f19\"\n}\nexport default class FrequencyFormat extends React.Component<IFrequencyFormatProps, IFrequencyFormatState> {\n    constructor(props: IFrequencyFormatProps) {\n        super(props);\n    }\n\n  render() {\n    return (\n        <div className='Frequency-chart'>\n            <p>\n                <b>{this.props.title}</b>\n                <ChartTooltip description={'Frequency of mentions of disease within time range.'} />\n            </p>\n            <ResponsiveContainer height=\"95%\">\n                <LineChart data={this.props.chartData}>\n                    <XAxis label={{value: 'Dates', position: 'insideBottom', offset: -15}} dataKey=\"date\"/>\n                    <YAxis label={{value: 'Mentions count', position: 'insideLeft', angle: -90, offset: 0}} allowDecimals={false}/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Tooltip/>\n                    <Legend\n                    layout=\"horizontal\"\n                    align=\"center\"\n                    wrapperStyle={{\n                        paddingTop: \"20px\"\n                    }}/>\n                    {this.props.types.map((type: string, index: number) => {\n                        return <Line key={index} type=\"monotone\" dataKey={type} activeDot stroke={types[type]} />\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n  }\n}\n\ninterface IFrequencyFormatProps {\n    title: string;\n    chartData?: Array<Frequency>;\n    types: Array<string>;\n}\n\ninterface IFrequencyFormatState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport FrequencyFormat from './FrequencyFormat';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { shortenDate, capitalize } from './util';\n\nconst frequencyFilters: Array<string> = ['day', 'month', 'year'];\n\nexport default class FrequencyGraph extends React.Component<IFrequencyGraphProps, IFrequencyGraphState> {\n    constructor(props: IFrequencyGraphProps) {\n        super(props);\n        this.state = {\n            frequencyFilter: frequencyFilters[0],\n            frequencyData: (!isNullOrUndefined(this.props.frequencyData)) ? this.props.frequencyData : []\n        };\n    }\n\n    componentWillReceiveProps(newProps: any) {\n        if (!isNullOrUndefined(newProps.frequencyData) && newProps.frequencyData !== this.state.frequencyData) {\n            this.setState({frequencyData: newProps.frequencyData});\n        }\n    }\n\n    private convertFrequency(interval: string) {\n        let data = this.props.frequencyData;\n        if (!isNullOrUndefined(data) && this.state.frequencyFilter != interval) {\n            if (interval == 'day') {\n                this.setState({frequencyData: data, frequencyFilter: interval});\n            } else {\n                let start_date = new Date(data[0].date.replace(/x/g, '0'));\n                let end_date= new Date(data[data.length - 1].date.replace(/x/g, '0'));\n\n                let newFrequency: Array<Frequency> = [];\n                let counterDate = new Date(start_date.getFullYear(), start_date.getMonth(), 1);\n                if (interval == 'year') counterDate.setMonth(0);\n                while(counterDate <= end_date) {\n                    let countStr = new Date(counterDate.getTime() - counterDate.getTimezoneOffset() * 60000).toISOString();\n                    data.forEach((date: Frequency, i: number) => {\n                        let countInd = (interval == 'month') ? countStr.indexOf('-', countStr.indexOf('-') + 1) : countStr.indexOf('-');\n                        let countInterval = countStr.substring(0, countInd);\n                        if (date.date.indexOf(countInterval) !== -1) {\n                            let found = newFrequency.filter(e => e.date == countInterval);\n                            if (found.length == 0) {\n                                newFrequency.push({\n                                    date: countInterval,\n                                    WHO: date.WHO,\n                                    Twitter: date.Twitter,\n                                    Google: date.Google\n                                });\n                            } else {\n                                let num = newFrequency.indexOf(found[0]);\n                                newFrequency[num].date = newFrequency[num].date;\n                                for (let i = 0; i < this.props.types.length; i++) {\n                                    let freqType = newFrequency[num][this.props.types[i]] as number;\n                                    let dateType = date[this.props.types[i]] as number;\n                                    if (!isUndefined(freqType) && !isUndefined(dateType)) {\n                                        newFrequency[num][this.props.types[i]] = freqType + dateType;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                    if (interval == 'month') counterDate.setMonth(counterDate.getMonth() + 1);\n                    else counterDate.setFullYear(counterDate.getFullYear() + 1);\n                }\n\n                this.setState({frequencyData: newFrequency, frequencyFilter: interval});\n            }\n        }\n    }\n\n    private formatXAxis(date: string) {\n        let newDate: string = date;\n        if (date.indexOf('T') != -1) newDate = shortenDate(newDate);\n        newDate = newDate.split('-').reverse().join('/');\n        return newDate;\n    }\n\n    private cleanChartData(data?: Array<Frequency>) {\n        if (!isNullOrUndefined(data)) {\n            return data.map((value: Frequency) => {\n                return {\n                    WHO: value.WHO,\n                    Twitter: value.Twitter,\n                    Google: value.Google,\n                    date: this.formatXAxis(value.date)\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"frequency\">\n                <FrequencyFormat\n                    title={'Frequency of ' + capitalize(this.props.title) + ' mentions on ' + this.props.titleType}\n                    types={this.props.types}\n                    chartData={this.cleanChartData(this.state.frequencyData)}/>\n                <br></br>\n                <br></br>\n                <div>\n                    <div className=\"Date-frequency\">Date frequency:</div>\n                    <input type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[0])} name=\"frequencyFilter\" defaultChecked/>Day\n                    <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[1])} name=\"frequencyFilter\" />Month\n                    <input style={{marginLeft: '10px'}} type=\"radio\" onClick={() => this.convertFrequency(frequencyFilters[2])} name=\"frequencyFilter\" />Year\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IFrequencyGraphProps {\n    frequencyData: Array<Frequency> | null | undefined;\n    title: string;\n    titleType: string;\n    types: Array<string>;\n}\n\ninterface IFrequencyGraphState {\n    frequencyFilter: string;\n    frequencyData: Array<Frequency>;\n}\n\nexport interface Frequency {\n    date: string;\n    WHO?: number;\n    Google?: number;\n    Twitter?: number;\n    [key: string]: number | string | undefined;\n}","import React from 'react';\nimport '../css/Trends.css';\n\nexport default class Marker extends React.Component<IMarkerProps, IMarkerState> {\n    constructor(props: IMarkerProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        };\n    }\n\n  render() {\n      const checkHover = this.props.$hover;\n        return (\n            <div>\n                { checkHover ? (\n                <div className=\"Marker\">\n                    <div>\n                        <b>Location:</b> {this.props.location}<br/>\n                        <b>Number affected:</b> {this.props.number_affected}<br/>\n                        <b>Article mentions:</b> {this.props.article_count}<br/>\n                    </div>\n                </div>\n                ) : (<div></div>)}\n            </div>\n        );\n    }\n}\n\ninterface IMarkerProps {\n    $hover?: boolean;\n    lat: number;\n    lng: number;\n    location: string;\n    number_affected: number;\n    article_count: number;\n}\n\ninterface IMarkerState {\n    collapse: boolean;\n}","import React from 'react';\nimport '../css/Home.css';\nimport GoogleMapReact from 'google-map-react';\nimport { fitBounds } from 'google-map-react/utils';\nimport { Table } from 'react-bootstrap';\nimport Marker from './Marker';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { Tooltip } from './Tooltip';\n\ndeclare var google: any;\nlet mapsAPIkey = { key: 'GOOGLE_MAPS_API_KEY_HIDDEN' };\n\nexport default class HeatMap extends React.Component<IHeatMapProps, IHeatMapState> {\n    constructor(props: IHeatMapProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        };\n    }\n\n    private calculateBounds() {\n        const bounds = new google.maps.LatLngBounds();\n        let center = {lat: 0, lng: 0};\n        let zoom = 1;\n        if (isNullOrUndefined(this.props.locations)) return {center, zoom};\n        if (this.props.locations.length != 0) {\n            this.props.locations.forEach((marker: GeoPosition) => {\n                bounds.extend(new google.maps.LatLng(marker.lat, marker.lng));\n            });\n\n            let newBounds = {\n                ne: {\n                    lat: bounds.getNorthEast().lat(),\n                    lng: bounds.getNorthEast().lng()\n                },\n                sw: {\n                    lat: bounds.getSouthWest().lat(),\n                    lng: bounds.getSouthWest().lng()\n                }\n            }\n            let size = { width: 1000, height: 450 };\n            let {center, zoom} = fitBounds(newBounds, size);\n            return {center, zoom};\n        }\n\n        return {center, zoom};\n    }\n\n    render() {\n        let {center, zoom} = this.calculateBounds();\n        return (\n            <div id=\"heatmap\" className=\"Section-title\">\n                <p>\n                    <b>Heatmap of the occurences of {this.props.title}</b>\n                    <Tooltip description={`Shows the occurences of ${this.props.title} worldwide or within the geographical range of location inputs.`} />\n                </p>\n                <div style={{height: '700px'}}>\n                    <GoogleMapReact\n                        bootstrapURLKeys={mapsAPIkey}\n                        defaultCenter={{lat: 0, lng: 0}}\n                        defaultZoom={1}\n                        heatmapLibrary={true}\n                        heatmap={{\n                            positions: this.props.locations,\n                            options: {\n                                radius: 30,\n                                opacity: 0.6\n                            }\n                        }}\n                        center={center}\n                        zoom={zoom}\n                    >\n                        {this.props.locations.map(value =>\n                        <Marker\n                            lat={value.lat}\n                            lng={value.lng}\n                            location={!isUndefined(value.data) ? value.data.location : ''}\n                            number_affected={!isUndefined(value.data) ? value.data.number_affected : 0}\n                            article_count={!isUndefined(value.data) ? value.data.article_count: 0}\n\n                        />)}\n\n                    </GoogleMapReact>\n                </div>\n                <br></br>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Location</th>\n                            <th>Number affected</th>\n                            <th>Article mentions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.locations.length == 0 ? <tr>\n                            <td colSpan={3}>No results found</td>\n                        </tr> : <div></div>}\n                        {this.props.locations.map((value: GeoPosition) => \n                        (!isNullOrUndefined(value.data)) ?\n                        <tr>\n                            <td>{value.data.location}</td>\n                            <td>{value.data.number_affected}</td>\n                            <td>{value.data.article_count}</td>\n                        </tr> : <div></div>)}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport function assignWeight(numberAffected: number) {\n    const weightValues = [0, 10, 100, 250, 500, 750, 1000, 2000, 5000]\n    for (let i = weightValues.length; i != 0; i--) {\n        if (numberAffected > weightValues[i - 1]) return i;\n    }\n    return 0;\n}\n\ninterface IHeatMapProps {\n    title: string;\n    locations: Array<GeoPosition>;\n}\n\ninterface IHeatMapState {\n    collapse: boolean;\n}\n\nexport interface APIHeatmap {\n    location: string;\n    article_count: number;\n    number_affected: number;\n}\n\nexport interface GeoPosition {\n    lat: number;\n    lng: number;\n    weight?: number;\n    data?: APIHeatmap;\n}","import React from 'react';\nimport '../css/Analytics.css';\nimport { Tooltip as ChartTooltip } from './Tooltip';\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Legend, Bar, Tooltip } from 'recharts';\nimport { isUndefined, isNullOrUndefined } from 'util';\nimport { capitalize } from './util';\n\nexport default class HistogramGraph extends React.Component<IHistogramGraphProps, IHistogramGraphState> {\n    constructor(props: IHistogramGraphProps) {\n        super(props);\n    }\n\n    private createGraphRange() {\n        let graphRange = '';\n        if (!isNullOrUndefined(this.props.histogramData) &&\n            !isNullOrUndefined(this.props.histogramData.startDate) &&\n            !isNullOrUndefined(this.props.histogramData.endDate)) {\n            let startDate = this.props.histogramData.startDate.split('-').reverse().join('/');\n            let endDate = this.props.histogramData.endDate.split('-').reverse().join('/');\n            graphRange = 'from ' + startDate + ' to ' + endDate;\n        }\n        return graphRange;\n    }\n\n    render() {\n        let graphRange = this.createGraphRange();\n        return (\n            <div id=\"histogram\">\n                <div className=\"Histogram-chart\">\n                    <p>\n                        <b>Event histogram of {capitalize(this.props.title)} {graphRange}</b>\n                        <ChartTooltip description={`Overview of events across articles with a publication date within the inputted time range.\n                                                    The title range is the date range across the selected articles.`} />\n                    </p>\n                    <ResponsiveContainer width = '100%' height = '100%' >\n                        <BarChart data={!isNullOrUndefined(this.props.histogramData) && !isUndefined(this.props.histogramData.events) ?\n                                        this.props.histogramData.events : []}>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis label={{value: 'Event types', position: 'insideBottom', offset: -15}} dataKey=\"event\"/>\n                        <YAxis label={{value: 'Event type count', position: 'insideLeft', angle: -90, offset: 0}}/>\n                        <Tooltip/>\n                        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                        <Legend\n                        layout=\"horizontal\"\n                        align=\"center\"\n                        wrapperStyle={{\n                            paddingTop: \"20px\"\n                        }}/>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface IHistogramGraphProps {\n  histogramData: HistogramData | null | undefined;\n  title: string;\n}\n\ninterface IHistogramGraphState {\n}\n\nexport interface HistBar {\n  event: string;\n  count: number;\n}\n\nexport interface APIEvent {\n    start_date: string;\n    end_date: string;\n    death: number;\n    hospitalised: number;\n    infected: number;\n    presence: number;\n    recovered: number;\n    [key: string]: string | number;\n}\n\nexport interface HistogramData {\n    startDate: string;\n    endDate: string;\n    events: Array<HistBar>;\n}","import React from 'react';\nimport '../css/Basic.css';\nimport frequency from '../imgs/frequency.png';\nimport heatmap from '../imgs/heatmap.png';\nimport event from '../imgs/event.png';\nimport media from '../imgs/media.png';\nimport trends from '../imgs/trends.png';\nimport { CardDeck, Card } from 'react-bootstrap';\n\nexport default class PageMenu extends React.Component<IPageMenuProps, IPageMenuState> {\n    constructor(props: IPageMenuProps) {\n        super(props);\n    }\n\n    render() {\n        let cardStyle = { width: '300px', maxWidth: '300px', backgroundColor: 'darkslateblue', float: \"left\" as \"left\", color: 'white', margin: '5px', height: '370px'};\n        return (\n        <div style={{textAlign: 'center'}}>\n            <h4>Report Features</h4>\n            <div className=\"Page-menu\">\n                <CardDeck>\n                    <Card style={cardStyle}>\n                        <Card.Img variant=\"top\" src={frequency} />\n                        <Card.Body>\n                            <Card.Title>Frequency Mentions</Card.Title>\n                            <Card.Text>\n                                Frequency graph of the number of mentions of the selected disease across the inputted time range.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    {this.props.type == 'trends' ? (\n                    <div>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={media} />                    \n                            <Card.Body>\n                                <Card.Title>Media Coverage</Card.Title>\n                                <Card.Text>\n                                    Headlines and tweets mentioning the selected disease.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={trends} />                    \n                            <Card.Body>\n                                <Card.Title>Google Trends</Card.Title>\n                                <Card.Text>\n                                    Google search trends involving the selected disease.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div> ) : (\n                    <div>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={heatmap} />                    \n                            <Card.Body>\n                                <Card.Title>Heatmap</Card.Title>\n                                <Card.Text>\n                                    Shows the occurences of the selected disease within the geographical range.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card style={cardStyle}>\n                            <Card.Img variant=\"top\" src={event} />\n                            <Card.Body>\n                                <Card.Title>Event histogram</Card.Title>\n                                <Card.Text>\n                                    Histogram graph of the event types of the disease for WHO articles within inputted time range.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div> )}\n                </CardDeck>\n            </div>\n        </div>\n        );\n    }\n}\n\ninterface IPageMenuProps {\n    type: string;\n}\n\ninterface IPageMenuState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport TimeSearch from './TimeSearch';\nimport LocationSearch from './LocationSearch';\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport DiseaseSearch from './DiseaseSearch';\nimport { isNull, isNullOrUndefined, isUndefined } from 'util';\nimport Header from './Header';\nimport { BackendAPI } from '../API';\n\nimport FrequencyGraph, { Frequency } from './FrequencyGraph';\nimport HeatMap, { APIHeatmap, GeoPosition, assignWeight } from './Heatmap';\nimport HistogramGraph, { HistBar, APIEvent, HistogramData } from './HistogramGraph';\nimport loading from '../imgs/loading1.gif';\nimport { parseDates, stringifyDates, createApiFilterState, shortenDate, capitalize } from './util';\nimport PageMenu from './PageMenu';\n\ndeclare var google: any;\nlet epiAPI = new BackendAPI();\nconst sections = ['frequency', 'heatmap', 'event'];\nlet geoCoder = new google.maps.Geocoder();\n\n\nexport default class Analytics extends React.Component<IAnalyticsProps, IAnalyticsState> {\n    constructor(props: IAnalyticsProps) {\n        super(props);\n        let sessionAnalyze = sessionStorage.getItem('analyze');\n        if (isNull(sessionAnalyze)) {\n            this.state = {\n                disease: '',\n                locations: [],\n                startDate: null,\n                endDate: null,\n                frequencyData: undefined,\n                heatmapPositions: undefined,\n                histogramData: undefined,\n                title: '',\n                displaySection: sections[0]\n            };\n        } else {\n            let sessionState = JSON.parse(sessionAnalyze);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onAnalyze = this.onAnalyze.bind(this);\n    }\n\n    private onAnalyze() {\n        this.setState({\n            heatmapPositions: null,\n            frequencyData: null,\n            histogramData: null,\n            displaySection: sections[0]\n        });\n        let apiFilterState = createApiFilterState(this.state);\n        epiAPI.getAnalyticReport(apiFilterState, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                this.createHeatMapData(response.heat_map.locations);\n                this.setState({\n                    frequencyData: this.createFrequencyData(response.frequency_graph.frequency),\n                    histogramData: this.createHistogramData(response.event_graph),\n                    title: this.state.disease\n                });\n            }\n        });\n    }\n\n    private createHistogramData(apiEvent: APIEvent) {\n        const histogramEvents: Array<HistBar> = [];\n        const events = ['death', 'hospitalised', 'infected', 'presence', 'recovered'];\n        for (let i = 0; i < events.length; i++) {\n            histogramEvents.push({\n                event: events[i],\n                count: apiEvent[events[i]] as number\n            });\n        }\n        return {\n            startDate: apiEvent.start_date,\n            endDate: apiEvent.end_date,\n            events: histogramEvents\n        }\n    }\n\n    private createHeatMapData(apiHeatmap: Array<APIHeatmap>) {\n        let heatmapData: Array<GeoPosition> = [];\n        this.setState({heatmapPositions: []})\n        for (let i = 0; i < apiHeatmap.length; i++) {\n            geoCoder.geocode({address: apiHeatmap[i].location}, (results: any, status: any) => {\n                let temp = {lat: 0, lng: 0, weight: 0, data: apiHeatmap[i]};\n                if (status === google.maps.GeocoderStatus.OK) {\n                    temp = {\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng(),\n                        weight: assignWeight(apiHeatmap[i].number_affected),\n                        data: apiHeatmap[i]\n\n                    };\n                }\n                if (!isNullOrUndefined(this.state.heatmapPositions)) {\n                    this.setState({heatmapPositions: this.state.heatmapPositions.concat([temp])});\n                }\n            });\n        }\n        return heatmapData;\n    }\n\n    private createFrequencyData(apiFrequency: Array<APIFrequency>) {\n        let count = (!isNull(this.state.startDate)) ? new Date(this.state.startDate) : new Date(2017, 0, 1);\n        let endDate = (!isNull(this.state.endDate)) ? new Date(this.state.endDate) : new Date();\n        endDate.setHours(0, 0, 0, 0);\n\n        let countStr: string = stringifyDates(count, 'startDate');\n        let endStr: string = stringifyDates(endDate, 'endDate');\n        countStr =  shortenDate(countStr);\n        endStr = shortenDate(endStr);\n\n        let freqArray: Array<Frequency> = [];\n        let temp: Frequency = { date: countStr, WHO: 0, Google: 0, Twitter: 0 };\n\n        while (count <= endDate) {\n            temp = { date: countStr, WHO: 0, Google: 0, Twitter: 0 };\n            freqArray.push(temp);\n            let sameDate = apiFrequency.filter(value => value.date == countStr);\n            if (sameDate.length != 0) temp.WHO = sameDate[0].count;\n            count.setDate(count.getDate() + 1);\n            count.setHours(0, 0, 0, 0);\n            countStr =  stringifyDates(count, 'startDate').substring(0, countStr.length);\n        }\n        return freqArray;\n    }\n\n    private handleChange(event: any) {\n        this.setState(event);\n    }\n\n    private checkInputs() {\n        return (this.state.disease.length == 0);\n    }\n\n    private changeSection(section: number) {\n        if (this.state.displaySection != sections[section]) {\n            this.setState({displaySection: sections[section]});\n        }\n    }\n\n    private checkLoading() {\n        if (isNull(this.state.frequencyData) || isNull(this.state.frequencyData) ||\n            isNull(this.state.heatmapPositions)) {\n          return <img src={loading} className=\"loading\" alt=\"loading\" />;\n        } else if (isUndefined(this.state.frequencyData) && isUndefined(this.state.histogramData) &&\n            isUndefined(this.state.heatmapPositions)) {\n                return true;\n        }\n        sessionStorage.setItem('analyze', JSON.stringify(this.state));\n        return false;\n    }\n\n    render() {\n        let display = (this.checkLoading() == false) ? 'block' : 'none';\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                        <h1>ANALYZE</h1>\n                        <div id=\"collapse-filters\" className=\"Filter-panel\">\n                            <DiseaseSearch disease={this.state.disease} updateDisease={this.handleChange}/>\n                            <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                            <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} updateTime={this.handleChange}/>\n                            <Button disabled={this.checkInputs()} onClick={this.onAnalyze}>Create Analytics</Button>\n                        </div>\n                        <Form.Text className=\"text-muted\">\n                                * Disease filter is required. Other filters are optional.\n                        </Form.Text>\n                        <hr />\n                        {this.checkLoading()}\n                        <div style={{display: display}}>\n                            <ButtonGroup vertical className=\"Report-menu\">\n                                <Button size=\"lg\" className=\"Report-title\">{capitalize(this.state.title)} Analytics</Button>\n                                <Button variant={this.state.displaySection == 'frequency' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(0)}>Frequency Mentions</Button>\n                                <Button variant={this.state.displaySection == 'heatmap' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(1)}>Heatmap</Button>\n                                <Button variant={this.state.displaySection == 'event' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(2)}>Event Histogram</Button>\n                            </ButtonGroup>\n                            <div className=\"Report-display\">\n                                <div style={{display: this.state.displaySection == 'frequency' ? 'block' : 'none'}}>\n                                    <FrequencyGraph\n                                        title={this.state.title}\n                                        titleType='articles at WHO'\n                                        types={['WHO']}\n                                        frequencyData={this.state.frequencyData}\n                                    />\n                                </div>\n                                <div style={{display: this.state.displaySection == 'heatmap' ? 'block' : 'none'}}>\n                                    <HeatMap\n                                        title={this.state.title}\n                                        locations={isNullOrUndefined(this.state.heatmapPositions) ? [] : this.state.heatmapPositions}\n                                    />\n                                </div>\n                                <div style={{display: this.state.displaySection == 'event' ? 'block' : 'none'}}>\n                                    <HistogramGraph\n                                        title={this.state.title}\n                                        histogramData={this.state.histogramData}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div style={(display == 'none') && (this.checkLoading() == true) ? {display: 'block'} : {display: 'none'}}>\n                                <PageMenu type=\"analyze\" />\n                        </div>\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface IAnalyticsProps {\n}\n\ninterface IAnalyticsState {\n    disease: string;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    frequencyData: Array<Frequency> | null | undefined;\n    heatmapPositions: Array<GeoPosition> | null | undefined;\n    histogramData: HistogramData | null | undefined;\n    title: string;\n    displaySection: string;\n}\n\ninterface APIFrequency {\n    date: string;\n    count: number;\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios'\n\n\nexport interface IFilterOptions {\n    disease: string;\n    location: string;\n    startDate: string;\n    endDate: string;\n}\n\nexport default class GoogleAPI {\n    baseURL: string = 'https://newsapi.org/';\n    apiKey: string = 'GOOGLE_NEWS_API_KEY_HIDDEN';\n\n    getFilteredMedia(filter: IFilterOptions, cb:(err: any, res: any) => any) {\n        let q :string[] = [];\n        if (filter.disease) {\n            let temp: string = `q=\"${filter.disease}\"`;\n            if (filter.location) {\n                temp += `+\"${filter.location}\"`;\n            }\n            q.push(temp);\n        }\n        if (filter.startDate) {\n            q.push(`from=${filter.startDate}`);\n        }\n        if (filter.endDate){\n            q.push(`to=${filter.endDate}`);\n        }\n        q.push('pageSize=100');\n\n        if (q.length !== 0) {\n            q.push(`apiKey=${this.apiKey}`);\n            let query = q.join('&');\n            let url = `${this.baseURL}v2/everything?${query}`\n    \n            axios.get(url)\n                .then((response: AxiosResponse) => {\n                    cb(null, response.data)\n                })\n                .catch((error: AxiosError) => {\n                    cb(error, null)\n            });\n        }\n    }\n}\n","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Trends.css';\nimport { Card } from 'react-bootstrap';\nimport { isNull } from 'util';\n\nexport default class GoogleCard extends React.Component<IGoogleCardProps, IGoogleCardState> {\n    constructor(props: IGoogleCardProps) {\n        super(props);\n    }\n\n    private trimText(main_text: string, minCut: number) {\n        if (isNull(main_text)) return 'No description found.';\n        let cutCount: number = main_text.length;\n    \n        if (cutCount > minCut) {\n          cutCount = minCut;\n          while (cutCount < main_text.length && main_text.charAt(cutCount) != ' ') {\n            cutCount++;\n          }\n        }\n    \n        return main_text.substring(0, cutCount);\n    }\n\n    render() {\n        return (\n            <a href={this.props.url} className=\"link\" target=\"_blank\">\n            <Card className=\"Card-hover\">\n            <div className=\"Google-card\">\n                {!isNull(this.props.urlToImage) ? (\n                    <div style={{width: '200px'}}>\n                    <img className=\"Google-card-image\" src={this.props.urlToImage}/>\n                    </div>\n                ) : ( <div></div> )}\n                <div className=\"Google-card-text\">\n                    <h5 style={{textDecoration: 'underline'}}>{ this.trimText(this.props.title, 50) }</h5>\n                    <div style={{fontSize: 'small'}}>\n                        <i>{ this.props.source.name } • { this.props.publishedAt }</i>\n                        <p style={{marginTop: '5px'}}>{ this.trimText(this.props.description, 250) }...</p>\n                    </div>\n                </div>\n            </div>\n            </Card>\n            </a>\n        );\n    }\n}\n\ninterface IGoogleCardProps {\n    title: string;\n    description: string;\n    publishedAt: string;\n    source : { name: string };\n    url: string;\n    urlToImage: string;\n}\n\ninterface IGoogleCardState {\n}","import React from 'react';\nimport '../css/Trends.css';\nimport GoogleCard from './GoogleCard';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nexport default class GoogleCardList extends React.Component<IGoogleCardListProps, IGoogleCardListState> {\n    constructor(props: IGoogleCardListProps) {\n        super(props);\n    }\n\n    render() {\n        let reverseSortData: Array<GoogleCard> = [];\n        for (let i = this.props.data.length; i > 0; i--) reverseSortData.push(this.props.data[i - 1]);\n        return (\n            <div className=\"Media-list\">\n                <Card style={{height:\"100%\"}}>\n                    <Card.Header as=\"h5\">Google Articles and Headlines</Card.Header>\n                    <Card.Body style={{maxHeight: '725px', overflowY: 'auto'}}>\n                        <ListGroup variant=\"flush\">\n                            {reverseSortData.length == 0 ? 'No results found.' : <div></div>}\n                            {reverseSortData.map((value: any, index: number) => {\n                                return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                    <GoogleCard {...value}/>\n                                </ListGroup.Item>\n                            })}\n                        </ListGroup>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\ninterface IGoogleCardListProps {\n    data: Array<GoogleCard>;\n}\n\ninterface IGoogleCardListState {\n}","import React from 'react';\nimport '../css/Trends.css';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport TweetEmbed from 'react-tweet-embed';\n\nexport default class TweetList extends React.Component<ITweetListProps, ITweetListState> {\n    constructor(props: ITweetListProps) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"Media-list\">\n                <Card style={{height:\"100%\"}}>\n                    <Card.Header as=\"h5\">Tweets</Card.Header>\n                    <Card.Body style={{maxHeight: '725px', overflowY: 'auto'}}>\n                        <ListGroup variant=\"flush\" style={{marginTop: '-10px', marginBottom: '-10px'}}>\n                            {this.props.data.length == 0 ? 'No results found.' : <div></div>}\n                            {this.props.data.map((value: string, index: number) => {\n                                return <ListGroup.Item key={index} style={{display: 'block', marginRight: 'auto', marginLeft: 'auto'}}>\n                                    <TweetEmbed id={value} placeholder={'loading'}/>\n                                </ListGroup.Item>\n                            })}\n                        </ListGroup>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport function filterByLocation(tweets: Array<any>, locations: Array<string>) {\n    let filtered = tweets.map(value => value);\n    if (locations.length != 0) {\n        for (let i = 0; i < locations.length; i++) {\n            let multiLocation = locations[i].indexOf(',');\n            let location = locations[i];\n            if (multiLocation != -1) location = location.substring(0, multiLocation);\n            filtered = filtered.filter(value => (value.text.indexOf(location) != -1));\n        }\n    }\n    return filtered;\n}\n\ninterface ITweetListProps {\n    data: Array<string>;\n}\n\ninterface ITweetListState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport GoogleCardList from './GoogleCardList';\nimport TweetList from './TweetList';\nimport GoogleCard from './GoogleCard';\nimport { Tooltip } from './Tooltip';\n\nexport default class MediaCoverage extends React.Component<IMediaCoverageProps, IMediaCoverageState> {\n    constructor(props: IMediaCoverageProps) {\n        super(props);\n        this.state = {\n            collapse: true\n        }\n    }\n\n    render() {\n      return (\n            <div>\n                <p className=\"Section-title\">\n                    <b>Media coverage of {this.props.title}</b>\n                    <Tooltip description={`Media coverage of the disease from Twitter and Google News within the time range.`} />\n                </p>\n                <GoogleCardList data={this.props.googleData}/>\n                <TweetList data={this.props.tweetData}/>\n            </div>\n      );\n    }\n}\n\ninterface IMediaCoverageProps {\n    googleData: Array<GoogleCard>;\n    tweetData: Array<string>;\n    title: string;\n}\n\ninterface IMediaCoverageState {\n}","import React from 'react';\nimport '../css/Basic.css';\nimport '../css/Trends.css';\nimport TimeSearch from './TimeSearch';\nimport LocationSearch from './LocationSearch';\nimport { Button, ButtonGroup, Form } from 'react-bootstrap';\nimport DiseaseSearch from './DiseaseSearch';\nimport GoogleAPI from '../Google';\nimport { isNull, isUndefined } from 'util';\nimport FrequencyGraph, { Frequency } from './FrequencyGraph';\nimport MediaCoverage from './MediaCoverage';\nimport Header from './Header';\nimport { BackendAPI } from '../API';\nimport loading from '../imgs/loading1.gif';\nimport { Tooltip } from './Tooltip';\nimport { stringifyDates, createApiFilterState, parseDates, shortenDate, capitalize } from './util';\nimport { filterByLocation } from './TweetList';\nimport PageMenu from './PageMenu';\n\nlet newsAPI = new GoogleAPI();\nlet epiAPI = new BackendAPI();\ndeclare var trends: any;\nconst sections = ['frequency', 'media', 'gTrends'];\nconst gSections = [\n    {div: 'gTrends', widget: 'TIMESERIES'},\n    {div: 'gTopics', widget: 'RELATED_TOPICS'},\n    {div: 'gQueries', widget: 'RELATED_QUERIES'}\n];\n\nexport default class Trends extends React.Component<ITrendsProps, ITrendsState> {\n    constructor(props: ITrendsProps) {\n        super(props);\n        let sessionTrends = sessionStorage.getItem('trends');\n        if (isNull(sessionTrends)) {\n            this.state = {\n                title: '',\n                disease: '',\n                locations: [],\n                startDate: null,\n                endDate: null,\n                googleArticles: [],\n                frequencyData: undefined,\n                tweets: [],\n                googleCheck: 0,\n                twitterCheck: 0,\n                displaySection: 'frequency'\n            };\n        } else {\n            let sessionState = JSON.parse(sessionTrends);\n            sessionState.startDate = parseDates(sessionState.startDate);\n            sessionState.endDate = parseDates(sessionState.endDate);\n            this.state = sessionState;\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onTrends = this.onTrends.bind(this);\n        this.getGoogleData = this.getGoogleData.bind(this);\n    }\n\n    componentDidMount() {\n        if (!isNull(sessionStorage.getItem('trends'))) this.getGoogleTrends();\n    }\n\n    private getGoogleTrends(){\n        let startDate = stringifyDates(this.state.startDate, 'startDate');\n        let endDate = stringifyDates(this.state.endDate, 'endDate');\n        startDate = shortenDate(startDate);\n        endDate = shortenDate(endDate);\n        let geo = \"\";\n        if (this.state.locations.length == 1) {\n            let location = this.state.locations[0];\n            let country = location.substring(location.lastIndexOf(\",\") + 1);\n            geo = epiAPI.getUNLOCode(country);\n        }\n\n        let widgetCalls = [];\n        for (let i = 0; i < gSections.length; i++) {\n            let div = document.getElementById(gSections[i].div);\n            if (!isNull(div)) div.innerHTML = '';\n            widgetCalls.push({div: div, type: gSections[i].widget});\n        }\n\n        for (let i = 0; i < widgetCalls.length; i++) {\n            trends.embed.renderExploreWidgetTo(widgetCalls[i].div, widgetCalls[i].type, {\n                \"comparisonItem\":[{\n                    \"keyword\":this.state.disease, \"geo\":geo, \"time\":`${startDate} ${endDate}`\n                }],\n                \"category\":0,\n                \"property\":\"\"\n            }, {\n                \"exploreQuery\":`q=${this.state.disease}&geo=${geo}&time=${startDate} ${endDate}`,\n                \"guestPath\":\"https://trends.google.com:443/trends/embed/\"\n            });\n        }\n    }\n\n    private getGoogleData(dateArray: Array<Frequency>) {\n        let apiFilterState = createApiFilterState(this.state);\n        apiFilterState.location = this.state.locations.join(' ').replace(',', ' ');\n        this.setState({\n            googleArticles: [],\n            title: capitalize(this.state.disease),\n            googleCheck: 0\n        });\n        let count: Date = new Date(apiFilterState.startDate);\n\n        for (let i = 0; i < dateArray.length; i++) {\n            let countStart = stringifyDates(count, 'startDate');\n            let countEnd = stringifyDates(count, 'endDate');\n            apiFilterState['startDate'] = countStart;\n            apiFilterState['endDate'] = countEnd;\n\n            newsAPI.getFilteredMedia(apiFilterState, (error: any, response: any) => {\n                if (error && error.response) {\n                    let message = error.response.data.message\n                    console.log('error message', message);\n                } else if (error) {\n                    console.log('error message', error.message);\n                } else {\n                    this.setState({googleArticles: this.state.googleArticles.concat(response.articles)});\n                    dateArray[i].Google = response.totalResults;\n                    this.setState({frequencyData: dateArray, googleCheck: this.state.googleCheck + 1});\n                }\n            });\n\n            count.setDate(count.getDate() + 1);\n            count.setHours(0,0,0,0);\n        }\n    }\n\n    private getTwitterData(dateArray: Array<Frequency>) {\n        this.setState({tweets: [], twitterCheck: 0});\n\n        let apiFilterState = createApiFilterState(this.state);\n        epiAPI.getTwitterData(apiFilterState, (error: any, response: any) => {\n            if (error && error.response) {\n                let message = error.response.data.message\n                console.log('error message', message);\n            } else if (error) {\n                console.log('error message', error.message);\n            } else {\n                let newTweets: Array<string> = [];\n                let diseaseTweets = JSON.parse(response).filter((value:any) => value.disease == apiFilterState.disease);\n                diseaseTweets = (diseaseTweets.length == 0) ? [] : diseaseTweets[0].tweets;\n                let filtered = filterByLocation(diseaseTweets, this.state.locations);\n                for (let i = 0; i < dateArray.length; i++) {\n                    let matched = filtered.filter(value => value.date == dateArray[i].date);\n                    dateArray[i].Twitter = matched.length;\n                    let ids = matched.map(value => (value.id));\n                    newTweets = newTweets.concat(ids);\n                }\n                this.setState({tweets: newTweets.reverse(), frequencyData: dateArray, twitterCheck: dateArray.length});\n            }\n        });\n    }\n\n    private onTrends() {\n        let dateArray = this.createDateArray();\n        this.setState({frequencyData: dateArray, displaySection: 'frequency'});\n        this.getGoogleTrends();\n        this.getGoogleData(dateArray);\n        this.getTwitterData(dateArray);\n        this.setState({frequencyData: dateArray});\n    }\n\n    private createDateArray() {\n        let startDate = stringifyDates(this.state.startDate, 'startDate');\n        let endDate = stringifyDates(this.state.endDate, 'endDate');\n        let count: Date = new Date(startDate);\n        let dateArray: Array<Frequency> = [];\n        let countStr =  stringifyDates(count, 'startDate').substring(0, startDate.indexOf('T'));\n        let endStr: string = shortenDate(endDate);\n        let temp: Frequency = {date: countStr};\n    \n        while (countStr != endStr) {\n            temp = { date: countStr, Twitter: 0, Google: 0 };\n            dateArray.push(temp);\n            count.setDate(count.getDate() + 1);\n            countStr =  stringifyDates(count, 'startDate').substring(0, startDate.indexOf('T'));\n        }\n        temp = { date: endStr, Twitter: 0, Google: 0 };\n        dateArray.push(temp);\n        return dateArray;\n    }\n    \n    private handleChange(event: any) {\n        this.setState(event);\n    }\n\n    private checkInputs() {\n        return (this.state.disease.length == 0 || isNull(this.state.startDate) || isNull(this.state.endDate));\n    }\n\n    private checkLoading() {\n        if (isUndefined(this.state.frequencyData)) {\n            return true;\n        } else if (this.state.googleCheck != this.state.frequencyData.length ||\n                    this.state.twitterCheck != this.state.frequencyData.length) {\n            return <img src={loading} className=\"loading\" alt=\"loading\" />;\n        }\n        sessionStorage.setItem('trends', JSON.stringify(this.state));\n        return false;\n    }\n\n    private changeSection(section: number) {\n        if (this.state.displaySection != sections[section]) {\n            this.setState({displaySection: sections[section]});\n        }\n    }\n\n    render() {\n        let currentDate = new Date();\n        let monthBack = new Date(new Date().setDate(currentDate.getDate() - 30));\n        let display = (this.checkLoading() == false) ? 'block' : 'none';\n        return (\n            <div className=\"bg\">\n                <Header />\n                <body id=\"top\">\n                    <div className=\"Main\">\n                        <h1>TRENDS</h1>\n                        <div id=\"collapse-filters\" className=\"Filter-panel\">\n                            <DiseaseSearch disease={this.state.disease} updateDisease={this.handleChange}/>\n                            <LocationSearch locations={this.state.locations} updateLocation={this.handleChange}/>\n                            <TimeSearch startDate={this.state.startDate} endDate={this.state.endDate} minDate={monthBack} updateTime={this.handleChange}/>\n                            <Button disabled={this.checkInputs()} onClick={() => this.onTrends()}>Create Trends</Button>\n                        </div>\n                        <Form.Text className=\"text-muted\">\n                                * All filters except location are required.\n                        </Form.Text>\n                        <hr />\n                        {this.checkLoading()}\n                        <div style={{display: display}}>\n                            <ButtonGroup vertical className=\"Report-menu\">\n                                <Button size=\"lg\" className=\"Report-title\">{capitalize(this.state.title)} Trends</Button>\n                                <Button variant={this.state.displaySection == 'frequency' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(0)}>Frequency Mentions</Button>\n                                <Button variant={this.state.displaySection == 'media' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(1)}>Media Coverage</Button>\n                                <Button variant={this.state.displaySection == 'gTrends' ? \"primary\" : \"secondary\"} onClick={() => this.changeSection(2)}>Google Trends</Button>\n                            </ButtonGroup>\n                            <div className=\"Report-display\">\n                                <div style={{display: this.state.displaySection == 'frequency' ? 'block' : 'none'}}>\n                                    <FrequencyGraph\n                                        title={this.state.title}\n                                        titleType={'Google News and Twitter'}\n                                        types={['Google', 'Twitter']}\n                                        frequencyData={this.state.frequencyData}/>\n                                </div>\n                                <div style={{display: this.state.displaySection == 'media' ? 'block' : 'none'}}>\n                                    <MediaCoverage title={this.state.title} googleData={this.state.googleArticles} tweetData={this.state.tweets}/>\n                                </div>\n                                <div style={{display: this.state.displaySection == 'gTrends' ? 'block' : 'none'}}>\n                                    <p className=\"Section-title\">\n                                        <b>Google Trends on {this.state.title}</b>\n                                        <Tooltip description={'Google trends reflects the trends of Google search terms within time range.'} />\n                                    </p>\n                                    <div id=\"gTrends\"/>\n                                    <br></br>\n                                    <div id=\"gTopics\" className=\"GTrends\"/>\n                                    <div id=\"gQueries\" className=\"GTrends\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={(display == 'none') && (this.checkLoading() == true) ? {display: 'block'} : {display: 'none'}}>\n                            <PageMenu type=\"trends\" />\n                        </div>\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\ninterface ITrendsProps {\n}\n\ninterface ITrendsState {\n    title: string;\n    disease: string;\n    locations: Array<string>;\n    startDate: Date | null;\n    endDate: Date | null;\n    googleArticles: Array<any>;\n    tweets: Array<string>;\n    frequencyData: Array<Frequency> | undefined;\n    googleCheck: number;\n    twitterCheck: number;\n    displaySection: string;\n}","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport Article from './components/Article';\nimport Analytics from './components/Analytics';\nimport Trends from './components/Trends';\n\ninterface IAppProps {}\n\ninterface IAppState {}\n\nexport default class App extends Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <main>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/article\" component={Article} />\n            <Route path=\"/analyze\" component={Analytics} />\n            <Route path=\"/trends\" component={Trends} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </HashRouter>\n      </main>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"media/loading1.df540fd9.gif\";"],"sourceRoot":""}