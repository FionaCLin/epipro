{"swagger": "2.0", "basePath": "/api/v1", "paths": {"/reports/filter": {"get": {"responses": {"404": {"description": "Page found"}, "400": {"description": "Bad request"}, "200": {"description": "Specific location info fetched successfully", "schema": {"$ref": "#/definitions/disease-report"}}}, "description": "This endpoint will return all the reports that satisfy user requirements.          When all parameters are empty, the endpoint will return all reports existed within the database.        \n All the parameters are optional, please follow the parameter descriptions when you want to pass any input.        \n * <b>Start-date/End-date</b>:         \n\t\t - The period that user is interested in. <strong>Reports are available between 2017-2019</strong>.        \n\t\t - No 'xx' values are accepted in YYYY-MM-DD format, you must enter valid dates matching the time range of the existing reports.        \n\t\t - When Start-date is empty, it will be set to default date. The default Start-date is 2017-01-01T00:00:00.        \n\t\t - When End-date is empty, it will be set to current date time as default.        \n\t\t<i>Input Format: YYYY-MM-DDTHH:MM:SS</i>        \n\n * <b>Key-terms</b>: The keywords that user wants to search. This is case insensitive.        \n\t\t<i>Input Format: Keyword1,Keyword2,..</i>        \n\n * <b>Location</b>: A location that user is concerned about. This is case insensitive and it is whole word search.        \n\t\t<i>Input Format: Syndey</i>        \n\n * <b>Start</b>: the number of the report to start the query from. The default value is 1        \n\t\t<i>Input\tFormat: positive integer only.</i>        \n\n * <b>Limit</b>: the numbers of report to return. The default value is 100.        \n\t\t<i>Input\tFormat: positive integer only.</i>", "operationId": "get_disease_reports_with_filter", "parameters": [{"in": "query", "description": "Start date of period of interest, FORMAT: YYYY-MM-DDTHH:MM:SS", "name": "Start-date", "type": "string"}, {"in": "query", "description": "End date of period of interest, FORMAT: YYYY-MM-DDTHH:MM:SS", "name": "End-date", "type": "string"}, {"in": "query", "description": "The key terms user want to search", "name": "Key-terms", "type": "string"}, {"in": "query", "description": "A location(city/country/state etc.) that user is interested in", "name": "Location", "type": "string"}, {"in": "query", "description": "Start from the n-th report", "name": "Start", "type": "string"}, {"in": "query", "description": "Limit to the number of responsed reports", "name": "Limit", "type": "string"}], "tags": ["EpiPro"]}}, "/reports/key-terms/{term_type}": {"get": {"responses": {"404": {"description": "No data found"}, "400": {"description": "Bad request, check the parameters"}, "200": {"description": "Key term list fetched successfully", "schema": {"$ref": "#/definitions/key_term"}}}, "description": "This endpoint will return all predefined key terms from our database         in case user doesn't know what to search.        \n * <b>terms-type</b>: the type of each key-terms and only two types <i>general</i> or <i>specific</i> are available.        \n\t\t - <i>general</i> is a wilder range keyword        \n\t\t - <i>specific</i> refers to a limited but detailed range. So the category can use to further filter this type of key-terms        \n * <b>category</b> each key-term can be either <i>none</i> or <i>A Agents</i>, additional category can create for extra data source fetching        \n both <i>general</i> and <i>specific</i> are case insensitive.", "operationId": "get_key_terms", "parameters": [{"name": "term_type", "in": "path", "required": true, "type": "string", "description": "Can ONLY be [general] or [specific]"}, {"in": "query", "description": "Optional, find out A agent keywords", "name": "category", "type": "string"}], "tags": ["EpiPro"]}}, "/reports/locations/all": {"get": {"responses": {"404": {"description": "No data found"}, "400": {"description": "Bad request"}, "200": {"description": "Data fetched successfully", "schema": {"$ref": "#/definitions/location_info"}}}, "description": "Get all the disease related locations that occured in all disease reports we have.", "operationId": "get_locations", "tags": ["EpiPro"]}}, "/reports/locations/{area}": {"get": {"responses": {"404": {"description": "No data found"}, "400": {"description": "Bad request"}, "200": {"description": "Specific location info fetched successfully", "schema": {"$ref": "#/definitions/location_info"}}}, "description": "Get the location info with an given area name", "operationId": "get_locations_with_area", "parameters": [{"name": "area", "in": "path", "required": true, "type": "string", "description": "a place you want to find either country or state or city"}], "tags": ["EpiPro"]}}}, "info": {"title": "EpiPro REST API Documentation", "version": "1.0", "description": "This is a EpiPro App REST API.\r\n SENG3011 workshop project"}, "produces": ["application/json"], "consumes": ["application/json"], "tags": [{"name": "EpiPro", "description": "Default namespace"}], "definitions": {"location_info": {"properties": {"country": {"type": "string"}, "state": {"type": "string"}, "city": {"type": "string"}}, "type": "object"}, "key_term": {"properties": {"keyTerm_id": {"type": "integer"}, "type": {"type": "string", "example": "general", "enum": ["general", "specific"]}, "category": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "disease-report": {"properties": {"url": {"type": "string"}, "date_of_publication": {"type": "string", "format": "date-time"}, "headline": {"type": "string"}, "main_text": {"type": "string"}, "reports": {"type": "array", "items": {"$ref": "#/definitions/report"}}}, "type": "object"}, "report": {"properties": {"disease": {"type": "array", "items": {"type": "string"}}, "syndrome": {"type": "array", "items": {"type": "string"}}, "reported_events": {"type": "array", "items": {"$ref": "#/definitions/report-event"}}, "comment": {"type": "string"}}, "type": "object"}, "report-event": {"properties": {"type": {"type": "string"}, "date": {"type": "string", "format": "date-time"}, "location": {"$ref": "#/definitions/location_detail"}, "number-affected": {"type": "integer"}}, "type": "object"}, "location_detail": {"properties": {"country": {"type": "string"}, "location": {"type": "string"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}
